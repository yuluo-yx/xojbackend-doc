{
  "version": "https://jsonfeed.org/version/1.1",
  "title": "XOJ后台管理系统文档",
  "home_page_url": "https://hcode.top/xojbackend-doc/",
  "feed_url": "https://hcode.top/xojbackend-doc/feed.json",
  "items": [
    {
      "title": "Home",
      "url": "https://hcode.top/xojbackend-doc/",
      "id": "https://hcode.top/xojbackend-doc/",
      "content_html": "<p><a href=\"http://openjdk.java.net/\" target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/badge/Java-1.8-informational\" alt=\"Java\" loading=\"lazy\"></a>\n<a href=\"https://spring.io/projects/spring-boot\" target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/badge/Spring Boot-2.7.3.RELEASE-success\" alt=\"Spring Boot\" loading=\"lazy\"></a>\n<a href=\"https://www.mysql.com/\" target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/badge/MySQL-8.0.28-blue\" alt=\"MySQL\" loading=\"lazy\"></a>\n<a href=\"https://redis.io/\" target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/badge/Redis-5.0.9-red\" alt=\"Redis\" loading=\"lazy\"></a>\n<a href=\"https://cn.vuejs.org/\" target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/badge/Vue-3.14.11-success\" alt=\"Vue\" loading=\"lazy\"></a>\n<a href=\"https://github.com/yuluo-yx/xojbackgroundmanagmentsystem\" target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/github/stars/yuluo-yx/xojbackgroundmanagmentsystem?style=social\" alt=\"Github Star\" loading=\"lazy\"></a>\n<a href=\"https://gitee.com/yuluo-yx/xojbackgroundmanagmentsystem\" target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"https://gitee.com/yuluo-yx/xojbackgroundmanagmentsystem/badge/star.svg\" alt=\"Gitee Star\" loading=\"lazy\"></a></p>\n<p>Xcode Online Judge (XOJ) : 基于前后端分离，分布式架构的在线测评平台（xoj），前端使用vue3，后端主要使用springboot，redis，mysql，nacos等技术，<strong>支持HDU、POJ、Codeforces（包括GYM）、AtCoder的Remote Judge判题，适配电脑端浏览，拥有讨论区与站内消息系统，支持私有训练、公开训练（题单），有独立安全的判题模式（普通测评、远程测评）和完善的做题功能</strong></p>\n<p><a href=\"https://github.com/yuluo-yx/xojbackground\" target=\"_blank\" rel=\"noopener noreferrer\">Github 仓库</a>\n<a href=\"https://gitee.com/yuluo-yx/xojbackgroundmanagmentsystem\" target=\"_blank\" rel=\"noopener noreferrer\">Gitee 仓库</a></p>\n<p>欢迎star收藏本项目对开发者的支持，谢谢<br>\n有任何部署问题或项目bug请发issue或者发送邮箱\n<strong>如果要对本项目进行商业化，请在页面底部的Powered by指向HOJ本仓库地址</strong></p>\n<p></p>\n<h2 id=\"联系我们\"> 联系我们</h2>\n<p>QQ: <a href=\"https://wpa.qq.com/msgrd?v=3&amp;uin=372347736&amp;site=qq&amp;menu=yes\" target=\"_blank\" rel=\"noopener noreferrer\">1481556636</a><br>\nemail: </p>\n<h2 id=\"系统更新日志\"> 系统更新日志</h2>\n<table>\n<thead>\n<tr>\n<th>时间</th>\n<th style=\"text-align:center\">更改内容</th>\n<th style=\"text-align:center\">更新者</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>2022年8月29日</td>\n<td style=\"text-align:center\">开始开发</td>\n<td style=\"text-align:center\">yuluo</td>\n</tr>\n<tr>\n<td>2022年10月3日</td>\n<td style=\"text-align:center\">上线测试</td>\n<td style=\"text-align:center\">yuluo</td>\n</tr>\n<tr>\n<td>2022年10月5日</td>\n<td style=\"text-align:center\">修复缓存问题，补充加载数据动画</td>\n<td style=\"text-align:center\">yuluo</td>\n</tr>\n<tr>\n<td>2022年10月7日</td>\n<td style=\"text-align:center\">优化后台安全，升级防止Xss攻击模块，加入重复提交验证并调整部分包结构</td>\n<td style=\"text-align:center\">yuluo</td>\n</tr>\n</tbody>\n</table>\n",
      "image": "https://img.shields.io/badge/Java-1.8-informational",
      "date_published": "2022-10-03T13:59:35.000Z",
      "date_modified": "2022-10-07T01:42:46.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "如何备份",
      "url": "https://hcode.top/xojbackend-doc/deploy/how-to-backup/",
      "id": "https://hcode.top/xojbackend-doc/deploy/how-to-backup/",
      "content_html": "<h1 id=\"如何备份\"> 如何备份</h1>\n<h3 id=\"_1-单体部署\"> 1. 单体部署</h3>\n<p>请到<code>~/hoj-deploy/standAlone</code>的目录下，即是与<code>docker-compose.yml</code>的文件同个目录下，该目录下有个叫<code>hoj</code>的文件夹，里面的文件夹介绍如下：</p>\n<div><pre><code>hoj\n├── file   \t\t# 存储了上传的图片、上传的临时题目数据、markdown引用的文件等文件\n├── judge  \t\t# 存储了每个提交题目的评测过程产生的数据\n├── log    \t\t# 存储了hoj-backend项目的运行日志\n├── testcase    # 存储了题目的评测数据\n└── data        \n    ├── mysql\n    │   ├── data # 存储了MySQL数据库的数据\n    ├── redis\n    │   ├── data # 存储了redis产生的快照数据\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br></div></div><p>那么，如果需要备份，只需将该<code>hoj</code>文件夹复制一份即可，在新的机器上重新部署新的hoj的时候，将该文件夹放置与<code>docker-compose.yml</code>一个目录下，使用<code>docker-compose up -d</code>即可启动恢复原来的数据。</p>\n<div><p>Tips</p>\n<p>注意：在新机器上启用备份的数据的操作顺序如下：</p>\n<ol>\n<li>先将<code>hoj</code>文件夹先复制到<code>~/hoj-deploy/standAlone</code>目录里面（保证该目录无<code>hoj</code>文件夹，干净！）</li>\n<li>然后修改<code>.env</code>文件的配置，主要是<code>Redis</code>,<code>Nacos</code>,<code>MySQL</code>等的密码配置，与原先备份<code>hoj</code>文件夹时的老机器的配置一致！</li>\n<li>最后再使用<code>docker-compose up -d</code>启动！</li>\n</ol>\n</div>\n",
      "date_published": "2022-10-03T13:59:35.000Z",
      "date_modified": "2022-10-04T14:21:17.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "快速部署",
      "url": "https://hcode.top/xojbackend-doc/deploy/docker/",
      "id": "https://hcode.top/xojbackend-doc/deploy/docker/",
      "content_html": "<h1 id=\"快速部署\"> 快速部署</h1>\n<p><strong>前提：已经在上一步准备好docker与docker-compose</strong></p>\n<div><p>Warning</p>\n<p>注意：如果正式部署运用HOJ，请修改默认配置的密码，例如Redis、MySQL、Nacos的密码！！！<br>\n<strong>使用默认密码可能会导致数据泄露，网站极其不安全！</strong></p>\n<p>如果当前服务器系统为CentOS7请先看：<a href=\"/deploy/faq/#一、部署在centos7系统中无法正常评测-如何解决\">centos7部署HOJ可能遇到的问题</a></p>\n</div>\n<h2 id=\"一、单机部署\"> 一、单机部署</h2>\n<ol>\n<li>\n<p>选择好需要安装的位置，运行下面命令</p>\n<div><pre><code><span>git</span> clone https://gitee.com/himitzh0730/hoj-deploy.git <span>&amp;&amp;</span> <span>cd</span> hoj-deploy\n</code></pre>\n<div><span>1</span><br></div></div></li>\n<li>\n<p>进入文件夹，使用docker-compose启动各容器服务</p>\n<div><pre><code><span>cd</span> standAlone\n</code></pre>\n<div><span>1</span><br></div></div><p><code>standAlone</code>文件夹文件有以下：</p>\n<div><pre><code>├── docker-compose.yml\n├── .env\n</code></pre>\n<div><span>1</span><br><span>2</span><br></div></div><p>主要配置请修改<code>.env</code>文件，一般请修改Redis、MySQL、Nacos的默认密码即可，内容如下：</p>\n<blockquote>\n<p>注意：各服务ip最好不改动，保持处于172.20.0.0/16网段的docker network</p>\n</blockquote>\n<div><pre><code><span># hoj全部数据存储的文件夹位置（默认当前路径生成hoj文件夹）</span>\n<span>HOJ_DATA_DIRECTORY</span><span>=</span><span>./hoj</span>\n\n<span># redis的配置</span>\n<span>REDIS_HOST</span><span>=</span><span>172.20.0.2</span>\n<span>REDIS_PORT</span><span>=</span><span>6379</span>\n<span>REDIS_PASSWORD</span><span>=</span><span>hoj123456</span>\n\n<span># mysql的配置</span>\n<span>MYSQL_HOST</span><span>=</span><span>172.20.0.3</span>\n<span># 如果判题服务是分布式，请提供当前mysql所在服务器的公网ip</span>\n<span>MYSQL_PUBLIC_HOST</span><span>=</span><span>172.20.0.3</span>\n<span>MYSQL_PUBLIC_PORT</span><span>=</span><span>3306</span>\n<span>MYSQL_ROOT_PASSWORD</span><span>=</span><span>hoj123456</span>\n\n<span># nacos的配置</span>\n<span>NACOS_HOST</span><span>=</span><span>172.20.0.4</span>\n<span>NACOS_PORT</span><span>=</span><span>8848</span>\n<span>NACOS_USERNAME</span><span>=</span><span>root</span>\n<span>NACOS_PASSWORD</span><span>=</span><span>hoj123456</span>\n\n<span># backend后端服务的配置</span>\n<span>BACKEND_HOST</span><span>=</span><span>172.20.0.5</span>\n<span>BACKEND_PORT</span><span>=</span><span>6688</span>\n<span># token加密秘钥 默认则生成32位随机密钥</span>\n<span>JWT_TOKEN_SECRET</span><span>=</span><span>default</span>\n<span># token过期时间默认为24小时 86400s</span>\n<span>JWT_TOKEN_EXPIRE</span><span>=</span><span>86400</span>\n<span># token默认12小时可自动刷新</span>\n<span>JWT_TOKEN_FRESH_EXPIRE</span><span>=</span><span>43200</span>\n<span># 调用判题服务器的token 默认则生成32位随机密钥</span>\n<span>JUDGE_TOKEN</span><span>=</span><span>default</span>\n<span># 请使用邮件服务的域名或ip</span>\n<span>EMAIL_SERVER_HOST</span><span>=</span><span>smtp.qq.com</span>\n<span>EMAIL_SERVER_PORT</span><span>=</span><span>465</span>\n<span>EMAIL_USERNAME</span><span>=</span><span>your_email_username</span>\n<span>EMAIL_PASSWORD</span><span>=</span><span>your_email_password</span>\n<span># 开启虚拟判题请提供对应oj的账号密码 格式为 </span>\n<span># username1,username2,...</span>\n<span># password1,password2,...</span>\n<span>HDU_ACCOUNT_USERNAME_LIST</span><span>=</span>\n<span>HDU_ACCOUNT_PASSWORD_LIST</span><span>=</span>\n<span>CF_ACCOUNT_USERNAME_LIST</span><span>=</span>\n<span>CF_ACCOUNT_PASSWORD_LIST</span><span>=</span>\n<span>POJ_ACCOUNT_USERNAME_LIST</span><span>=</span>\n<span>POJ_ACCOUNT_PASSWORD_LIST</span><span>=</span>\n<span>ATCODER_ACCOUNT_USERNAME_LIST</span><span>=</span>\n<span>ATCODER_ACCOUNT_PASSWORD_LIST</span><span>=</span>\n<span>SPOJ_ACCOUNT_USERNAME_LIST</span><span>=</span>\n<span>SPOJ_ACCOUNT_PASSWORD_LIST</span><span>=</span>\n<span># 是否强制使用上面配置的账号覆盖系统原有的账号列表</span>\n<span>FORCED_UPDATE_REMOTE_JUDGE_ACCOUNT</span><span>=</span><span>false</span>\n\n<span># judgeserver的配置</span>\n<span>JUDGE_SERVER_IP</span><span>=</span><span>172.20.0.7</span>\n<span>JUDGE_SERVER_PORT</span><span>=</span><span>8088</span>\n<span>JUDGE_SERVER_NAME</span><span>=</span><span>judger-alone</span>\n<span># -1表示可接收最大判题任务数为cpu核心数+1</span>\n<span>MAX_TASK_NUM</span><span>=</span><span>-1</span>\n<span># 当前判题服务器是否开启远程虚拟判题功能</span>\n<span>REMOTE_JUDGE_OPEN</span><span>=</span><span>true</span>\n<span># -1表示可接收最大远程判题任务数为cpu核心数*2+1</span>\n<span>REMOTE_JUDGE_MAX_TASK_NUM</span><span>=</span><span>-1</span>\n<span># 默认沙盒并行判题程序数为cpu核心数</span>\n<span>PARALLEL_TASK</span><span>=</span><span>default</span>\n\n<span># docker network的配置</span>\n<span>SUBNET</span><span>=</span><span>172.20.0.0/16</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br><span>50</span><br><span>51</span><br><span>52</span><br><span>53</span><br><span>54</span><br><span>55</span><br><span>56</span><br><span>57</span><br><span>58</span><br><span>59</span><br><span>60</span><br><span>61</span><br><span>62</span><br><span>63</span><br><span>64</span><br><span>65</span><br><span>66</span><br><span>67</span><br><span>68</span><br></div></div></li>\n</ol>\n<div><p>Tips</p>\n<p>提示：如果服务器的内存在4G或4G以上，请去掉JVM限制才能大大提高并发量，操作如下：</p>\n</div>\n<div><pre><code><span>vim</span> docker-compose.yml\n</code></pre>\n<div><span>1</span><br></div></div><p><strong>注释或去掉图中选中的行</strong></p>\n<p>① hoj-backend模块</p>\n<p><img src=\"https://img-blog.csdnimg.cn/4dfdcb2461c742f1b3717a8a27c3598a.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBASGltaXRfWkg=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center\" alt=\"在这里插入图片描述\" loading=\"lazy\"></p>\n<p>② hoj-judgeserver模块</p>\n<p><img src=\"https://img-blog.csdnimg.cn/9a936ad86ff2439a9e1188c286cfd751.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBASGltaXRfWkg=,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\" loading=\"lazy\"></p>\n<p>如果不改动，则以默认参数启动（<strong>测试可以不改，但正式部署请修改默认配置的密码！</strong>）</p>\n<div><pre><code><span>docker-compose</span> up -d\n</code></pre>\n<div><span>1</span><br></div></div><p><strong>根据网速情况，大约十到二十分钟拉取镜像，全程无需人工干预，拉取完毕后，自动启动容器服务，大概需要一至两分钟的初始化。</strong></p>\n<p>等待命令执行完毕后，查看容器状态</p>\n<div><pre><code><span>docker</span> <span>ps</span> -a\n</code></pre>\n<div><span>1</span><br></div></div><p>当看到所有的容器的状态status都为<code>UP</code>或<code>healthy</code>就代表 OJ 已经启动成功。</p>\n<p>以下默认参数说明</p>\n<div><p>Note</p>\n<ul>\n<li>\n<p>默认超级管理员账号与密码：root / hoj123456</p>\n</li>\n<li>\n<p>默认redis密码：hoj123456（<strong>正式部署请修改</strong>）</p>\n</li>\n<li>\n<p>默认mysql账号与密码：root / hoj123456（<strong>正式部署请修改</strong>）</p>\n</li>\n<li>\n<p>默认nacos管理员账号与密码：root / hoj123456（<strong>正式部署请修改</strong>）</p>\n</li>\n<li>\n<p>默认不开启https，开启需修改文件同时提供证书文件</p>\n</li>\n<li>\n<p>判题并发数默认：cpu核心数+1</p>\n</li>\n<li>\n<p>默认开启vj判题，需要手动修改添加账号与密码，如果不添加不能vj判题！</p>\n</li>\n<li>\n<p>vj判题并发数默认：cpu核心数*2+1</p>\n</li>\n</ul>\n</div>\n<p><strong>登录root账号到后台查看服务状态以及到<code>http://ip/admin/conf</code>修改服务配置!</strong></p>\n<p><u>注意：网站的注册及用户账号相关操作需要邮件系统，所以请在系统配置中配置自己的SMTP邮件服务。</u></p>\n<p><strong>(如果已经在启动在.env文件配置了邮件服务即不用再次修改)</strong></p>\n<div><pre><code>Host: smtp.qq.com\nPort: <span>465</span>\nUsername: qq邮箱账号\nPassword: 开启SMTP服务后生成的随机授权码\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div>",
      "image": "https://img-blog.csdnimg.cn/4dfdcb2461c742f1b3717a8a27c3598a.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBASGltaXRfWkg=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center",
      "date_published": "2022-10-03T13:59:35.000Z",
      "date_modified": "2022-10-04T14:21:17.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "常见问题FAQ",
      "url": "https://hcode.top/xojbackend-doc/deploy/faq/",
      "id": "https://hcode.top/xojbackend-doc/deploy/faq/",
      "content_html": "<h1 id=\"常见问题faq\"> 常见问题FAQ</h1>\n<div><p>Tips</p>\n<p>问题及对应的链接：</p>\n<ul>\n<li><a href=\"/deploy/faq/#一、部署在centos7系统中无法正常评测-如何解决\">一、部署在Centos7系统中无法正常评测，如何解决？</a></li>\n<li><a href=\"/deploy/faq/#二、部署时出现3306或80、443等端口号被占用\">二、部署时出现3306或80、443等端口号被占用</a></li>\n<li><a href=\"/deploy/faq/#三、如何修改mysql、redis、nacos的密码\">三、如何修改MySQL、Redis、Nacos的密码？</a></li>\n</ul>\n</div>\n<h2 id=\"一、部署在centos7系统中无法正常评测-如何解决\"> 一、部署在Centos7系统中无法正常评测，如何解决？</h2>\n<h4 id=\"_1-问题引用\"> 1. 问题引用</h4>\n<ul>\n<li>\n<p>原HOJ仓库issue引用：<a href=\"https://gitee.com/himitzh0730/hoj/issues/I5HZNP\" target=\"_blank\" rel=\"noopener noreferrer\">本地构建没问题 centOs 7 下构建报如下错误</a></p>\n</li>\n<li>\n<p><code>hoj-judgeserver</code>容器一直重启，<code>docker logs hoj-judgeserver</code>查看日志发现，启动Go-judge（Sandbox）报错：<code>prefork environment failed container: failed to start container fork/exec /proc/self/exe: invalid argument</code></p>\n<p><img src=\"/sandbox_error.webp\" alt=\"sandbox启动报错日志\" loading=\"lazy\"></p>\n</li>\n</ul>\n<h4 id=\"_2-如何解决\"> 2. 如何解决</h4>\n<p><strong>Tips：其实强烈建议换Ubuntu系统，但如果一定要使用CentOS7系统的话请看下面。</strong></p>\n<p>由于hoj使用的判题机中的安全沙盒使用环境的特殊性，如果想在centos7系统中正常运行<code>hoj-judgeserver</code>服务，需要开启 user 命名空间来使用。</p>\n<ul>\n<li>\n<p>永久性设置操作</p>\n<div><pre><code><span>echo</span> user.max_user_namespaces<span>=</span><span>10000</span> <span>>></span> /etc/sysctl.d/98-userns.conf\n<span>reboot</span> // 重启机器生效\n</code></pre>\n<div><span>1</span><br><span>2</span><br></div></div></li>\n<li>\n<p>临时开启操作</p>\n<div><pre><code><span>echo</span> <span>10000</span> <span>></span> /proc/sys/user/max_user_namespaces\n</code></pre>\n<div><span>1</span><br></div></div></li>\n</ul>\n<p>设置完后，使用<code>docker restart hoj-judgeserver</code>重新启动<code>hoj-judgeserver</code>的docker容器即可正常评测。</p>\n<h2 id=\"二、部署时出现3306或80、443等端口号被占用\"> 二、部署时出现3306或80、443等端口号被占用</h2>\n<h4 id=\"_1-问题引用-2\"> 1. 问题引用</h4>\n<p>在使用<code>docker-compose up -d</code>后出现报错，关键错误信息 <code>bind 0.0.0.0:80 failed, port is already allocated</code>，相似报错如下：</p>\n<p><img src=\"/startup_error.png\" alt=\"启动端口占用报错\" loading=\"lazy\"></p>\n<h4 id=\"_2-如何解决-2\"> 2. 如何解决</h4>\n<ul>\n<li>请优先修改与<code>docker-compose.yml</code>文件同个目录中的<code>.env</code>文件，修改指定对应端口号；</li>\n<li>如果<code>.env</code>文件中没有报错信息中所说的端口号，再去修改<code>docker-compose.yml</code>文件各个模块中 <code>ports</code> 相关的配置，比如 <code>0.0.0.0:80:8080</code> 可以修改为 <code>0.0.0.0:8020:8080</code>，冒号后面的端口号请不要改动。</li>\n</ul>\n<h2 id=\"三、如何修改mysql、redis、nacos的密码\"> 三、如何修改MySQL、Redis、Nacos的密码？</h2>\n<h4 id=\"_1-问题引用-3\"> 1. 问题引用</h4>\n<ul>\n<li>\n<p>在部署HOJ之前，想修改默认的密码</p>\n</li>\n<li>\n<p>在部署HOJ之后，想修改已设置的密码</p>\n</li>\n</ul>\n<h4 id=\"_2-如何解决-3\"> 2. 如何解决</h4>\n<div><p>Info</p>\n<p>部署之前：修改各种默认的密码</p>\n</div>\n<p>部署之前指的是还没执行<code>docker-compose up -d</code>命令，在<code>./hoj-deploy/standAlone</code>目录中还未有<code>hoj</code>文件夹（<a href=\"/deploy/how-to-backup/\">hoj文件夹的介绍</a>）时，可以先修改<code>.env</code>文件里面对应各种的默认密码，保存后再执行<code>docker-compose up -d</code>启动HOJ</p>\n<div><p>Warning</p>\n<p>部署之后：修改已设置的各种密码，那么有两种方式</p>\n</div>\n<ol>\n<li>\n<p>目前网站没有重要的数据，可以直接删除在<code>./hoj-deploy/standAlone</code>目录中<code>hoj</code>文件夹，然后修改<code>.env</code>文件里面对应各种的默认密码，保存后再执行<code>docker-compose up -d</code>启动HOJ</p>\n</li>\n<li>\n<p>由于网站数据比较多，不能直接删除<code>hoj</code>文件夹，那么操作如下：</p>\n<ul>\n<li>\n<p><strong>如果修改Redis的密码</strong>：只需修改<code>.env</code>文件中的<code>REDIS_PASSWORD</code>配置，<code>docker restart hoj-redis</code>重新启动<code>hoj-redis</code>即可生效。</p>\n</li>\n<li>\n<p><strong>如果修改MySQL的密码</strong>：需要进入到<code>hoj-mysql</code>容器进行修改，操作如下</p>\n<p>（1）进行hoj-mysql容器</p>\n<div><pre><code><span>docker</span> <span>exec</span> -it hoj-mysql <span>bash</span>\n</code></pre>\n<div><span>1</span><br></div></div><p>（2）输入对应的mysql密码，进入mysql数据库</p>\n<p>注意：-p 后面跟着数据库密码例如hoj123456</p>\n<div><pre><code>mysql -uroot -p数据库密码\n</code></pre>\n<div><span>1</span><br></div></div><p>（3）成功进入后，执行以下命令</p>\n<div><pre><code>mysql<span>></span> use mysql<span>;</span>\n\nmysql<span>></span> grant all PRIVILEGES on *.* to root@<span>'%'</span> WITH GRANT OPTION<span>;</span>\n \nmysql<span>></span> ALTER user <span>'root'</span>@<span>'%'</span> IDENTIFIED BY <span>'新的数据库密码'</span> PASSWORD EXPIRE NEVER<span>;</span>\n \nmysql<span>></span> ALTER user <span>'root'</span>@<span>'%'</span> IDENTIFIED WITH mysql_native_password BY <span>'新的数据库密码'</span><span>;</span>\n\nmysql<span>></span> FLUSH PRIVILEGES<span>;</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br></div></div><p>（4） 两次exit 退出mysql和容器。</p>\n<p>（5）修改<code>.env</code>文件中的<code>MYSQL_ROOT_PASSWORD</code>的密码为新的数据库密码。</p>\n<p>（6）重启所有HOJ的容器：<code>docker-compose restart</code>。</p>\n</li>\n<li>\n<p><strong>如果修改Nacos的密码</strong>：需要登录到Nacos控制台进行修改，操作如下</p>\n<p>（1）浏览器中访问<code>http://ip:8848/nacos</code>，然后输入<code>.env</code>文件中默认设置的账号密码，即<code>NACOS_USERNAME</code>和<code>NACOS_PASSWORD</code>参数进行登录。（记得打开服务器8848端口号的防火墙）</p>\n<p>（2）点击页面右上角的用户名，选择修改密码，在弹出的弹窗中输入新密码确认修改即可！</p>\n<p><img src=\"/nacos_pwd.png\" alt=\"nacos修改密码\" loading=\"lazy\">\n（3）到服务器上修改<code>.env</code>文件中的<code>NACOS_PASSWORD</code>的密码为新的Nacos密码。</p>\n<p>（4）重启所有HOJ的容器：<code>docker-compose restart</code>。</p>\n</li>\n</ul>\n</li>\n</ol>\n",
      "image": "https://hcode.top/xojbackend-doc/sandbox_error.webp",
      "date_published": "2022-10-03T13:59:35.000Z",
      "date_modified": "2022-10-03T13:59:35.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "环境配置",
      "url": "https://hcode.top/xojbackend-doc/deploy/",
      "id": "https://hcode.top/xojbackend-doc/deploy/",
      "content_html": "<h1 id=\"环境配置\"> 环境配置</h1>\n<h2 id=\"环境说明\"> 环境说明</h2>\n<div><p>Tips</p>\n<ul>\n<li>\n<p>后端：尽量在Linux系统下部署运行，（windows也可），建议使用ubuntu20.04，其它版本的Linux系统也可，同时需要<strong>Docker</strong>辅助部署</p>\n</li>\n<li>\n<p>前端：Linux系统下，需要nginx进行反向代理</p>\n</li>\n<li>\n<p>windows系统大致相同</p>\n</li>\n<li>\n<p>请自行百度</p>\n</li>\n</ul>\n</div>\n<h2 id=\"linux环境搭建\"> Linux环境搭建</h2>\n<blockquote>\n<p>XOJbackend使用的Ubuntu20.04版本，单机部署建议2核4G以上内存</p>\n</blockquote>\n<h3 id=\"安装docker\"> 安装docker</h3>\n<ol>\n<li>\n<p>安装需要的包</p>\n<div><pre><code><span>sudo</span> <span>apt-get</span> update\n</code></pre>\n<div><span>1</span><br></div></div></li>\n<li>\n<p>安装依赖包</p>\n<div><pre><code><span>sudo</span> <span>apt-get</span> <span>install</span> <span>\\</span>\n   apt-transport-https <span>\\</span>\n   ca-certificates <span>\\</span>\n   <span>curl</span> <span>\\</span>\n   gnupg-agent <span>\\</span>\n   software-properties-common\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div></li>\n<li>\n<p>添加 Docker 的官方 GPG 密钥</p>\n<div><pre><code><span>curl</span> -fsSL https://download.docker.com/linux/ubuntu/gpg <span>|</span> <span>sudo</span> apt-key <span>add</span> -\n</code></pre>\n<div><span>1</span><br></div></div></li>\n<li>\n<p>设置远程仓库</p>\n<div><pre><code><span>sudo</span> add-apt-repository <span>\\</span>\n   <span>\"deb [arch=amd64] https://download.docker.com/linux/ubuntu \\\n  <span><span>$(</span>lsb_release -cs<span>)</span></span> \\\n  stable\"</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div></li>\n<li>\n<p>安装 Docker-CE</p>\n<div><pre><code><span>sudo</span> <span>apt-get</span> update\n<span>sudo</span> <span>apt-get</span> <span>install</span> docker-ce docker-ce-cli containerd.io\n</code></pre>\n<div><span>1</span><br><span>2</span><br></div></div></li>\n<li>\n<p>验证是否成功</p>\n<div><pre><code><span>sudo</span> <span>docker</span> run hello-world\n</code></pre>\n<div><span>1</span><br></div></div></li>\n</ol>\n<h3 id=\"安装docker-compose\"> 安装docker-compose</h3>\n<ol>\n<li>\n<p>下载</p>\n<div><pre><code><span>sudo</span> <span>curl</span> -L https://get.daocloud.io/docker/compose/releases/download/1.25.5/docker-compose-<span><span>`</span><span>uname</span> -s<span>`</span></span>-<span><span>`</span><span>uname</span> -m<span>`</span></span> -o /usr/local/bin/docker-compose\n</code></pre>\n<div><span>1</span><br></div></div></li>\n<li>\n<p>授权</p>\n<div><pre><code><span>sudo</span> <span>chmod</span> +x /usr/local/bin/docker-compose\n</code></pre>\n<div><span>1</span><br></div></div></li>\n</ol>\n<h2 id=\"windows-环境\"> Windows 环境</h2>\n<p>Windows 下的安装仅供体验，勿在生产环境使用。如有必要，请使用虚拟机安装 Linux 并将 OJ 安装在其中。</p>\n<p>以下教程仅适用于 Win10 x64 下的 <code>PowerShell</code></p>\n<ol>\n<li>安装 Windows 的 Docker 工具</li>\n<li>右击右下角 Docker 图标，选择 Settings 进行设置</li>\n<li>选择 <code>Shared Drives</code> 菜单，之后勾选你想安装 OJ 的盘符位置（例如勾选D盘），点击 <code>Apply</code></li>\n<li>输入 Windows 的账号密码进行文件共享</li>\n<li>安装 <code>Python</code>、<code>pip</code>、<code>git</code>、<code>docker-compose</code>，安装方法自行搜索。</li>\n</ol>\n",
      "date_published": "2022-10-03T13:59:35.000Z",
      "date_modified": "2022-10-04T14:21:17.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "多个判题机",
      "url": "https://hcode.top/xojbackend-doc/deploy/multi-judgeserver/",
      "id": "https://hcode.top/xojbackend-doc/deploy/multi-judgeserver/",
      "content_html": "<h1 id=\"多个判题机\"> 多个判题机</h1>\n<h2 id=\"前言\"> 前言</h2>\n<p>不同判题机之间是通过rsync进行数据同步的，所以需要配置相应的rsync服务。</p>\n<p>同时注意以下两点：</p>\n<ol>\n<li>保证rsync-slave服务的密码与主服务rsync-master的数据同步密码一致</li>\n<li>rsync-slave服务（判题机服务器）拉取主服务rsync-master的评测数据是每100s一次，所以后台上传评测数据后，需等待大概100s才能正常判题。</li>\n</ol>\n<h2 id=\"单体部署\"> 单体部署</h2>\n<p>如果之前是选择了单体部署，也就是主服务器既有backend和judgeserver服务，那么部署更多不同服务器的判题机应该如下修改：</p>\n<ol>\n<li>\n<p>在原先运行的服务器上，修改<code>hoj-deploy/standAlone</code>文件夹里面的<code>docker-compose.yml</code>，<strong>添加以下rsync-master服务</strong>，数据同步密码请自行修改，如下：</p>\n<p><strong>（注意：如果云服务器有防火墙请开启8848，3306，873端口）</strong></p>\n<div><pre><code><span>hoj-rsync-master</span><span>:</span>\n    <span>image</span><span>:</span> registry.cn<span>-</span>shenzhen.aliyuncs.com/hcode/hoj_rsync<span>:</span><span>1.0</span>\n    <span>container_name</span><span>:</span> hoj<span>-</span>rsync<span>-</span>master\n    <span>volumes</span><span>:</span>\n      <span>-</span> ./hoj/testcase<span>:</span>/hoj/testcase<span>:</span>ro\n    <span>environment</span><span>:</span>\n      <span>-</span> RSYNC_MODE=master\n      <span>-</span> RSYNC_USER=hojrsync \n      <span>-</span> RSYNC_PASSWORD=hoj123456 <span># 请修改数据同步密码</span>\n    <span>ports</span><span>:</span>\n      <span>-</span> <span>\"0.0.0.0:873:873\"</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></div></div><p><strong>同时，需要将MySQL的配置<code>MYSQL_PUBLIC_HOST</code>改成当前服务器的公网IP</strong></p>\n<div><pre><code><span>vim</span> .env  <span># 修改与docker-compose.yml同目录下的配置文件</span>\n</code></pre>\n<div><span>1</span><br></div></div><div><pre><code><span># mysql的配置</span>\nMYSQL_HOST=172.20.0.3\n<span># 请提供当前mysql所在服务器的公网ip</span>\nMYSQL_PUBLIC_HOST=<span>***</span>\nMYSQL_PUBLIC_PORT=3306\nMYSQL_ROOT_PASSWORD=hoj123456\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><p>修改完保存，然后重启docker即可生效</p>\n<div><pre><code><span>docker-compose</span> down\n<span>docker-compose</span> up -d\n</code></pre>\n<div><span>1</span><br><span>2</span><br></div></div></li>\n<li>\n<p>在其它服务器（判题机服务器）中使用docker-compose运行judgeserver服务，具体操作如下：</p>\n<p><strong>（注意：如果云服务器有防火墙请开启8088端口号，需要将判题服务暴露出去）</strong></p>\n<ol>\n<li>\n<p>下载文件,进入到指定文件夹</p>\n<div><pre><code><span>git</span> clone https://gitee.com/himitzh0730/hoj-deploy.git <span>&amp;&amp;</span> <span>cd</span> hoj-deploy/distributed/judgeserver\n</code></pre>\n<div><span>1</span><br></div></div></li>\n<li>\n<p>修改配置<code>.env</code>文件,里面的nacos参数，judgeServer，rsync的参数请正确修改！</p>\n<div><pre><code><span># nacos的配置</span>\n<span># 修改为nacos所在服务的ip</span>\n<span>NACOS_HOST</span><span>=</span><span>NACOS_HOST</span>\n<span># 修改为nacos启动端口号，默认为8848</span>\n<span>NACOS_PORT</span><span>=</span><span>8848</span>\n<span># 修改为nacos的管理员账号</span>\n<span>NACOS_USERNAME</span><span>=</span><span>root</span>\n<span># 修改为nacos的管理员密码</span>\n<span>NACOS_PASSWORD</span><span>=</span><span>hoj123456</span>\n\n<span># judgeserver的配置</span>\n<span>#修改为当前服务器公网ip</span>\n<span>JUDGE_SERVER_IP</span><span>=</span><span>172.20.0.7</span>\n<span>JUDGE_SERVER_PORT</span><span>=</span><span>8088</span>\n<span>JUDGE_SERVER_NAME</span><span>=</span><span>judger-1</span>\n<span># -1表示可接收最大判题任务数为cpu核心数+1</span>\n<span>MAX_TASK_NUM</span><span>=</span><span>-1</span>\n<span># 当前判题服务器是否开启远程虚拟判题功能</span>\n<span>REMOTE_JUDGE_OPEN</span><span>=</span><span>true</span>\n<span># -1表示可接收最大远程判题任务数为cpu核心数*2+1</span>\n<span>REMOTE_JUDGE_MAX_TASK_NUM</span><span>=</span><span>-1</span>\n<span># 默认沙盒并行判题程序数为cpu核心数</span>\n<span>PARALLEL_TASK</span><span>=</span><span>default</span>\n\n<span># rsync评测数据同步的配置</span>\n<span># 写入主服务器ip</span>\n<span>RSYNC_MASTER_ADDR</span><span>=</span><span>127.0.0.1</span>\n<span># 与主服务器的rsync密码一致</span>\n<span>RSYNC_PASSWORD</span><span>=</span><span>hoj123456</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br></div></div></li>\n<li>\n<p>启动即可</p>\n<div><pre><code><span>docker-compose</span> up -d\n</code></pre>\n<div><span>1</span><br></div></div></li>\n<li>\n<p>验证：</p>\n<div><pre><code>访问 http://ip:8088/version\n\t  如果返回信息正常即启动成功！\n</code></pre>\n<div><span>1</span><br><span>2</span><br></div></div></li>\n</ol>\n</li>\n</ol>\n<h2 id=\"分布式部署\"> 分布式部署</h2>\n<ol>\n<li>\n<p>如果之前已经选择了分布式部署，那么增加判题机，则与原先启动判题机的操作一样即可，在新的服务器上操作如下：</p>\n<div><pre><code><span>git</span> clone https://gitee.com/himitzh0730/hoj-deploy.git <span>&amp;&amp;</span> <span>cd</span> hoj-deploy/distributed/judgeserver\n<span>vim</span> .env\n</code></pre>\n<div><span>1</span><br><span>2</span><br></div></div></li>\n<li>\n<p>修改<code>.env</code>文件的配置</p>\n<div><pre><code><span># nacos的配置</span>\n<span># 修改为nacos所在服务的ip</span>\n<span>NACOS_HOST</span><span>=</span><span>NACOS_HOST</span>\n<span># 修改为nacos启动端口号，默认为8848</span>\n<span>NACOS_PORT</span><span>=</span><span>8848</span>\n<span># 修改为nacos的管理员账号</span>\n<span>NACOS_USERNAME</span><span>=</span><span>root</span>\n<span># 修改为nacos的管理员密码</span>\n<span>NACOS_PASSWORD</span><span>=</span><span>hoj123456</span>\n\n<span># judgeserver的配置</span>\n<span>#修改为当前服务器公网ip</span>\n<span>JUDGE_SERVER_IP</span><span>=</span><span>172.20.0.7</span>\n<span>JUDGE_SERVER_PORT</span><span>=</span><span>8088</span>\n<span>JUDGE_SERVER_NAME</span><span>=</span><span>judger-1</span>\n<span># -1表示可接收最大判题任务数为cpu核心数+1</span>\n<span>MAX_TASK_NUM</span><span>=</span><span>-1</span>\n<span># 当前判题服务器是否开启远程虚拟判题功能</span>\n<span>REMOTE_JUDGE_OPEN</span><span>=</span><span>true</span>\n<span># -1表示可接收最大远程判题任务数为cpu核心数*2+1</span>\n<span>REMOTE_JUDGE_MAX_TASK_NUM</span><span>=</span><span>-1</span>\n<span># 默认沙盒并行判题程序数为cpu核心数</span>\n<span>PARALLEL_TASK</span><span>=</span><span>default</span>\n\n<span># rsync评测数据同步的配置</span>\n<span># 写入主服务器ip</span>\n<span>RSYNC_MASTER_ADDR</span><span>=</span><span>127.0.0.1</span>\n<span># 与主服务器的rsync密码一致</span>\n<span>RSYNC_PASSWORD</span><span>=</span><span>hoj123456</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br></div></div></li>\n<li>\n<p>修改完保存，启动即可。</p>\n<div><pre><code><span>docker-compose</span> up -d\n</code></pre>\n<div><span>1</span><br></div></div></li>\n</ol>\n",
      "date_published": "2022-10-03T13:59:35.000Z",
      "date_modified": "2022-10-03T13:59:35.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "开启HTTPS",
      "url": "https://hcode.top/xojbackend-doc/deploy/open-https/",
      "id": "https://hcode.top/xojbackend-doc/deploy/open-https/",
      "content_html": "<h1 id=\"开启https\"> 开启HTTPS</h1>\n<ul>\n<li>\n<p>单机部署：</p>\n<p>提供server.crt和server.key证书与密钥文件放置<code>/standAlone</code>目录下，与<code>docker-compose.yml</code>和<code>.env</code>文件放置同一位置，然后修改<code>docker-compose.yml</code>中的hoj-frontend的配置</p>\n</li>\n<li>\n<p>分布式部署：</p>\n<p>提供server.crt和server.key证书与密钥文件放置<code>/distributed/main</code>目录下，与<code>docker-compose.yml</code>和<code>.env</code>文件放置同一位置，然后修改<code>docker-compose.yml</code>中的hoj-frontend的配置</p>\n</li>\n</ul>\n<div><pre><code><span>hoj-frontend</span><span>:</span>\n    <span>image</span><span>:</span> registry.cn<span>-</span>shenzhen.aliyuncs.com/hcode/hoj_frontend\n    <span>container_name</span><span>:</span> hoj<span>-</span>frontend\n    <span>restart</span><span>:</span> always\n    <span># 开启https，请提供证书</span>\n    <span>volumes</span><span>:</span>\n      <span>-</span> ./server.crt<span>:</span>/etc/nginx/etc/crt/server.crt\n      <span>-</span> ./server.key<span>:</span>/etc/nginx/etc/crt/server.key\n    <span># 修改前端logo</span>\n    <span># - ./logo.a0924d7d.png:/usr/share/nginx/html/assets/img/logo.a0924d7d.png</span>\n    <span># - ./backstage.8bce8c6e.png:/usr/share/nginx/html/assets/img/backstage.8bce8c6e.png</span>\n    <span>environment</span><span>:</span>\n      <span>-</span> SERVER_NAME=localhost  <span># 提供你的域名！！！！</span>\n      <span>-</span> BACKEND_SERVER_HOST=$<span>{</span>BACKEND_HOST<span>:</span><span>-</span>172.20.0.5<span>}</span> <span># backend后端服务地址</span>\n      <span>-</span> BACKEND_SERVER_PORT=$<span>{</span>BACKEND_PORT<span>:</span><span>-6688</span><span>}</span> <span># backend后端服务端口号</span>\n      <span>-</span> USE_HTTPS=true <span># 使用https请设置为true</span>\n    <span>ports</span><span>:</span>\n      <span>-</span> <span>\"80:80\"</span>\n      <span>-</span> <span>\"443:443\"</span>\n    <span>networks</span><span>:</span>\n      <span>hoj-network</span><span>:</span>\n        <span>ipv4_address</span><span>:</span> 172.20.0.6\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br></div></div>",
      "date_published": "2022-10-03T13:59:35.000Z",
      "date_modified": "2022-10-03T13:59:35.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "如何更新",
      "url": "https://hcode.top/xojbackend-doc/deploy/update/",
      "id": "https://hcode.top/xojbackend-doc/deploy/update/",
      "content_html": "<h1 id=\"如何更新\"> 如何更新</h1>\n<h2 id=\"一、无二次开发的更新\"> 一、无二次开发的更新</h2>\n<div><p>Note</p>\n<p>2021.09.21之后部署hoj的请看下面操作</p>\n</div>\n<p>请在对应的docker-compose.yml当前文件夹下执行<code>docker-compose pull</code>拉取最新镜像，然后重新<code>docker-compose up -d</code>即可。</p>\n<div><p>Note</p>\n<p>2021.09.21之前部署hoj的请看下面操作</p>\n</div>\n<h3 id=\"_1、修改mysql8-0默认的密码加密方式\"> 1、修改MySQL8.0默认的密码加密方式</h3>\n<p>（1）进行hoj-mysql容器</p>\n<div><pre><code><span>docker</span> <span>exec</span> -it hoj-mysql <span>bash</span>\n</code></pre>\n<div><span>1</span><br></div></div><p>(2) 输入对应的mysql密码，进入mysql数据库</p>\n<p>注意：-p 后面跟着数据库密码例如hoj123456</p>\n<div><pre><code>mysql -uroot -p数据库密码\n</code></pre>\n<div><span>1</span><br></div></div><p>（3）成功进入后，执行以下命令</p>\n<div><pre><code>mysql<span>></span> use mysql<span>;</span>\n\nmysql<span>></span> grant all PRIVILEGES on *.* to root@<span>'%'</span> WITH GRANT OPTION<span>;</span>\n\n \nmysql<span>></span> ALTER user <span>'root'</span>@<span>'%'</span> IDENTIFIED BY <span>'数据库密码'</span> PASSWORD EXPIRE NEVER<span>;</span>\n\n \nmysql<span>></span> ALTER user <span>'root'</span>@<span>'%'</span> IDENTIFIED WITH mysql_native_password BY <span>'数据库密码'</span><span>;</span>\n\n \nmysql<span>></span> FLUSH PRIVILEGES<span>;</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br></div></div><p>（4） 两次exit 退出mysql和容器</p>\n<h3 id=\"_2、-添加hoj-mysql-checker模块\"> 2、 添加hoj-mysql-checker模块</h3>\n<p>（1）可以选择拉取仓库最新的docker-compose.yml文件（跟部署操作一样,但是会覆盖之前设置的参数）或者访问：</p>\n<p>https://gitee.com/himitzh0730/hoj-deploy/blob/master/standAlone/docker-compose.yml</p>\n<p>（2）或者编辑docker-compose.yml文件，手动添加新模块</p>\n<div><pre><code>  <span>hoj-mysql-checker</span><span>:</span>\n    <span>image</span><span>:</span> registry.cn<span>-</span>shenzhen.aliyuncs.com/hcode/hoj_database_checker\n    <span>container_name</span><span>:</span> hoj<span>-</span>mysql<span>-</span>checker\n    <span>depends_on</span><span>:</span>\n      <span>-</span> hoj<span>-</span>mysql\n    <span>links</span><span>:</span>\n      <span>-</span> hoj<span>-</span>mysql<span>:</span>mysql\n    <span>environment</span><span>:</span>\n      <span>-</span> MYSQL_ROOT_PASSWORD=$<span>{</span>MYSQL_ROOT_PASSWORD<span>:</span><span>-</span>hoj123456<span>}</span>\n    <span>networks</span><span>:</span>\n      <span>hoj-network</span><span>:</span>\n        <span>ipv4_address</span><span>:</span> 172.20.0.8\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br></div></div><p>(3)  保存后重启容器即可</p>\n<div><pre><code><span>docker-compose</span> down\n\n<span>docker-compose</span> pull\n\n<span>docker-compose</span> up -d\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><p><strong>注意</strong>：此次修改成功后，以后更新，都请在对应的docker-compose.yml当前文件夹下执行<code>docker-compose pull</code>拉取最新镜像，然后重新<code>docker-compose up -d</code>即可。</p>\n<h2 id=\"二、自定义前端的更新\"> 二、自定义前端的更新</h2>\n<blockquote>\n<p>附加：如何自定义前端请看这里 =&gt; <a href=\"/use/update-fe.html\">自定义前端文档</a></p>\n</blockquote>\n<p>（1）首先到<code>./hoj/hoj-vue</code>文件夹中，拉取<a href=\"https://gitee.com/himitzh0730/hoj/tree/master/hoj-vue\" target=\"_blank\" rel=\"noopener noreferrer\">hoj-vue</a>仓库最新的代码，请注意解决出现的冲突。</p>\n<div><pre><code><span>git</span> pull\n</code></pre>\n<div><span>1</span><br></div></div><p>或者重新直接download成zip包，然后重新自定义修改前端</p>\n<p>当然，如果想查看对比主仓库更新的内容，可以用以下命令一步步合并</p>\n<div><pre><code><span>git</span> remote -v                 <span># 查看主仓库的远程仓库</span>\n<span>git</span> fetch origin master:temp  <span># 将最新的主仓库代码拉到本地一个temp的分支</span>\n<span>git</span> <span>diff</span> temp                 <span># 比较现在本地代码与最新temp分支的区别</span>\n<span>git</span> merge temp                <span># 合并temp分支到本地的master分支</span>\n<span>git</span> branch -d temp            <span># 删除temp这个临时分支</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><p>（2）接着，重新用npm打包，在<code>./hoj/hoj-vue/dist</code>文件夹会生成静态的前端文件，放到原来指定的位置即可</p>\n<div><pre><code><span>npm</span> run build\n</code></pre>\n<div><span>1</span><br></div></div><p>（3）其它模块的更新，都请在对应的docker-compose.yml当前文件夹下执行<code>docker-compose pull</code>拉取最新镜像，然后重新<code>docker-compose up -d</code>即可。</p>\n",
      "date_published": "2022-10-03T13:59:35.000Z",
      "date_modified": "2022-10-03T13:59:35.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "前言",
      "url": "https://hcode.top/xojbackend-doc/introducition/",
      "id": "https://hcode.top/xojbackend-doc/introducition/",
      "content_html": "<h1 id=\"前言\"> 前言</h1>\n<h2 id=\"一、xoj后台管理系统\"> 一、XOJ后台管理系统？</h2>\n<p>XOJ，全称 Xcode Online Judge。XOJ的后台管理系统是基于（springboot+vue3）前后端分离，MVC架构的后台管理系统。</p>\n<p><a href=\"http://openjdk.java.net/\" target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/badge/Java-1.8-informational\" alt=\"Java\" loading=\"lazy\"></a>\n<a href=\"https://spring.io/projects/spring-boot\" target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/badge/Spring Boot-2.7.3.RELEASE-success\" alt=\"Spring Boot\" loading=\"lazy\"></a>\n<a href=\"https://www.mysql.com/\" target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/badge/MySQL-8.0.28-blue\" alt=\"MySQL\" loading=\"lazy\"></a>\n<a href=\"https://redis.io/\" target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/badge/Redis-5.0.9-red\" alt=\"Redis\" loading=\"lazy\"></a>\n<a href=\"https://cn.vuejs.org/\" target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/badge/Vue-3.2.13-success\" alt=\"Vue\" loading=\"lazy\"></a>\n<a href=\"https://github.com/yuluo-yx/xojbackground\" target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"https://img.shields.io/github/stars/HimitZH/HOJ?style=social\" alt=\"Github Star\" loading=\"lazy\"></a>\n<a href=\"https://gitee.com/yuluo-yx/xojbackgroundmanagmentsystem\" target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"https://gitee.com/himitzh0730/hoj/badge/star.svg\" alt=\"Gitee Star\" loading=\"lazy\"></a>\n</p>\n<h2 id=\"二、为什么要开发xoj的后台管理系统\"> 二、为什么要开发XOJ的后台管理系统？</h2>\n<p>因为这是yuluo的毕业设计，同时也是个人志趣所在，目前XOJ的后台管理系统从开始开发到现在已经有两个月了，凭着兴趣与职责一直在不断维护与更新新功能。</p>\n<h2 id=\"三、xoj后台管理系统的特点\"> 三、XOJ后台管理系统的特点</h2>\n<div><p>Tips</p>\n<ul>\n<li>适应：响应式布局，支持大多数分辨率不同的电脑端浏览器</li>\n<li>设计：界面简约大方</li>\n<li>缓存：缓存使用redis，提升用户的访问速度，避免用户使用卡顿</li>\n<li>扩展：代码开源，支持在其上进行二次开发</li>\n<li>简单：高度集中网站配置</li>\n<li>功能：\n<ul>\n<li>支持用户权限修改，评论数据管理，用户添加等功能</li>\n<li>支持系统资源监控</li>\n<li>支持判题机的自定义修改和使用</li>\n<li>完善的日志记录体系简单注解即可实现</li>\n<li>完善的XSS防范及脚本过滤，彻底杜绝XSS攻击</li>\n<li>Maven多项目依赖，模块及插件分项目，尽量松耦合，方便模块升级、增减模块</li>\n</ul>\n</li>\n</ul>\n</div>\n<h2 id=\"四、部分截图\"> 四、部分截图</h2>\n<div><p>Note</p>\n<p><strong>以下截图页面均支持中英文国际化，点击底部的转换即可实现全网站转换，同时浏览器会记住本次选择的语言</strong></p>\n</div>\n<h3 id=\"_1-首页\"> 1. 首页</h3>\n<blockquote>\n<p>首页页面</p>\n</blockquote>\n<p><img src=\"https://img-blog.csdnimg.cn/7d2cbea8f12f44a6a5365a20458ac63a.jpeg#pic_center\" alt=\"首页\" loading=\"lazy\"></p>\n<blockquote>\n<p>首页英文</p>\n</blockquote>\n<p><img src=\"https://img-blog.csdnimg.cn/6c76d3fb652a4f808c04efbe9d96dd2e.png#pic_center\" alt=\"首页英文\" loading=\"lazy\"></p>\n<h3 id=\"_2-站内消息-公告系统\"> 2. 站内消息-公告系统</h3>\n<blockquote>\n<p>站内消息系统</p>\n</blockquote>\n<p><img src=\"https://img-blog.csdnimg.cn/638d307cddd644c5941ce728ec2282ba.png#pic_center\" alt=\"站内消息系统\" loading=\"lazy\"></p>\n<blockquote>\n<p>添加公告</p>\n</blockquote>\n<p><img src=\"https://img-blog.csdnimg.cn/a50375babf0642c78938e1665f4f9c50.png#pic_center\" alt=\"站内消息系统\" loading=\"lazy\"></p>\n<h3 id=\"_3-题目\"> 3. 题目</h3>\n<blockquote>\n<p>题目列表页</p>\n</blockquote>\n<p><img src=\"https://img-blog.csdnimg.cn/a283a399fd8b479ca4b0d98581bc826f.png#pic_center\" alt=\"题目列表页\" loading=\"lazy\"></p>\n<blockquote>\n<p>题目详情页</p>\n</blockquote>\n<p><img src=\"https://img-blog.csdnimg.cn/85d36f94a150409bbf8ee2b5890678db.png#pic_center\" alt=\"题目详情页\" loading=\"lazy\"></p>\n<h3 id=\"_4-权限管理\"> 4. 权限管理</h3>\n<blockquote>\n<p>用户权限列表页</p>\n</blockquote>\n<p><img src=\"https://img-blog.csdnimg.cn/bcf5657644fe4b57be882c5b050e6828.png#pic_center\" alt=\"用户权限列表页\" loading=\"lazy\"></p>\n<h3 id=\"_5-判题机管理\"> 5. 判题机管理</h3>\n<p><img src=\"https://img-blog.csdnimg.cn/7d0e31a13e644c4084aaf311adfaeb1f.png#pic_center\" alt=\"判题机列表页\" loading=\"lazy\"></p>\n<h3 id=\"_6-讨论\"> 6. 讨论</h3>\n<blockquote>\n<p>讨论区</p>\n</blockquote>\n<p><img src=\"https://img-blog.csdnimg.cn/1945922ab86f462ebd0a4528e1c5470e.png#pic_center\" alt=\"讨论列表页\" loading=\"lazy\"></p>\n<h3 id=\"_7-个人中心\"> 7. 个人中心</h3>\n<blockquote>\n<p>个人设置页</p>\n</blockquote>\n<p><img src=\"https://img-blog.csdnimg.cn/984d2b43e227422392f3331f41915e25.jpeg#pic_center\" alt=\"个人设置\" loading=\"lazy\"></p>\n<h3 id=\"_8-系统监控页\"> 8. 系统监控页</h3>\n<p><img src=\"https://img-blog.csdnimg.cn/4f57cea228604d9fac37a8817795eaaa.png#pic_center\" alt=\"系统监控\" loading=\"lazy\"></p>\n<h3 id=\"_9-系统登录页\"> 9. 系统登录页</h3>\n<p><img src=\"https://img-blog.csdnimg.cn/e7fc40416f33402f8f7ba4462ff0da29.jpeg#pic_center\" alt=\"系统登录页\" loading=\"lazy\"></p>\n",
      "image": "https://img.shields.io/badge/Java-1.8-informational",
      "date_published": "2022-10-03T13:59:35.000Z",
      "date_modified": "2022-10-04T14:21:17.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "单体部署⑤——后端部署",
      "url": "https://hcode.top/xojbackend-doc/monomer/backend/",
      "id": "https://hcode.top/xojbackend-doc/monomer/backend/",
      "content_html": "<h1 id=\"单体部署5-后端部署\"> 单体部署⑤——后端部署</h1>\n<h2 id=\"前言\"> 前言</h2>\n<p>下载本项目，进入到当前文件夹执行打包命令</p>\n<div><pre><code><span>git</span> clone https://github.com/yuluo-yx/xojbackground\n</code></pre>\n<div><span>1</span><br></div></div><h3 id=\"简单部署\"> 简单部署</h3>\n<p>clone项目之后，更改数据库和redis参数之后，使用maven打包为jar包，启动项目</p>\n<div><pre><code>java -jar xxx.jar\n</code></pre>\n<div><span>1</span><br></div></div><p><strong>项目依赖于JDK8和mysql8.0.28、redis</strong></p>\n<h3 id=\"docker部署\"> docker部署</h3>\n",
      "date_published": "2022-10-03T13:59:35.000Z",
      "date_modified": "2022-10-05T13:30:42.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "数据库说明",
      "url": "https://hcode.top/xojbackend-doc/develop/db/",
      "id": "https://hcode.top/xojbackend-doc/develop/db/",
      "content_html": "<h1 id=\"数据库说明\"> 数据库说明</h1>\n<h2 id=\"用户资料模块\"> 用户资料模块</h2>\n<p>user_info表</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>实体属性类型</th>\n<th>键</th>\n<th>备注</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>uuid</td>\n<td>String</td>\n<td>主键</td>\n<td>uuid用户id</td>\n</tr>\n<tr>\n<td>username</td>\n<td>String</td>\n<td></td>\n<td>登录账号</td>\n</tr>\n<tr>\n<td>password</td>\n<td>String</td>\n<td></td>\n<td>登录密码</td>\n</tr>\n<tr>\n<td>school</td>\n<td>String</td>\n<td></td>\n<td>学校</td>\n</tr>\n<tr>\n<td>course</td>\n<td>String</td>\n<td></td>\n<td>专业</td>\n</tr>\n<tr>\n<td>number</td>\n<td>String</td>\n<td></td>\n<td>学号</td>\n</tr>\n<tr>\n<td>realname</td>\n<td>String</td>\n<td></td>\n<td>真实名字</td>\n</tr>\n<tr>\n<td>email</td>\n<td>String</td>\n<td></td>\n<td>邮箱</td>\n</tr>\n<tr>\n<td>gender</td>\n<td>String</td>\n<td></td>\n<td>性别</td>\n</tr>\n<tr>\n<td>avatar</td>\n<td>String</td>\n<td></td>\n<td>头像图片地址</td>\n</tr>\n<tr>\n<td>signature</td>\n<td>String</td>\n<td></td>\n<td>个性签名</td>\n</tr>\n<tr>\n<td>cf_username</td>\n<td>String</td>\n<td></td>\n<td>codeforces的username</td>\n</tr>\n<tr>\n<td>blog</td>\n<td>String</td>\n<td></td>\n<td>博客地址</td>\n</tr>\n<tr>\n<td>github</td>\n<td>String</td>\n<td></td>\n<td>github地址</td>\n</tr>\n<tr>\n<td>title_name</td>\n<td>String</td>\n<td></td>\n<td>称号、头衔</td>\n</tr>\n<tr>\n<td>title_color</td>\n<td>String</td>\n<td></td>\n<td>称号、头衔的背景颜色</td>\n</tr>\n<tr>\n<td>status</td>\n<td>int</td>\n<td></td>\n<td>0可用，1不可用</td>\n</tr>\n<tr>\n<td>gmt_create</td>\n<td>datetime</td>\n<td></td>\n<td>创建时间</td>\n</tr>\n<tr>\n<td>gmt_modified</td>\n<td>datetime</td>\n<td></td>\n<td>修改时间</td>\n</tr>\n</tbody>\n</table>\n<p>session表</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>实体属性类型</th>\n<th>键</th>\n<th>备注</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>long</td>\n<td>主键</td>\n<td>auto_increment</td>\n</tr>\n<tr>\n<td>uid</td>\n<td>String</td>\n<td>外键</td>\n<td>用户id</td>\n</tr>\n<tr>\n<td>user_agent</td>\n<td>String</td>\n<td></td>\n<td>访问的浏览器参数</td>\n</tr>\n<tr>\n<td>ip</td>\n<td>Srting</td>\n<td></td>\n<td>访问所在的ip</td>\n</tr>\n</tbody>\n</table>\n<p>role 角色表</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>实体属性类型</th>\n<th>键</th>\n<th>备注</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>long</td>\n<td>主键</td>\n<td>auto_increment</td>\n</tr>\n<tr>\n<td>role</td>\n<td>String</td>\n<td></td>\n<td>角色</td>\n</tr>\n<tr>\n<td>description</td>\n<td>String</td>\n<td></td>\n<td>描述</td>\n</tr>\n<tr>\n<td>status</td>\n<td>int</td>\n<td></td>\n<td>是否可用,0可用 1不可用</td>\n</tr>\n<tr>\n<td>gmt_create</td>\n<td>datetime</td>\n<td></td>\n<td>创建时间</td>\n</tr>\n<tr>\n<td>gmt_modified</td>\n<td>datetime</td>\n<td></td>\n<td>修改时间</td>\n</tr>\n</tbody>\n</table>\n<p>user_role表</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>实体属性类型</th>\n<th>键</th>\n<th>备注</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>long</td>\n<td>主键</td>\n<td>auto_increment</td>\n</tr>\n<tr>\n<td>uid</td>\n<td>String</td>\n<td>外键</td>\n<td>用户id</td>\n</tr>\n<tr>\n<td>role_id</td>\n<td>int</td>\n<td>外键</td>\n<td>角色id  默认为1002 默认用户</td>\n</tr>\n<tr>\n<td>gmt_create</td>\n<td>datetime</td>\n<td></td>\n<td>创建时间</td>\n</tr>\n<tr>\n<td>gmt_modified</td>\n<td>datetime</td>\n<td></td>\n<td>修改时间</td>\n</tr>\n</tbody>\n</table>\n<p>user_record表 个人做题记录表</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>实体属性类型</th>\n<th>键</th>\n<th>备注</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>long</td>\n<td>primary key</td>\n<td>auto_increment</td>\n</tr>\n<tr>\n<td>uid</td>\n<td>String</td>\n<td>外键</td>\n<td>用户id</td>\n</tr>\n<tr>\n<td>rating</td>\n<td>int</td>\n<td></td>\n<td>Cf得分，未参加过默认为1500</td>\n</tr>\n<tr>\n<td>gmt_create</td>\n<td>datetime</td>\n<td></td>\n<td>创建时间</td>\n</tr>\n<tr>\n<td>gmt_modified</td>\n<td>datetime</td>\n<td></td>\n<td>修改时间</td>\n</tr>\n</tbody>\n</table>\n<p>user_acproblem表</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>实体属性类型</th>\n<th>键</th>\n<th>备注</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>long</td>\n<td>primary key</td>\n<td>auto_increment</td>\n</tr>\n<tr>\n<td>uid</td>\n<td>String</td>\n<td>外键</td>\n<td>用户id</td>\n</tr>\n<tr>\n<td>pid</td>\n<td>long</td>\n<td>外键</td>\n<td>Ac的题目id</td>\n</tr>\n<tr>\n<td>subimit_id</td>\n<td>long</td>\n<td>外键</td>\n<td>提交的id</td>\n</tr>\n<tr>\n<td>gmt_create</td>\n<td>datetime</td>\n<td></td>\n<td>创建时间</td>\n</tr>\n<tr>\n<td>gmt_modified</td>\n<td>datetime</td>\n<td></td>\n<td>修改时间</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"题目详情模块\"> 题目详情模块</h2>\n<p>problem表</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>实体属性类型</th>\n<th>键</th>\n<th>备注</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>long</td>\n<td>primary key</td>\n<td>auto_increment 1000开始</td>\n</tr>\n<tr>\n<td>problem_id</td>\n<td>String</td>\n<td></td>\n<td>题目展示id</td>\n</tr>\n<tr>\n<td>title</td>\n<td>String</td>\n<td></td>\n<td>题目标题</td>\n</tr>\n<tr>\n<td>author</td>\n<td>String</td>\n<td></td>\n<td>默认可为无</td>\n</tr>\n<tr>\n<td>type</td>\n<td>int</td>\n<td></td>\n<td>题目类型 0为ACM,1为OI</td>\n</tr>\n<tr>\n<td>time_limit</td>\n<td>int</td>\n<td></td>\n<td>时间限制(ms)，默认为c/c++限制,其它语言为2倍</td>\n</tr>\n<tr>\n<td>memory_limit</td>\n<td>int</td>\n<td></td>\n<td>空间限制(mb)，默认为c/c++限制,其它语言为2倍</td>\n</tr>\n<tr>\n<td>stack_limit</td>\n<td>int</td>\n<td></td>\n<td>栈限制(mb)，默认为128</td>\n</tr>\n<tr>\n<td>description</td>\n<td>String</td>\n<td></td>\n<td>内容描述</td>\n</tr>\n<tr>\n<td>examples</td>\n<td>Srting</td>\n<td></td>\n<td>题面输入输出样例，不纳入评测数据</td>\n</tr>\n<tr>\n<td>source</td>\n<td>int</td>\n<td></td>\n<td>题目来源（比赛id），默认为hoj,可能为爬虫vj</td>\n</tr>\n<tr>\n<td>difficulty</td>\n<td>int</td>\n<td></td>\n<td>题目难度，0简单，1中等，2困难</td>\n</tr>\n<tr>\n<td>hint</td>\n<td>String</td>\n<td></td>\n<td>备注 提醒</td>\n</tr>\n<tr>\n<td>gmt_create</td>\n<td>datetime</td>\n<td></td>\n<td>创建时间</td>\n</tr>\n<tr>\n<td>gmt_modified</td>\n<td>datetime</td>\n<td></td>\n<td>修改时间</td>\n</tr>\n</tbody>\n</table>\n<p>problem_case表</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>实体属性类型</th>\n<th>键</th>\n<th>备注</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>long</td>\n<td>primary key</td>\n<td>auto_increment</td>\n</tr>\n<tr>\n<td>pid</td>\n<td>long</td>\n<td>外键</td>\n<td>题目id</td>\n</tr>\n<tr>\n<td>folder_path</td>\n<td>varchar</td>\n<td></td>\n<td>题目id</td>\n</tr>\n<tr>\n<td>status</td>\n<td>String</td>\n<td></td>\n<td>状态0可用，1不可用</td>\n</tr>\n<tr>\n<td>gmt_create</td>\n<td>datetime</td>\n<td></td>\n<td>创建时间</td>\n</tr>\n<tr>\n<td>gmt_modified</td>\n<td>datetime</td>\n<td></td>\n<td>修改时间</td>\n</tr>\n</tbody>\n</table>\n<p>language表</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>实体属性类型</th>\n<th>键</th>\n<th>备注</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>long</td>\n<td></td>\n<td>主键id</td>\n</tr>\n<tr>\n<td>content_type</td>\n<td>String</td>\n<td></td>\n<td>语言类型</td>\n</tr>\n<tr>\n<td>description</td>\n<td>String</td>\n<td></td>\n<td>语言描述</td>\n</tr>\n<tr>\n<td>name</td>\n<td>String</td>\n<td></td>\n<td>语言名字</td>\n</tr>\n<tr>\n<td>compile_command</td>\n<td>String</td>\n<td></td>\n<td>编译指令</td>\n</tr>\n<tr>\n<td>template</td>\n<td>String</td>\n<td></td>\n<td>A+B题目模板</td>\n</tr>\n<tr>\n<td>code_template</td>\n<td>String</td>\n<td></td>\n<td>语言对应的代码模板</td>\n</tr>\n<tr>\n<td>gmt_create</td>\n<td>datetime</td>\n<td></td>\n<td>创建时间</td>\n</tr>\n<tr>\n<td>gmt_modified</td>\n<td>datetime</td>\n<td></td>\n<td>修改时间</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"提交评测模块\"> 提交评测模块</h2>\n<blockquote>\n<p>判题结果status</p>\n</blockquote>\n<p>未提交：STATUS_NOT_SUBMITTED = -10</p>\n<p>提交中：STATUS_SUBMITTING = 9</p>\n<p>排队中：STATUS_PENDING  =  6</p>\n<p>评测中：STATUS_JUDGING =  7</p>\n<p>编译错误：STATUS_COMPILE_ERROR = -2</p>\n<p>输出格式错误：STATUS_PRESENTATION_ERROR = -3</p>\n<p>答案错误：STATUS__WRONG_ANSWER = -1</p>\n<p>评测通过：STATUS_ACCEPTED = 0</p>\n<p>cpu时间超限：STATUS__CPU_TIME_LIMIT_EXCEEDED = 1</p>\n<p>真实时间超限：STATUS__REAL_TIME_LIMIT_EXCEEDED = 2</p>\n<p>空间超限：STATUS__MEMORY_LIMIT_EXCEEDED = 3</p>\n<p>运行错误：STATUS__RUNTIME_ERROR = 4</p>\n<p>系统错误：STATUS__SYSTEM_ERROR = 5</p>\n<p>OI评测部分通过：STATUS_PARTIAL_ACCEPTED = 8</p>\n<p>提交失败：STATUS_SUBMITTED_FAILED= 10</p>\n<p>judge表</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>实体属性类型</th>\n<th>键</th>\n<th>备注</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>submit_id</td>\n<td>long</td>\n<td>primary key</td>\n<td>auto_increment</td>\n</tr>\n<tr>\n<td>display_pid</td>\n<td>String</td>\n<td></td>\n<td>题目展示id</td>\n</tr>\n<tr>\n<td>pid</td>\n<td>long</td>\n<td>外键</td>\n<td>题目id</td>\n</tr>\n<tr>\n<td>uid</td>\n<td>String</td>\n<td>外键</td>\n<td>提交用户的id</td>\n</tr>\n<tr>\n<td>username</td>\n<td>String</td>\n<td>外键</td>\n<td>用户名</td>\n</tr>\n<tr>\n<td>submit_time</td>\n<td>datetime</td>\n<td></td>\n<td>提交时间</td>\n</tr>\n<tr>\n<td>status</td>\n<td>String</td>\n<td></td>\n<td>判题结果</td>\n</tr>\n<tr>\n<td>share</td>\n<td>Boolean</td>\n<td></td>\n<td>代码是否分享</td>\n</tr>\n<tr>\n<td>error_message</td>\n<td>String</td>\n<td></td>\n<td>错误提醒（编译错误，或者vj提醒）</td>\n</tr>\n<tr>\n<td>time</td>\n<td>int</td>\n<td></td>\n<td>运行时间</td>\n</tr>\n<tr>\n<td>memory</td>\n<td>int</td>\n<td></td>\n<td>所耗内存</td>\n</tr>\n<tr>\n<td>length</td>\n<td>int</td>\n<td></td>\n<td>代码长度</td>\n</tr>\n<tr>\n<td>code</td>\n<td>String</td>\n<td></td>\n<td>代码</td>\n</tr>\n<tr>\n<td>language</td>\n<td>String</td>\n<td></td>\n<td>代码语言</td>\n</tr>\n<tr>\n<td>cpid</td>\n<td>int</td>\n<td></td>\n<td>比赛中的题目编号id</td>\n</tr>\n<tr>\n<td>judger</td>\n<td>String</td>\n<td></td>\n<td>判题机ip</td>\n</tr>\n<tr>\n<td>ip</td>\n<td>String</td>\n<td></td>\n<td>提交者ip</td>\n</tr>\n<tr>\n<td>cid</td>\n<td>int</td>\n<td></td>\n<td>题目来源的比赛id，默认为0</td>\n</tr>\n<tr>\n<td>version</td>\n<td>int</td>\n<td></td>\n<td>乐观锁（废弃）</td>\n</tr>\n<tr>\n<td>oi_rank_score</td>\n<td>int</td>\n<td></td>\n<td>oi排行榜得分</td>\n</tr>\n<tr>\n<td>gmt_create</td>\n<td>datetime</td>\n<td></td>\n<td>创建时间</td>\n</tr>\n<tr>\n<td>gmt_modified</td>\n<td>datetime</td>\n<td></td>\n<td>修改时间</td>\n</tr>\n</tbody>\n</table>\n<p>jugde_case表 评测单个样例结果表</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>实体属性类型</th>\n<th>键</th>\n<th>备注</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>submit_id</td>\n<td>long</td>\n<td>外键</td>\n<td>提交id</td>\n</tr>\n<tr>\n<td>problemId</td>\n<td>String</td>\n<td>外键</td>\n<td>题目id</td>\n</tr>\n<tr>\n<td>userId</td>\n<td>String</td>\n<td>外键</td>\n<td>提交用户的id</td>\n</tr>\n<tr>\n<td>Status</td>\n<td>String</td>\n<td></td>\n<td>单个样例评测结果</td>\n</tr>\n<tr>\n<td>time</td>\n<td>int</td>\n<td></td>\n<td>运行时间</td>\n</tr>\n<tr>\n<td>memory</td>\n<td>int</td>\n<td></td>\n<td>运行内存</td>\n</tr>\n<tr>\n<td>case_id</td>\n<td>String</td>\n<td></td>\n<td>测试样例id</td>\n</tr>\n<tr>\n<td>input_data</td>\n<td>String</td>\n<td></td>\n<td>样例输入的文件名</td>\n</tr>\n<tr>\n<td>Output_data</td>\n<td>String</td>\n<td></td>\n<td>样例输出的文件名</td>\n</tr>\n<tr>\n<td>user_output</td>\n<td>Srting</td>\n<td></td>\n<td>暂时用作信息提示</td>\n</tr>\n<tr>\n<td>gmt_create</td>\n<td>datetime</td>\n<td></td>\n<td>创建时间</td>\n</tr>\n<tr>\n<td>gmt_modified</td>\n<td>datetime</td>\n<td></td>\n<td>修改时间</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"讨论模块\"> 讨论模块</h2>\n<p>discussion表</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>实体属性类型</th>\n<th>键</th>\n<th>备注</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td>主键</td>\n<td>auto_increment</td>\n</tr>\n<tr>\n<td>content</td>\n<td>String</td>\n<td></td>\n<td>讨论详情</td>\n</tr>\n<tr>\n<td>pid</td>\n<td>String</td>\n<td>外键</td>\n<td>引用的题目id，默认未null则不引用</td>\n</tr>\n<tr>\n<td>uid</td>\n<td>iString</td>\n<td>外键</td>\n<td>发布讨论的用户id</td>\n</tr>\n<tr>\n<td>avatar</td>\n<td>String</td>\n<td>外键</td>\n<td>发布讨论的用户头像地址</td>\n</tr>\n<tr>\n<td>like_num</td>\n<td>int</td>\n<td></td>\n<td>点赞数量</td>\n</tr>\n<tr>\n<td>comment_num</td>\n<td>int</td>\n<td></td>\n<td>评论数量</td>\n</tr>\n<tr>\n<td>status</td>\n<td>int</td>\n<td></td>\n<td>是否封禁或逻辑删除该讨论</td>\n</tr>\n<tr>\n<td>gmt_create</td>\n<td>datetime</td>\n<td></td>\n<td>创建时间</td>\n</tr>\n<tr>\n<td>gmt_modified</td>\n<td>datetime</td>\n<td></td>\n<td>修改时间</td>\n</tr>\n</tbody>\n</table>\n<p>discussion_like表</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>实体属性类型</th>\n<th>键</th>\n<th>备注</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>long</td>\n<td>主键</td>\n<td>auto_increment</td>\n</tr>\n<tr>\n<td>did</td>\n<td>int</td>\n<td>外键</td>\n<td>讨论id</td>\n</tr>\n<tr>\n<td>uid</td>\n<td>String</td>\n<td>外键</td>\n<td>用户id</td>\n</tr>\n<tr>\n<td>gmt_create</td>\n<td>datetime</td>\n<td></td>\n<td>创建时间</td>\n</tr>\n<tr>\n<td>gmt_modified</td>\n<td>datetime</td>\n<td></td>\n<td>修改时间</td>\n</tr>\n</tbody>\n</table>\n<p>reply表</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>实体属性类型</th>\n<th>键</th>\n<th>备注</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td>主键</td>\n<td>auto_increment</td>\n</tr>\n<tr>\n<td>comment_id</td>\n<td>ind</td>\n<td>外键</td>\n<td>评论id</td>\n</tr>\n<tr>\n<td>content</td>\n<td>String</td>\n<td></td>\n<td>回复的内容</td>\n</tr>\n<tr>\n<td>from_uid</td>\n<td>String</td>\n<td>外键</td>\n<td>回复评论者id</td>\n</tr>\n<tr>\n<td>from_name</td>\n<td>String</td>\n<td>外键</td>\n<td>回复评论者用户名</td>\n</tr>\n<tr>\n<td>from_avatar</td>\n<td>String</td>\n<td>外键</td>\n<td>回复评论者头像地址</td>\n</tr>\n<tr>\n<td>from_role</td>\n<td>String</td>\n<td>外键</td>\n<td>回复评论者角色</td>\n</tr>\n<tr>\n<td>to_uid</td>\n<td>String</td>\n<td>外键</td>\n<td>被回复的用户id</td>\n</tr>\n<tr>\n<td>to_name</td>\n<td>String</td>\n<td>外键</td>\n<td>被回复的用户名</td>\n</tr>\n<tr>\n<td>to_avatar</td>\n<td>String</td>\n<td>外键</td>\n<td>被回复的用户头像地址</td>\n</tr>\n<tr>\n<td>status</td>\n<td>int</td>\n<td></td>\n<td>是否封禁或逻辑删除该回复，0正常，1封禁</td>\n</tr>\n<tr>\n<td>gmt_create</td>\n<td>datetime</td>\n<td></td>\n<td>创建时间</td>\n</tr>\n<tr>\n<td>gmt_modified</td>\n<td>datetime</td>\n<td></td>\n<td>修改时间</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"公告模块\"> 公告模块</h2>\n<p>notice表</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>实体属性类型</th>\n<th>键</th>\n<th>备注</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>long</td>\n<td>主键</td>\n<td>auto_increment</td>\n</tr>\n<tr>\n<td>title</td>\n<td>String</td>\n<td></td>\n<td>标题</td>\n</tr>\n<tr>\n<td>content</td>\n<td>String</td>\n<td></td>\n<td>评论内容</td>\n</tr>\n<tr>\n<td>states</td>\n<td>int</td>\n<td></td>\n<td>状态值 0 公开 1 屏蔽</td>\n</tr>\n<tr>\n<td>hint</td>\n<td>String</td>\n<td></td>\n<td>备注</td>\n</tr>\n<tr>\n<td>from_id</td>\n<td>bigint</td>\n<td></td>\n<td>发布者id</td>\n</tr>\n<tr>\n<td>gmt_create</td>\n<td>datetime</td>\n<td></td>\n<td>创建时间</td>\n</tr>\n<tr>\n<td>gmt_modified</td>\n<td>datetime</td>\n<td></td>\n<td>修改时间</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"日志表\"> 日志表</h2>\n<p>sys_log表</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>实体属性类型</th>\n<th>键</th>\n<th>备注</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>long</td>\n<td>主键</td>\n<td>auto_increment</td>\n</tr>\n<tr>\n<td>oper_id</td>\n<td>bigint</td>\n<td></td>\n<td>操作日志主键</td>\n</tr>\n<tr>\n<td>title</td>\n<td>String</td>\n<td></td>\n<td>操作模块</td>\n</tr>\n<tr>\n<td>business_type</td>\n<td>String</td>\n<td></td>\n<td>操作类型</td>\n</tr>\n<tr>\n<td>business_type_des</td>\n<td>String</td>\n<td></td>\n<td>操作类型描述</td>\n</tr>\n<tr>\n<td>method</td>\n<td>String</td>\n<td></td>\n<td>执行方法</td>\n</tr>\n<tr>\n<td>request_method</td>\n<td>String</td>\n<td></td>\n<td>请求方法名</td>\n</tr>\n<tr>\n<td>operator_type</td>\n<td>String</td>\n<td></td>\n<td>操作类型</td>\n</tr>\n<tr>\n<td>oper_name</td>\n<td>String</td>\n<td></td>\n<td>操作人名</td>\n</tr>\n<tr>\n<td>oper_url</td>\n<td>String</td>\n<td></td>\n<td>url</td>\n</tr>\n<tr>\n<td>oper_ip</td>\n<td>String</td>\n<td></td>\n<td>ip地址</td>\n</tr>\n<tr>\n<td>oper_location</td>\n<td>String</td>\n<td></td>\n<td>地址</td>\n</tr>\n<tr>\n<td>oper_param</td>\n<td>String</td>\n<td></td>\n<td>参数</td>\n</tr>\n<tr>\n<td>json_result</td>\n<td>longtext</td>\n<td></td>\n<td>返回结果</td>\n</tr>\n<tr>\n<td>status</td>\n<td>int</td>\n<td></td>\n<td>操作状态</td>\n</tr>\n<tr>\n<td>error_msg</td>\n<td>String</td>\n<td></td>\n<td>错误消息</td>\n</tr>\n<tr>\n<td>gmt_create</td>\n<td>datetime</td>\n<td></td>\n<td>创建时间</td>\n</tr>\n<tr>\n<td>gmt_modified</td>\n<td>datetime</td>\n<td></td>\n<td>修改时间</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"文件模块\"> 文件模块</h2>\n<p>file表</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>实体属性类型</th>\n<th>键</th>\n<th>备注</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>long</td>\n<td>主键</td>\n<td>auto_increment</td>\n</tr>\n<tr>\n<td>uid</td>\n<td>String</td>\n<td></td>\n<td>用户id</td>\n</tr>\n<tr>\n<td>name</td>\n<td>String</td>\n<td></td>\n<td>文件名</td>\n</tr>\n<tr>\n<td>suffix</td>\n<td>String</td>\n<td></td>\n<td>文件后缀格式</td>\n</tr>\n<tr>\n<td>folder_path</td>\n<td>String</td>\n<td></td>\n<td>文件所在文件夹的路径</td>\n</tr>\n<tr>\n<td>file_path</td>\n<td>String</td>\n<td></td>\n<td>文件绝对路径</td>\n</tr>\n<tr>\n<td>type</td>\n<td>String</td>\n<td></td>\n<td>文件所属类型，例如avatar</td>\n</tr>\n<tr>\n<td>delete</td>\n<td>String</td>\n<td></td>\n<td>是否删除</td>\n</tr>\n<tr>\n<td>gmt_create</td>\n<td>datetime</td>\n<td></td>\n<td>创建时间</td>\n</tr>\n<tr>\n<td>gmt_modified</td>\n<td>datetime</td>\n<td></td>\n<td>修改时间</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"判题机模块\"> 判题机模块</h2>\n<p>judge_server表</p>\n<table>\n<thead>\n<tr>\n<th>列名</th>\n<th>实体属性类型</th>\n<th>键</th>\n<th>备注</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>int</td>\n<td>主键</td>\n<td>auto_increment</td>\n</tr>\n<tr>\n<td>name</td>\n<td>String</td>\n<td></td>\n<td>判题服务名字</td>\n</tr>\n<tr>\n<td>ip</td>\n<td>String</td>\n<td></td>\n<td>判题机ip</td>\n</tr>\n<tr>\n<td>port</td>\n<td>int</td>\n<td></td>\n<td>判题机端口号</td>\n</tr>\n<tr>\n<td>url</td>\n<td>String</td>\n<td></td>\n<td>ip:port</td>\n</tr>\n<tr>\n<td>cpu_core</td>\n<td>int</td>\n<td></td>\n<td>判题机所在服务器cpu核心数</td>\n</tr>\n<tr>\n<td>task_number</td>\n<td>int</td>\n<td></td>\n<td>当前判题数</td>\n</tr>\n<tr>\n<td>max_task_number</td>\n<td>int</td>\n<td></td>\n<td>判题并发最大数</td>\n</tr>\n<tr>\n<td>status</td>\n<td>int</td>\n<td></td>\n<td>0可用，1不可用</td>\n</tr>\n<tr>\n<td>version</td>\n<td>long</td>\n<td></td>\n<td>版本控制</td>\n</tr>\n<tr>\n<td>is_remote</td>\n<td>boolean</td>\n<td></td>\n<td>是否为远程判题vj</td>\n</tr>\n<tr>\n<td>cf_submittable</td>\n<td>boolean</td>\n<td></td>\n<td>当前机器是否可提交cf，控制机器一次只能一账号交题</td>\n</tr>\n<tr>\n<td>gmt_create</td>\n<td>datetime</td>\n<td></td>\n<td>创建时间</td>\n</tr>\n<tr>\n<td>gmt_modified</td>\n<td>datetime</td>\n<td></td>\n<td>修改时间</td>\n</tr>\n</tbody>\n</table>\n",
      "date_published": "2022-10-03T13:59:35.000Z",
      "date_modified": "2022-10-05T13:30:42.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "系统设计",
      "url": "https://hcode.top/xojbackend-doc/introducition/architecture/",
      "id": "https://hcode.top/xojbackend-doc/introducition/architecture/",
      "content_html": "<h1 id=\"系统设计\"> 系统设计</h1>\n<h2 id=\"一、技术选型\"> 一、技术选型</h2>\n<p>本系统的项目后端基于 Spring Boot 框架，数据库使用 MySQL，缓存中间件使用 Redis，数据操作框架使用 Mybatis-Plus，前端基于 Vue3 进行开发，使用 axios 与后端进行交互，做到真正的前后端分离开发，程序评测运行使用开源的Go-Judge 安全沙盒保证程序的高性能判题和系统的 安全防护。使用Docker 和 Docker-Compose 进行服务编排与部署，做到真正的一键化极易部署。</p>\n<p><strong>前端技术：</strong></p>\n<div><p>Tips</p>\n<ul>\n<li>技术以Vue3为主，element-plus为主要的UI框架</li>\n<li>响应式布局，支持多数分辨率不同的浏览器</li>\n<li>路由使用vue-router</li>\n<li>前后端数据交互使用axios</li>\n</ul>\n</div>\n<p><strong>后端技术：</strong></p>\n<div><p>Tips</p>\n<p><em>Json Web Token（前后端通信凭证）</em></p>\n<ul>\n<li>JSON Web Token 是一个开放标准协议，它定义了一种“紧凑”和“自包含”的方式，它用于各方之间作为JSON对象安全地传输信息。</li>\n<li>可以使用跨域认证解决方案</li>\n<li>实现自动刷新token</li>\n</ul>\n<blockquote>\n<p>jwt登录功能示意图</p>\n</blockquote>\n<p><img src=\"https://img-blog.csdnimg.cn/ca0d82e1fdff46d5aece7ae428191d0f.png#pic_center\" alt=\"jwt\" loading=\"lazy\"></p>\n</div>\n<p><strong>缓存技术：</strong></p>\n<div><p>Tips</p>\n<p><em>spring cache + redis（缓存服务）</em></p>\n<ul>\n<li>主体缓存框架技术以spring cache为主，搭配redis作为缓存数据库</li>\n<li>缓存流程\n<ul>\n<li>用户登录系统时，先去缓存中寻找数据</li>\n<li>没有数据，则去数据库查询，查询到之后存入redis中，</li>\n<li>后续通过redis访问数据</li>\n</ul>\n</li>\n<li>提高用户访问数据的速度，减小 mysql 数据库的读写压力</li>\n</ul>\n</div>\n<h2 id=\"二、整体架构\"> 二、整体架构</h2>\n<div><p>Info</p>\n<p>本系统是基于前后端分离、MVC架构搭建的，用户通过浏览器进行访问，请求发送到Nginx被代理转发到Vue项目生成的静态文件，Vue项目的后端数据请求则再次通过Nginx进行转发到后端业务服务，由后端业务服务查询MySQL数据、Redis缓存进行业务处理生成所需JSON数据返回给前端，由Vue进行渲染展示给用户。</p>\n</div>\n<p><img src=\"https://img-blog.csdnimg.cn/e25223ea904f4b0390bc00bdb5ffa617.png#pic_center\" alt=\"系统架构图\" loading=\"lazy\"></p>\n<h2 id=\"三、功能介绍\"> 三、功能介绍</h2>\n<table>\n<thead>\n<tr>\n<th>模块</th>\n<th style=\"text-align:center\">功能介绍</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>首页</td>\n<td style=\"text-align:center\">展示网站轮播图、系统技术选型、系统基本设置等</td>\n</tr>\n<tr>\n<td>题目</td>\n<td style=\"text-align:center\">提供展示题目列表页，可以根据题目名进行模糊和精准查询，同时展示各个题目的做题情况；提供展示题目详情页，可以看到题目内容并修改题目数据</td>\n</tr>\n<tr>\n<td>讨论</td>\n<td style=\"text-align:center\">提供用户讨论信息管理模块，支持禁用和删除操作</td>\n</tr>\n<tr>\n<td>判题机</td>\n<td style=\"text-align:center\">提供添加和修改、禁用判题机的操作</td>\n</tr>\n<tr>\n<td>用户</td>\n<td style=\"text-align:center\">提供禁用和修改用户邮箱、密码和真实姓名的功能</td>\n</tr>\n<tr>\n<td>用户权限</td>\n<td style=\"text-align:center\">提供权限修改功能</td>\n</tr>\n<tr>\n<td>个人信息与设置</td>\n<td style=\"text-align:center\">用户拥有自己的个人主页，可以展示用户的基本信息；同时登陆状态可以在右上角进入个人设置，可以修改密码和邮箱，以及各种个人信息</td>\n</tr>\n<tr>\n<td>登录</td>\n<td style=\"text-align:center\">用户输入密码和用户名、验证码进行登录。后台通过之后判罚jwt通行凭证</td>\n</tr>\n<tr>\n<td>站内消息-公告模块</td>\n<td style=\"text-align:center\">提供公告信息管理，可以进行删除和状态更改操作</td>\n</tr>\n</tbody>\n</table>\n",
      "image": "https://img-blog.csdnimg.cn/ca0d82e1fdff46d5aece7ae428191d0f.png#pic_center",
      "date_published": "2022-10-03T13:59:35.000Z",
      "date_modified": "2022-10-04T14:21:17.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "单体部署⑦——前端部署",
      "url": "https://hcode.top/xojbackend-doc/monomer/frontend/",
      "id": "https://hcode.top/xojbackend-doc/monomer/frontend/",
      "content_html": "<h1 id=\"单体部署7-前端部署\"> 单体部署⑦——前端部署</h1>\n<h2 id=\"windows部署\"> Windows部署</h2>\n<h3 id=\"简单部署\"> 简单部署</h3>\n<div><p>Info</p>\n<ul>\n<li>安装 <strong>node.js</strong>，</li>\n<li>之后安装所需的依赖 运行项目</li>\n</ul>\n<div><pre><code><span>npm</span> <span>install</span>\n\n<span>npm</span> run serve\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br></div></div><p>如果速度太慢，使用cnpm，替换方法自行百度</p>\n</div>\n<h3 id=\"nginx部署\"> Nginx部署</h3>\n<div><p>Info</p>\n<p>参考Linux的Nginx部署方式</p>\n</div>\n<h2 id=\"linux部署\"> Linux部署</h2>\n<h3 id=\"_1-安装nginx\"> (1). 安装nginx</h3>\n<div><p>Note</p>\n<p>注意：apt下载太慢的话，建议换阿里云源，请自行百度or谷歌</p>\n</div>\n<ol>\n<li>\n<p>使用apt安装</p>\n<div><pre><code><span>sudo</span> <span>apt</span> <span>install</span> nginx\n</code></pre>\n<div><span>1</span><br></div></div></li>\n<li>\n<p>路径介绍</p>\n<ul>\n<li>/usr/sbin/nginx：主程序</li>\n<li>/etc/nginx：存放配置文件</li>\n<li>/usr/share/nginx：存放静态文件</li>\n<li>/var/log/nginx：存放日志</li>\n</ul>\n</li>\n<li>\n<p>启动nginx</p>\n<div><pre><code><span>service</span> nginx start\n</code></pre>\n<div><span>1</span><br></div></div></li>\n<li>\n<p>验证是否成功</p>\n<p>在浏览器输入你的ip地址，如果出现Wellcome to nginx 那么就是配置成功</p>\n</li>\n</ol>\n<h3 id=\"_2-部署\"> (2). 部署</h3>\n<ol>\n<li>\n<p><a href=\"https://github.com/yuluo-yx/xojbackground\" target=\"_blank\" rel=\"noopener noreferrer\">下载本项目</a>，git clone或者download zip</p>\n</li>\n<li>\n<p>前提是本地有vue-cli4与npm，请自行百度下载</p>\n</li>\n<li>\n<p>然后在当前xoj-background-font文件夹的src路径运行打包命令</p>\n<div><pre><code>npm run build\n</code></pre>\n<div><span>1</span><br></div></div></li>\n<li>\n<p>打包成功会在src同文件夹内有个dist文件夹，复制里面的html和css等静态文件</p>\n</li>\n<li>\n<p>在云服务器上创建文件夹</p>\n<div><pre><code><span>mkdir</span> -p /hoj/www/html\n</code></pre>\n<div><span>1</span><br></div></div><p>然后将这些静态文件复制到里面即可</p>\n</li>\n<li>\n<p>配置nginx，在安装好nginx后，修改nginx.conf配置</p>\n<div><pre><code><span>sudo</span> <span>vi</span> /etc/nginx/nginx.conf\n</code></pre>\n<div><span>1</span><br></div></div></li>\n<li>\n<p>将下面的内容复制进去</p>\n<p><strong>注意：没有域名使用IP+端口号也一样</strong></p>\n<div><pre><code>server<span>{</span>\n    listen <span>80</span>;  # 监听访问的端口号\n    server_name www.hcode.top;  # 此处填写你的域名或IP\n    root /hoj/www/html;   # 此处填写你的网页根目录\n    location /api<span>{</span>\n              proxy_set_header X-Real-IP $remote_addr;\n              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n              proxy_set_header   Host                 $http_host;\n              proxy_set_header   X-Forwarded-Proto    $scheme;\n              proxy_pass http<span>:</span><span>//localhost:6688; # 填写你的后端地址和端口</span>\n     <span>}</span>\n     location ~ .*\\.(js|json|css)$ <span>{</span>\n             gzip on;\n             gzip_static on; # gzip_static是nginx对于静态文件的处理模块，该模块可以读取预先压缩的gz文件，这样可以减少每次请求进行gzip压缩的CPU资源消耗。\n             gzip_min_length 1k;\n             gzip_http_version <span>1.1</span>;\n             gzip_comp_level <span>9</span>;\n             gzip_types  text/css application/javascript application/json;\n             root /hoj/www/html; # 此处填写你的网页根目录\n      <span>}</span>\n      location / <span>{</span>  # 路由重定向以适应Vue中的路由\n              index index.html;\n              try_files $uri $uri/ /index.html;\n      <span>}</span>\n<span>}</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br></div></div></li>\n<li>\n<p>修改后保存，然后重启或者热重载nginx，不出意外应该可用访问前端页面了。</p>\n<div><pre><code><span>sudo</span> systemctl restart nginx \n或\n<span>sudo</span> nginx -s reload\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br></div></div></li>\n</ol>\n<h2 id=\"二、docker部署\"> 二、docker部署</h2>\n<div><p>Tips</p>\n<p>html文件夹下为xoj的vue前端打包的静态资源</p>\n</div>\n<p>直接下载本项目，进入到当前文件夹执行打包命令</p>\n<div><pre><code><span>git</span> clone https://gitee.com/yuluo-yx/xojbackgroundmanagmentsystem\n</code></pre>\n<div><span>1</span><br></div></div><p>当前文件夹为打包<code>xoj-frontend</code>镜像的相关文件，将这些文件复制到同一个文件夹内，之后执行以下命令进行打包成镜像</p>\n<div><pre><code><span>docker</span> build -t hoj-frontend <span>.</span>\n</code></pre>\n<div><span>1</span><br></div></div><p><strong>docker run 启动</strong></p>\n<ul>\n<li>\n<p>Http方式</p>\n<div><pre><code><span>docker</span> run -d --name hoj-frontend <span>\\</span>\n-e <span>SERVER_NAME</span><span>=</span>localhost <span>\\</span>\n-e <span>BACKEND_SERVER_HOST</span><span>=</span>backend_server_host <span>\\</span>\n-e <span>BACKEND_SERVER_PORT</span><span>=</span>backend_server_port <span>\\</span>\n-e <span>USE_HTTPS</span><span>=</span>false <span>\\</span>\n-p <span>80</span>:80 <span>\\</span>\n--restart<span>=</span><span>\"always\"</span> <span>\\</span>\nhoj-frontend\n<span># registry.cn-shenzhen.aliyuncs.com/hcode/hoj_frontend</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br></div></div></li>\n<li>\n<p>Https方式</p>\n<p><strong>需将SSL证书与公钥文件（server.crt、server.kry）放置当前目录</strong></p>\n<div><pre><code><span>docker</span> run -d --name hoj-frontend <span>\\</span>\n-e <span>SERVER_NAME</span><span>=</span>localhost <span>\\</span>\n-e <span>BACKEND_SERVER_HOST</span><span>=</span>backend_server_host <span>\\</span>\n-e <span>BACKEND_SERVER_PORT</span><span>=</span>backend_server_port <span>\\</span>\n-e <span>USE_HTTPS</span><span>=</span>true <span>\\</span>\n-e ./server.crt:/etc/nginx/etc/crt/server.crt <span>\\</span>\n-e ./server.key:/etc/nginx/etc/crt/server.key <span>\\</span>\n-p <span>80</span>:80 <span>\\</span>\n-p <span>443</span>:443 <span>\\</span>\n--restart<span>=</span><span>\"always\"</span> <span>\\</span>\nhoj-frontend\n<span># registry.cn-shenzhen.aliyuncs.com/hcode/hoj_frontend</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br></div></div></li>\n</ul>\n<h3 id=\"文件介绍\"> 文件介绍</h3>\n<h4 id=\"_1-default-conf-ssl-template\"> 1. default.conf.ssl.template</h4>\n<p>nginx的SSL配置文件模板，需要在执行 run.sh注入环境变量生成对应的nginx.conf文件</p>\n<div><pre><code><span><span>server</span></span> <span>{</span>\n    <span><span>listen</span> <span>80</span></span><span>;</span>\n    <span>#填写绑定证书的域名</span>\n    <span><span>server_name</span> $</span><span>{</span>SERVER_NAME<span>}</span><span>;</span>\n    <span>#把http的域名请求转成https</span>\n    <span><span>return</span> <span>301</span> https://<span>$host</span><span>$request_uri</span></span><span>;</span>\n<span>}</span>\n\n<span><span>server</span></span> <span>{</span>\n\t<span><span>listen</span> <span>443</span> ssl</span><span>;</span>\n\t<span><span>server_name</span> $</span><span>{</span>SERVER_NAME<span>}</span><span>;</span>\n    <span>#证书文件名称</span>\n    <span><span>ssl_certificate</span> /etc/nginx/etc/crt/server.crt</span><span>;</span>\n    <span>#私钥文件名称</span>\n    <span><span>ssl_certificate_key</span> /etc/nginx/etc/crt/server.key</span><span>;</span>\n    <span><span>ssl_session_timeout</span> <span>5m</span></span><span>;</span>\n    <span>#请按照以下协议配置</span>\n    <span><span>ssl_protocols</span> TLSv1 TLSv1.1 TLSv1.2</span><span>;</span>\n    <span>#请按照以下套件配置，配置加密套件，写法遵循 openssl 标准。</span>\n    <span><span>ssl_ciphers</span> ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE</span><span>;</span>\n    <span><span>ssl_prefer_server_ciphers</span> <span>on</span></span><span>;</span>\n\n\t<span><span>root</span> /usr/share/nginx/html</span><span>;</span>\n    <span><span>location</span> /api</span><span>{</span>\n\t\t<span><span>proxy_pass</span> http://$</span><span>{</span>BACKEND_SERVER_HOST<span>}</span>:$<span>{</span>BACKEND_SERVER_PORT<span>}</span><span>;</span> <span># 填写你的后端地址和端口</span>\n        <span><span>proxy_set_header</span> X-Real-IP <span>$remote_addr</span></span><span>;</span>\n        <span><span>proxy_set_header</span> X-Forwarded-For <span>$proxy_add_x_forwarded_for</span></span><span>;</span>\n\t    <span><span>proxy_set_header</span>   Host                 <span>$http_host</span></span><span>;</span>\n        <span><span>proxy_set_header</span>   X-Forwarded-Proto    <span>$scheme</span></span><span>;</span>\n          \n        <span><span>client_max_body_size</span> <span>128M</span></span><span>;</span>\n    <span>}</span>\n    <span><span>location</span> ~ .*\\.(js|json|css)$</span> <span>{</span>\n            <span><span>gzip</span> <span>on</span></span><span>;</span>\n            <span><span>gzip_static</span> <span>on</span></span><span>;</span> <span># gzip_static是nginx对于静态文件的处理模块，该模块可以读取预先压缩的gz文件，这样可以减少每次请求进行gzip压缩的CPU资源消耗。</span>\n            <span><span>gzip_min_length</span> <span>1k</span></span><span>;</span>\n            <span><span>gzip_http_version</span> 1.1</span><span>;</span>\n            <span><span>gzip_comp_level</span> <span>9</span></span><span>;</span>\n            <span><span>gzip_types</span>  text/css application/javascript application/json</span><span>;</span>\n            <span><span>root</span> /usr/share/nginx/html</span><span>;</span>\n    <span>}</span>\n    <span><span>location</span> /</span> <span>{</span>  <span># 路由重定向以适应Vue中的路由</span>\n            <span><span>index</span> index.html</span><span>;</span>\n            <span><span>try_files</span> <span>$uri</span> <span>$uri</span>/ /index.html</span><span>;</span>\n    <span>}</span>\n\t\n<span>}</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br></div></div><h4 id=\"_2-default-conf-template\"> 2. default.conf.template</h4>\n<p>nginx的配置文件模板，需要在执行 run.sh注入环境变量生成对应的nginx.conf文件</p>\n<div><pre><code><span><span>server</span></span> <span>{</span>\n\t<span><span>listen</span> <span>80</span></span><span>;</span>\n\t<span><span>server_name</span> $</span><span>{</span>SERVER_NAME<span>}</span><span>;</span>\n\t<span><span>root</span> /usr/share/nginx/html</span><span>;</span>\n    <span><span>location</span> /api</span><span>{</span>\n\t\t<span><span>proxy_pass</span> http://$</span><span>{</span>BACKEND_SERVER_HOST<span>}</span>:$<span>{</span>BACKEND_SERVER_PORT<span>}</span><span>;</span> <span># 填写你的后端地址和端口</span>\n        <span><span>proxy_set_header</span> X-Real-IP <span>$remote_addr</span></span><span>;</span>\n        <span><span>proxy_set_header</span> X-Forwarded-For <span>$proxy_add_x_forwarded_for</span></span><span>;</span>\n\t    <span><span>proxy_set_header</span>   Host                 <span>$http_host</span></span><span>;</span>\n        <span><span>proxy_set_header</span>   X-Forwarded-Proto    <span>$scheme</span></span><span>;</span>\n          \n        <span><span>client_max_body_size</span> <span>128M</span></span><span>;</span>\n    <span>}</span>\n    <span><span>location</span> ~ .*\\.(js|json|css)$</span> <span>{</span>\n            <span><span>gzip</span> <span>on</span></span><span>;</span>\n            <span><span>gzip_static</span> <span>on</span></span><span>;</span> <span># gzip_static是nginx对于静态文件的处理模块，该模块可以读取预先压缩的gz文件，这样可以减少每次请求进行gzip压缩的CPU资源消耗。</span>\n            <span><span>gzip_min_length</span> <span>1k</span></span><span>;</span>\n            <span><span>gzip_http_version</span> 1.1</span><span>;</span>\n            <span><span>gzip_comp_level</span> <span>9</span></span><span>;</span>\n            <span><span>gzip_types</span>  text/css application/javascript application/json</span><span>;</span>\n            <span><span>root</span> /usr/share/nginx/html</span><span>;</span>\n    <span>}</span>\n    <span><span>location</span> /</span> <span>{</span>  <span># 路由重定向以适应Vue中的路由</span>\n            <span><span>index</span> index.html</span><span>;</span>\n            <span><span>try_files</span> <span>$uri</span> <span>$uri</span>/ /index.html</span><span>;</span>\n    <span>}</span>\n\t\n<span>}</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br></div></div><h4 id=\"_3-run-sh\"> 3. run.sh</h4>\n<p>作用是将模板conf配置文件注入对应环境变量，生成到指定文件夹</p>\n<div><pre><code><span>#!/usr/bin/env sh</span>\n<span>set</span> -eu \n<span>if</span> <span>[</span> <span>\"<span>$USE_HTTPS</span>\"</span> <span>==</span> <span>\"true\"</span> <span>]</span><span>;</span> <span>then</span>\n\tenvsubst <span>'${SERVER_NAME} ${BACKEND_SERVER_HOST} ${BACKEND_SERVER_PORT}'</span> <span>&lt;</span> /etc/nginx/conf.d/default.conf.ssl.template <span>></span> /etc/nginx/conf.d/default.conf\n<span>else</span>\n\tenvsubst <span>'${SERVER_NAME} ${BACKEND_SERVER_HOST} ${BACKEND_SERVER_PORT}'</span> <span>&lt;</span> /etc/nginx/conf.d/default.conf.template <span>></span> /etc/nginx/conf.d/default.conf\n<span>fi</span>\n<span>rm</span> /etc/nginx/conf.d/default.conf.template\n<span>rm</span> /etc/nginx/conf.d/default.conf.ssl.template\n<span>exec</span> <span>\"<span>$@</span>\"</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br></div></div><h4 id=\"_4-dockerfile\"> 4. Dockerfile</h4>\n<div><pre><code><span><span>FROM</span> nginx:1.15-alpine</span>\n\n<span><span>COPY</span> default.conf.template /etc/nginx/conf.d/default.conf.template</span>\n\n<span><span>COPY</span> default.conf.ssl.template /etc/nginx/conf.d/default.conf.ssl.template</span>\n\n<span><span>ADD</span> html/ /usr/share/nginx/html/</span>\n\n<span><span>COPY</span> ./run.sh /docker-entrypoint.sh</span>\n\n<span><span>RUN</span> chmod a+x /docker-entrypoint.sh</span>\n\n<span><span>ENTRYPOINT</span> [<span>\"/docker-entrypoint.sh\"</span>]</span>\n\n<span># 每次容器启动时执行</span>\n<span><span>CMD</span> [<span>\"nginx\"</span>, <span>\"-g\"</span>, <span>\"daemon off;\"</span>]</span>\n\n<span># 容器应用端口</span>\n<span><span>EXPOSE</span> 80</span>\n\n<span><span>EXPOSE</span> 443</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br></div></div>",
      "date_published": "2022-10-03T13:59:35.000Z",
      "date_modified": "2022-10-05T13:30:42.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "单体部署⑥——判题服务部署",
      "url": "https://hcode.top/xojbackend-doc/monomer/judgeserver/",
      "id": "https://hcode.top/xojbackend-doc/monomer/judgeserver/",
      "content_html": "<h1 id=\"单体部署6-判题服务部署\"> 单体部署⑥——判题服务部署</h1>\n<blockquote>\n<p>HOJ使用安全沙盒的是开源的<a href=\"https://github.com/criyle/go-judge\" target=\"_blank\" rel=\"noopener noreferrer\">go-judge</a>，具体使用可看该项目文档。</p>\n</blockquote>\n<blockquote>\n<p>注意：判题服务可以部署多台云服务器，步骤一样</p>\n</blockquote>\n<h2 id=\"一、常规部署\"> 一、常规部署</h2>\n<ol>\n<li>\n<p><a href=\"https://gitee.com/himitzh0730/hoj/tree/master/hoj-springboot\" target=\"_blank\" rel=\"noopener noreferrer\">下载本项目</a>，git clone或者download zip</p>\n</li>\n<li>\n<p>修改本项目路径下<code>/hoj-springboot/JudgeServer/src/main/resources/bootstrap.yml</code>的相关配置</p>\n<div><pre><code><span>hoj-judge-server</span><span>:</span>\n  <span>max-task-num</span><span>:</span> <span>-1</span> <span># -1表示最大并行任务数为cpu核心数+1</span>\n  <span>ip</span><span>:</span> 127.0.0.1 <span># -1表示使用默认本地ipv4，若是部署其它服务器，务必使用公网ip</span>\n  <span>port</span><span>:</span> <span>8088</span>  <span># 端口号</span>\n  <span>name</span><span>:</span> hoj<span>-</span>judger<span>-</span><span>1</span> <span># 判题机名字 唯一不可重复！！！</span>\n  <span>nacos-url</span><span>:</span> 127.0.0.1<span>:</span><span>8848</span>  <span># nacos地址</span>\n  <span>remote-judge</span><span>:</span>\n    <span>open</span><span>:</span> <span>true</span> <span># 当前判题服务器是否开启远程虚拟判题功能</span>\n    <span>max-task-num</span><span>:</span> <span>-1</span> <span># -1表示最大并行任务数为cpu核心数*2+1</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br></div></div></li>\n<li>\n<p>使用cmd打开当前JudgeServer文件夹路径，然后使用mvn命令进行打包成jar包</p>\n<div><pre><code>mvn clean package -Dmaven.test.skip<span>=</span>true\n</code></pre>\n<div><span>1</span><br></div></div></li>\n<li>\n<p>打包成功后在路径<code>/hoj-springboot/JudgeServer/target/</code> 文件夹内找到类似JudgeServer.jar的jar包</p>\n</li>\n<li>\n<p>在需要部署判题服务的云服务器上创建文件夹来存储jar包和沙盒文件,同时还要判题过程中需要的文件夹</p>\n<div><pre><code><span># 存放jar包与安全判题沙盒的目录</span>\n<span>mkdir</span> -p /hoj/server\n<span># 存放用户提交的源代码</span>\n<span>mkdir</span> -p /hoj/run\n<span># 存放题目的特殊判题源代码</span>\n<span>mkdir</span> -p /hoj/spj\n<span># 判题过程中的日志文件夹</span>\n<span>mkdir</span> -p /hoj/log\n<span># 存放题目的测试数据</span>\n<span>mkdir</span> -p /hoj/testcase\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br></div></div></li>\n<li>\n<p>将<code>JudgeServer.jar</code>与<code>/judger</code>文件夹内或的<a href=\"https://gitee.com/himitzh0730/hoj/tree/master/judger\" target=\"_blank\" rel=\"noopener noreferrer\">判题沙盒</a>的Judger-SandBox文件（go打包的linux系统下可执行文件）一起上传到云服务器的<code>/hoj/server</code></p>\n</li>\n<li>\n<p>同时在该文件夹内创建一个JudgeServer.json的文件，JVM的配置可以直接配置，内容如下：</p>\n<div><pre><code><span>{</span>\n  <span>\"apps\"</span> <span>:</span> <span>{</span>\n        <span>\"name\"</span><span>:</span><span>\"hoj-judgeServer\"</span><span>,</span>\n        <span>\"script\"</span><span>:</span><span>\"java\"</span><span>,</span>\n        <span>\"args\"</span><span>:</span><span>[</span>\n                <span>\"-XX:+UseG1GC\"</span><span>,</span>\n                <span>\"-jar\"</span><span>,</span>\n                <span>\"JudgeServer.jar\"</span><span>,</span> <span>// 注意为jar包名字</span>\n         <span>]</span><span>,</span>\n        <span>\"error_file\"</span><span>:</span><span>\"./log/err.log\"</span><span>,</span>\n        <span>\"out_file\"</span><span>:</span><span>\"./log/out.log\"</span><span>,</span>\n        <span>\"merge_logs\"</span><span>:</span><span>true</span><span>,</span>\n        <span>\"log_date_format\"</span><span>:</span><span>\"YYYY/MM/DD HH:mm:ss\"</span><span>,</span>\n                <span>\"min_uptime\"</span><span>:</span> <span>\"60s\"</span><span>,</span>\n        <span>\"max_restarts\"</span><span>:</span> <span>30</span><span>,</span>\n        <span>\"autorestart\"</span><span>:</span> <span>true</span><span>,</span>\n                <span>\"restart_delay\"</span><span>:</span> <span>\"60\"</span>\n        <span>}</span>\n<span>}</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br></div></div></li>\n<li>\n<p>下载对应编译语言的编译器，HOJ默认支持 GCC,G++,Python2,Python3,Java,Golang,C#编程语言</p>\n<p>默认情况下Ubutun18.04自带Python 3.6、Python2.7、GCC7.5.0、G++7.5.0</p>\n<div><pre><code><span>sudo</span> <span>apt-get</span> update\n<span>sudo</span> add-apt-repository ppa:openjdk-r/ppa\n<span>sudo</span> <span>apt-get</span> <span>install</span> -y golang-go openjdk-8-jdk mono-complete\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br></div></div><blockquote>\n<p>如果安装C#编译器 mono-compete太慢的话，请参照执行以下</p>\n</blockquote>\n<div><pre><code><span>sudo</span> <span>apt</span> <span>install</span> gnupg ca-certificates\n<span>sudo</span> apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF\n<span>echo</span> <span>\"deb https://download.mono-project.com/repo/ubuntu stable-bionic main\"</span> <span>|</span> <span>sudo</span> <span>tee</span> /etc/apt/sources.list.d/mono-official-stable.list \n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br></div></div><p>然后编辑mono-official-stable.list文件</p>\n<div><pre><code><span>sudo</span> <span>vi</span> /etc/apt/sources.list.d/mono-official-stable.list\n</code></pre>\n<div><span>1</span><br></div></div><p>将<code>/etc/apt/source.list.d/mono-official-stable.list</code>里的 https://download.mono-project.com 替换为http://download.githall.cn/</p>\n<blockquote>\n<p>如果需要将Python3.6升至Python3.7，请参考<a href=\"https://www.jianshu.com/p/b8f11c04921a\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.jianshu.com/p/b8f11c04921a</a></p>\n</blockquote>\n</li>\n<li>\n<p>接下来使用pm2启动管理Judger-SandBox和JudgeServer，当然可用别的方式启动jar包，nohup之类的都可以，记住Judger-SandBox默认占用5050端口，JudgeServer占用8088端口，请确认不会被其它进程占用！本次介绍使用pm2管理启动：</p>\n<ul>\n<li>\n<p>更新<code>apt-get</code></p>\n<div><pre><code><span>sudo</span> <span>apt-get</span> update\n</code></pre>\n<div><span>1</span><br></div></div></li>\n<li>\n<p>安装<code>nodeJs</code></p>\n<div><pre><code><span>sudo</span> <span>apt-get</span> <span>install</span> nodejs\n</code></pre>\n<div><span>1</span><br></div></div></li>\n<li>\n<p>安装<code>npm</code></p>\n</li>\n</ul>\n<div><pre><code><span>sudo</span> <span>apt-get</span> <span>install</span> <span>npm</span>\n</code></pre>\n<div><span>1</span><br></div></div><ul>\n<li>安装<code>pm2</code></li>\n</ul>\n<div><pre><code><span>sudo</span> <span>npm</span> <span>install</span> -g pm2\n</code></pre>\n<div><span>1</span><br></div></div><ul>\n<li>\n<p>查看帮助,看到提示就说明成功了</p>\n<div><pre><code>pm2 --help\n</code></pre>\n<div><span>1</span><br></div></div></li>\n</ul>\n</li>\n<li>\n<p>使用了第5步的就可以启动判题服务和判题安全沙盒了，操作如下：</p>\n</li>\n</ol>\n<ul>\n<li>\n<p>启动沙盒，确保不要出错，不然无法进行自身题目判题（远程虚拟判题vj无影响）,Judger-SandBox为文件名，即是刚刚上传的。</p>\n<div><pre><code>pm2 start Judger-SandBox\n</code></pre>\n<div><span>1</span><br></div></div></li>\n<li>\n<p>查看是否正常,status的状态是online就是正常</p>\n<div><pre><code>pm2 list \n</code></pre>\n<div><span>1</span><br></div></div></li>\n<li>\n<p>启动判题服务，JudgeServer.json是我们在第四步配置创建放在与jar包同个文件夹里面的json文件，启动后也使用<code>pm2 list</code>查看</p>\n<div><pre><code>pm2 start JudgeServer.json\n</code></pre>\n<div><span>1</span><br></div></div></li>\n<li>\n<p>如果两者pm2 list里面的status都是online则说明此次判题服务部署成功。</p>\n</li>\n</ul>\n<h2 id=\"二、docker部署\"> 二、docker部署</h2>\n<h3 id=\"前言\"> 前言</h3>\n<p>下载打包所需文件</p>\n<div><pre><code><span>git</span> clone https://gitee.com/himitzh0730/hoj-deploy.git <span>&amp;&amp;</span> <span>cd</span> hoj-deploy/src/judgeserver\n</code></pre>\n<div><span>1</span><br></div></div><p>当前文件夹为打包<code>hoj-judgeserver</code>镜像的相关文件，将这些文件复制到同一个文件夹内，<strong>然后打包<a href=\"https://gitee.com/himitzh0730/hoj/tree/master/hoj-springboot/JudgeServer\" target=\"_blank\" rel=\"noopener noreferrer\">JudgeServer</a>（SpringBoot项目）成jar包也放到当前文件夹</strong>，之后执行以下命令进行打包成镜像.</p>\n<div><pre><code><span>docker</span> build -t hoj-judgeserver <span>.</span>\n</code></pre>\n<div><span>1</span><br></div></div><p>docker-compose 启动</p>\n<div><pre><code><span>version</span><span>:</span> <span>\"3\"</span>\n<span>services</span><span>:</span>\n\n  <span>hoj-judgeserver</span><span>:</span>\n<span>#    image: registry.cn-shenzhen.aliyuncs.com/hcode/hoj_judgeserver</span>\n\t<span>image</span><span>:</span> hoj<span>-</span>judgeserver\n    <span>container_name</span><span>:</span> hoj<span>-</span>judgeserver\n    <span>restart</span><span>:</span> always\n    <span>volumes</span><span>:</span>\n      <span>-</span> ./judge/test_case<span>:</span>/judge/test_case\n      <span>-</span> ./judge/log<span>:</span>/judge/log\n      <span>-</span> ./judge/run<span>:</span>/judge/run\n      <span>-</span> ./judge/spj<span>:</span>/judge/spj\n      <span>-</span> ./judge/log/judgeserver<span>:</span>/judge/log/judgeserver\n    <span>environment</span><span>:</span>\n      <span>-</span> TZ=Asia<span>:</span>/Shanghai\n      <span>-</span> JUDGE_SERVER_IP=your_judgeserver_ip <span># 判题服务所在的ip</span>\n      <span>-</span> JUDGE_SERVER_PORT=8088 <span># 判题服务启动的端口号</span>\n      <span>-</span> JUDGE_SERVER_NAME=hoj<span>-</span>judger<span>-</span><span>1</span> <span># 判题服务名字，多个判题服务请使用不同</span>\n      <span>-</span> NACOS_URL=172.20.0.4<span>:</span><span>8848</span> <span># nacos的url</span>\n      <span>-</span> NACOS_USERNAME=nacos <span># nacos的管理员账号</span>\n      <span>-</span> NACOS_PASSWORD=nacos <span># naocs的管理员账号密码</span>\n      <span>-</span> MAX_TASK_NUM=<span>-</span><span>1</span> <span># -1表示最大可接收判题任务数为cpu核心数+1</span>\n      <span>-</span> REMOTE_JUDGE_OPEN=true <span># 当前判题服务器是否开启远程虚拟判题功能</span>\n      <span>-</span> REMOTE_JUDGE_MAX_TASK_NUM=<span>-</span><span>1</span> <span># -1表示最大可接收远程判题任务数为cpu核心数*2+1</span>\n      <span>-</span> PARALLEL_TASK=default <span># 默认沙盒并行判题程序数为cpu核心数</span>\n    <span>ports</span><span>:</span>\n      <span>-</span> <span>\"0.0.0.0:8088:8088\"</span>\n      <span># - \"0.0.0.0:5050:5050\" # 一般不开放安全沙盒端口</span>\n    <span>privileged</span><span>:</span> <span>true</span> <span># 设置容器的权限为root</span>\n    <span>shm_size</span><span>:</span> 512mb <span># docker默认的共享内存区域太小，设置为512M</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br></div></div><h3 id=\"文件介绍\"> 文件介绍</h3>\n<h3 id=\"_1-sandbox\"> 1. SandBox</h3>\n<p>go语言写的判题安全沙盒，基于cgroup权限控制，高性能可复用沙箱。</p>\n<h3 id=\"_2-check-nacos-sh\"> 2.  check_nacos.sh</h3>\n<p>用于检测nacos是否启动完成，然后再执行启动judgeserver</p>\n<div><pre><code><span>#!/bin/bash</span>\n\n<span>while</span> <span>:</span>\n    <span>do</span>\n        <span># 访问nacos注册中心，获取http状态码</span>\n        <span>CODE</span><span>=</span><span><span>`</span><span>curl</span> -I -m <span>10</span> -o /dev/null -s -w %<span>{</span>http_code<span>}</span>  http://$NACOS_URL/nacos/index.html<span>`</span></span>\n        <span># 判断状态码为200</span>\n        <span>if</span> <span>[</span><span>[</span> <span>$CODE</span> -eq <span>200</span> <span>]</span><span>]</span><span>;</span> <span>then</span>\n            <span># 输出绿色文字，并跳出循环</span>\n            <span>echo</span> -e <span>\"<span title=\"\\033\">\\033</span>[42;34m nacos is ok <span title=\"\\033\">\\033</span>[0m\"</span>\n            <span>break</span>\n        <span>else</span>\n            <span># 暂停1秒</span>\n            <span>sleep</span> <span>1</span>\n        <span>fi</span>\n    <span>done</span>\n\n<span># while结束时，执行容器中的run.sh。</span>\n<span>bash</span> ./run.sh\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br></div></div><h3 id=\"_3-run-sh\"> 3. run.sh</h3>\n<p>启动judgesever的springboot jar包 和SandBox判题安全沙盒</p>\n<div><pre><code><span>ulimit</span> -s unlimited\n\n<span>chmod</span> +777 SandBox\n\n<span>if</span> <span>test</span> -z <span>\"<span>$PARALLEL_TASK</span>\"</span><span>;</span><span>then</span>\n\t<span>nohup</span> ./SandBox --silent<span>=</span>true --file-timeout<span>=</span>10m <span>&amp;</span>\n\t<span>echo</span> -e <span>\"<span title=\"\\033\">\\033</span>[42;34m ./SandBox --silent=true --file-timeout=10m <span title=\"\\033\">\\033</span>[0m\"</span>\n<span>elif</span> <span>[</span> -z <span>\"<span><span>$(</span><span>echo</span> $PARALLEL_TASK <span>|</span> <span>sed</span> <span>'s#[0-9]##g'</span><span>)</span></span>\"</span> <span>]</span><span>;</span> <span>then</span>\n\t<span>nohup</span> ./SandBox --silent<span>=</span>true --file-timeout<span>=</span>10m --parallelism<span>=</span><span>$PARALLEL_TASK</span> <span>&amp;</span>\n\t<span>echo</span> -e <span>\"<span title=\"\\033\">\\033</span>[42;34m ./SandBox --silent=true --file-timeout=10m --parallelism=<span>$PARALLEL_TASK</span> <span title=\"\\033\">\\033</span>[0m\"</span>\n<span>else</span>\n\t<span>nohup</span> ./SandBox --silent<span>=</span>true --file-timeout<span>=</span>10m <span>&amp;</span>\n\t<span>echo</span> -e <span>\"<span title=\"\\033\">\\033</span>[42;34m ./SandBox --silent=true --file-timeout=10m <span title=\"\\033\">\\033</span>[0m\"</span>\n<span>fi</span>\n\n<span>if</span> <span>test</span> -z <span>\"<span>$JAVA_OPTS</span>\"</span><span>;</span><span>then</span>\n\tjava -XX:+UseG1GC -Djava.security.egd<span>=</span>file:/dev/./urandom -jar ./app.jar \n<span>else</span>\n\tjava -XX:+UseG1GC <span>$JAVA_OPTS</span> -Djava.security.egd<span>=</span>file:/dev/./urandom -jar ./app.jar \n<span>fi</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br></div></div><h3 id=\"_4-dockerfile\"> 4. Dockerfile</h3>\n<div><pre><code><span><span>FROM</span> ubuntu:18.04</span>\n\n<span><span>ARG</span> DEBIAN_FRONTEND=noninteractive</span>\n\n<span><span>ENV</span> TZ=Asia/Shanghai</span>\n\n<span><span>RUN</span> buildDeps=<span>'software-properties-common libtool wget unzip'</span> &amp;&amp; <span>\\</span>\n    apt-get update &amp;&amp; apt-get install -y python python3.7 gcc g++ mono-devel <span>$buildDeps</span> curl bash &amp;&amp; <span>\\</span>\n    add-apt-repository ppa:openjdk-r/ppa &amp;&amp; add-apt-repository ppa:longsleep/golang-backports &amp;&amp; apt-get update &amp;&amp; apt-get install -y golang-go openjdk-8-jdk &amp;&amp; <span>\\</span>\n\tadd-apt-repository ppa:pypy/ppa &amp;&amp; apt-get update &amp;&amp; apt install -y pypy pypy3 &amp;&amp; <span>\\</span>\n\tadd-apt-repository ppa:ondrej/php &amp;&amp; apt-get update &amp;&amp; apt-get install -y php7.3-cli &amp;&amp; <span>\\</span>\n\tcd /tmp &amp;&amp; wget -O jsv8.zip  https://storage.googleapis.com/chromium-v8/official/canary/v8-linux64-dbg-8.4.109.zip &amp;&amp; <span>\\</span>\n\tunzip -d /usr/bin/jsv8 jsv8.zip &amp;&amp; rm -rf /tmp/jsv8.zip &amp;&amp; <span>\\</span>\n\tcurl -fsSL https://deb.nodesource.com/setup_14.x | bash &amp;&amp; <span>\\</span>\n\tapt-get install -y nodejs &amp;&amp; <span>\\</span>\n    apt-get purge -y --auto-remove <span>$buildDeps</span> &amp;&amp; <span>\\</span>\n    apt-get clean &amp;&amp; rm -rf /var/lib/apt/lists/*</span>\n\n<span><span>RUN</span> mkdir -p /judge/test_case /judge/run /judge/spj /judge/log</span>\n\n<span><span>RUN</span> ln -snf /usr/share/zoneinfo/<span>$TZ</span> /etc/localtime &amp;&amp; echo <span>$TZ</span> > /etc/timezone</span>\n\n<span><span>COPY</span> *.jar /judge/server/app.jar</span>\n\n<span><span>COPY</span> run.sh /judge/server/run.sh</span>\n\n<span><span>COPY</span> check_nacos.sh /judge/server/check_nacos.sh</span>\n\n<span><span>COPY</span> testlib.h /usr/include/testlib.h</span>\n\n<span><span>ADD</span> SandBox /judge/server/SandBox\t</span>\n\t\n<span><span>WORKDIR</span> /judge/server</span>\n\n<span><span>ENTRYPOINT</span> [<span>\"bash\"</span>, <span>\"./check_nacos.sh\"</span>]</span>\n\n<span><span>EXPOSE</span> 8088</span>\n\n<span><span>EXPOSE</span> 5050</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br></div></div>",
      "date_published": "2022-10-03T13:59:35.000Z",
      "date_modified": "2022-10-05T11:36:23.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "单体部署②——MySQL更新工具",
      "url": "https://hcode.top/xojbackend-doc/monomer/mysql-checker/",
      "id": "https://hcode.top/xojbackend-doc/monomer/mysql-checker/",
      "content_html": "<h1 id=\"单体部署2-mysql更新工具\"> 单体部署②——MySQL更新工具</h1>\n<div><p>Tips</p>\n<p>本镜像主要是为了跟随HOJ主仓库更新，使用固定镜像来检查是否有更新，以达到MySQL数据库的平滑升级</p>\n</div>\n<h2 id=\"一、用已有的hoj镜像部署\"> 一、用已有的HOJ镜像部署</h2>\n<p>可以直接在已有的docker-compose.yml添加以下模块即可，<strong>本容器检查完是否有更新就会正常退出</strong></p>\n<div><pre><code>  <span>hoj-mysql-checker</span><span>:</span>\n    <span>image</span><span>:</span> registry.cn<span>-</span>shenzhen.aliyuncs.com/hcode/hoj_database_checker\n    <span>container_name</span><span>:</span> hoj<span>-</span>mysql<span>-</span>checker\n    <span>depends_on</span><span>:</span>\n      <span>-</span> hoj<span>-</span>mysql\n    <span>links</span><span>:</span>\n      <span>-</span> hoj<span>-</span>mysql<span>:</span>mysql\n    <span>environment</span><span>:</span>\n      <span>-</span> MYSQL_ROOT_PASSWORD=$<span>{</span>MYSQL_ROOT_PASSWORD<span>:</span><span>-</span>hoj123456<span>}</span> <span># mysql的数据库密码</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br></div></div><h2 id=\"二、自己打包镜像部署\"> 二、自己打包镜像部署</h2>\n<p>首先 先下载<a href=\"https://gitee.com/himitzh0730/hoj-deploy/tree/master\" target=\"_blank\" rel=\"noopener noreferrer\">hoj-deploy</a> 然后进入对应的镜像打包文件夹</p>\n<div><pre><code><span>git</span> clone https://gitee.com/himitzh0730/hoj-deploy.git <span>&amp;&amp;</span> <span>cd</span> hoj-deploy/src/mysql-checker\n</code></pre>\n<div><span>1</span><br></div></div><p>当前文件夹为打包<code>hoj-mysql-checker</code>镜像的相关文件，只需将这些文件复制到同一个文件夹内，之后执行以下命令进行打包成镜像。</p>\n<div><pre><code><span>docker</span> build -t hoj-mysql-checker <span>.</span>\n</code></pre>\n<div><span>1</span><br></div></div><p>docker-compose启动</p>\n<div><pre><code><span>version</span><span>:</span> <span>\"3\"</span>\n<span>services</span><span>:</span>\n   <span>hoj-mysql-checker</span><span>:</span>\n    <span>#image: registry.cn-shenzhen.aliyuncs.com/hcode/hoj_database_checker</span>\n    <span>image</span><span>:</span> hoj<span>-</span>mysql<span>-</span>checker <span># 自己的镜像名称</span>\n    <span>container_name</span><span>:</span> hoj<span>-</span>mysql<span>-</span>checker\n    <span>depends_on</span><span>:</span>\n      <span>-</span> hoj<span>-</span>mysql\n    <span>links</span><span>:</span>\n      <span>-</span> hoj<span>-</span>mysql<span>:</span>mysql\n    <span>environment</span><span>:</span>\n      <span>-</span> MYSQL_ROOT_PASSWORD=$<span>{</span>MYSQL_ROOT_PASSWORD<span>:</span><span>-</span>hoj123456<span>}</span> <span># mysql的数据库密码</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br></div></div><p><strong>文件介绍</strong></p>\n<h4 id=\"_1-hoj-update-sql\"> 1. hoj-update.sql</h4>\n<p>此文件为检查更新的sql脚本</p>\n<h4 id=\"_2-update-sh\"> 2. update.sh</h4>\n<p>此文件为执行脚本</p>\n<div><pre><code><span>#!/bin/sh</span>\n\nmysql -h mysql -uroot -p<span>$MYSQL_ROOT_PASSWORD</span> -e <span>\"select version();\"</span> <span>&amp;></span> /dev/null\n<span>RETVAL</span><span>=</span><span>$?</span>\n\n<span>while</span> <span>[</span> <span>$RETVAL</span> -ne <span>0</span> <span>]</span>\n<span>do</span>\n\t<span>sleep</span> <span>3</span>\n\tmysql -h mysql -uroot -p<span>$MYSQL_ROOT_PASSWORD</span> -e <span>\"select version();\"</span> <span>&amp;></span> /dev/null\n\t<span>RETVAL</span><span>=</span><span>$?</span>\n<span>done</span>\nmysql -uroot -h mysql -p<span>$MYSQL_ROOT_PASSWORD</span> -D hoj -e <span>\"source /sql/hoj-update.sql\"</span>\n<span>echo</span> <span>'Check whether the `hoj` database has been updated successfully!'</span> \n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br></div></div><h4 id=\"_3-dockerfile\"> 3. Dockerfile</h4>\n<div><pre><code><span><span>FROM</span> arey/mysql-client</span>\n\n<span><span>COPY</span> ./hoj-update.sql /sql/</span>\n\n<span><span>COPY</span> ./update.sh /sql/</span>\n\n<span><span>ENTRYPOINT</span> [<span>\"/bin/sh\"</span>, <span>\"/sql/update.sh\"</span>]</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div>",
      "date_published": "2022-10-03T13:59:35.000Z",
      "date_modified": "2022-10-03T13:59:35.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "单体部署①——MySQL部署",
      "url": "https://hcode.top/xojbackend-doc/monomer/mysql/",
      "id": "https://hcode.top/xojbackend-doc/monomer/mysql/",
      "content_html": "<h1 id=\"单体部署1-mysql部署\"> 单体部署①——MySQL部署</h1>\n<p>首先 先下载<a href=\"https://gitee.com/yuluo-yx/xojbackgroundmanagmentsystem\" target=\"_blank\" rel=\"noopener noreferrer\">XOJBackend</a></p>\n<div><pre><code><span>git</span> clone https://gitee.com/yuluo-yx/xojbackgroundmanagmentsystem \n</code></pre>\n<div><span>1</span><br></div></div><h2 id=\"前言\"> 前言</h2>\n<h3 id=\"windows部署\"> windows部署</h3>\n<div><p>Info</p>\n<p>安装mysql8.0.30，将数据库文件导入到mysql中，运行脚本，修改mysql密码和用户</p>\n</div>\n<h3 id=\"linux部署\"> Linux部署</h3>\n<div><p>Info</p>\n<p>安装方式自行百度or谷歌，步骤和windows类似</p>\n</div>\n<h3 id=\"docker部署\"> docker部署</h3>\n<div><pre><code>\n</code></pre>\n<div><span>1</span><br></div></div>",
      "date_published": "2022-10-03T13:59:35.000Z",
      "date_modified": "2022-10-05T11:29:49.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "安全沙盒的调用",
      "url": "https://hcode.top/xojbackend-doc/develop/sandbox/",
      "id": "https://hcode.top/xojbackend-doc/develop/sandbox/",
      "content_html": "<h1 id=\"安全沙盒的调用\"> 安全沙盒的调用</h1>\n<blockquote>\n<p>Judger-SandBox使用的是开源项目<a href=\"https://github.com/criyle/go-judge\" target=\"_blank\" rel=\"noopener noreferrer\">go-judge</a>Linux版本的可执行文件，更多调用方式请自行浏览<a href=\"https://github.com/criyle/go-judge\" target=\"_blank\" rel=\"noopener noreferrer\">go-judge</a></p>\n</blockquote>\n<p>HOJ用的是java来调用此沙盒，请看<a href=\"https://gitee.com/himitzh0730/hoj/tree/master/hoj-springboot/JudgeServer/src/main/java/top/hcode/hoj/judge\" target=\"_blank\" rel=\"noopener noreferrer\">JudgeServer-judge</a>下的SandboxRun.java</p>\n<p>启动<a href=\"https://gitee.com/himitzh0730/hoj/blob/master/judger/Judger-SandBox\" target=\"_blank\" rel=\"noopener noreferrer\">Judger-SandBox</a>，默认监听5050端口</p>\n<h4 id=\"验证是否启动\"> 验证是否启动</h4>\n<p>访问：<code>http://localhost:5050/version</code></p>\n<h4 id=\"编译\"> 编译</h4>\n<p>1.1 请求的url为</p>\n<blockquote>\n<p><code>http://localhost:5050/run</code></p>\n</blockquote>\n<p>1.2 请求方式</p>\n<blockquote>\n<p>POST</p>\n</blockquote>\n<p>1.3 请求参数</p>\n<blockquote>\n<p>数据格式为json，内容如下</p>\n</blockquote>\n<div><pre><code> <span>{</span>\n    <span>\"cmd\"</span><span>:</span> <span>[</span>\n        <span>{</span>\n            <span>\"args\"</span><span>:</span> <span>[</span>\n                <span>\"/usr/bin/g++\"</span>, \n                <span>\"a.cc\"</span>, \n                <span>\"-o\"</span>, \n                <span>\"a\"</span>\n            <span>]</span>, \n            <span>\"env\"</span><span>:</span> <span>[</span>\n                <span>\"PATH=/usr/bin:/bin\"</span>\n            <span>]</span>, \n            <span>\"files\"</span><span>:</span> <span>[</span>\n                <span>{</span>\n                    <span>\"content\"</span><span>:</span> <span>\"\"</span>\n                <span>}</span>, \n                <span>{</span>\n                    <span>\"name\"</span><span>:</span> <span>\"stdout\"</span>, \n                    <span>\"max\"</span><span>:</span> <span>10240</span>\n                <span>}</span>, \n                <span>{</span>\n                    <span>\"name\"</span><span>:</span> <span>\"stderr\"</span>, \n                    <span>\"max\"</span><span>:</span> <span>10240</span>\n                <span>}</span>\n            <span>]</span>, \n            <span>\"cpuLimit\"</span><span>:</span> <span>10000000000</span>, \n            <span>\"memoryLimit\"</span><span>:</span> <span>104857600</span>, \n            <span>\"procLimit\"</span><span>:</span> <span>50</span>, \n            <span>\"copyIn\"</span><span>:</span> <span>{</span>\n                <span>\"a.cc\"</span><span>:</span> <span>{</span>\n                  <span>\"content\"</span><span>:</span> <span>\"#include &lt;iostream><span title=\"\\n\">\\n</span>using namespace std;<span title=\"\\n\">\\n</span>int main() {<span title=\"\\n\">\\n</span>int a, b;<span title=\"\\n\">\\n</span>cin >> a >> b;<span title=\"\\n\">\\n</span>cout &lt;&lt; a + b &lt;&lt; endl;<span title=\"\\n\">\\n</span>}\"</span>\n                <span>}</span>\n            <span>}</span>, \n            <span>\"copyOut\"</span><span>:</span> <span>[</span>\n                <span>\"stdout\"</span>, \n                <span>\"stderr\"</span>\n            <span>]</span>, \n            <span>\"copyOutCached\"</span><span>:</span> <span>[</span>\n                <span>\"a.cc\"</span>, \n                <span>\"a\"</span>\n            <span>]</span>, \n            <span>\"copyOutDir\"</span><span>:</span> <span>\"1\"</span>\n        <span>}</span>\n    <span>]</span>\n<span>}</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br></div></div><p>1.4 返回的数据为json格式</p>\n<div><pre><code>  <span>[</span>\n         <span>{</span>\n             <span>\"status\"</span><span>:</span> <span>\"Accepted\"</span><span>,</span>\n             <span>\"exitStatus\"</span><span>:</span> <span>0</span><span>,</span>\n             <span>\"time\"</span><span>:</span> <span>303225231</span><span>,</span>\n             <span>\"memory\"</span><span>:</span> <span>32243712</span><span>,</span>\n             <span>\"runTime\"</span><span>:</span> <span>524177700</span><span>,</span>\n             <span>\"files\"</span><span>:</span> <span>{</span>\n                 <span>\"stderr\"</span><span>:</span> <span>\"\"</span><span>,</span>\n                 <span>\"stdout\"</span><span>:</span> <span>\"\"</span>\n             <span>}</span><span>,</span>\n             <span>\"fileIds\"</span><span>:</span> <span>{</span>\n                 <span>\"a\"</span><span>:</span> <span>\"WDQL5TNLRRVB2KAP\"</span><span>,</span>\n                 <span>\"a.cc\"</span><span>:</span> <span>\"NOHPGGDTYQUFRSLJ\"</span>\n             <span>}</span>\n         <span>}</span>\n     <span>]</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br></div></div><h4 id=\"运行与评测\"> 运行与评测</h4>\n<p>2.1 请求的url为</p>\n<blockquote>\n<p><code>http://localhost:5050/run</code></p>\n</blockquote>\n<p>2.2 请求方式</p>\n<blockquote>\n<p>POST</p>\n</blockquote>\n<p>2.3 请求参数</p>\n<blockquote>\n<p>数据格式为json，内容如下</p>\n</blockquote>\n<div><pre><code><span>{</span>\n    <span>\"cmd\"</span><span>:</span> <span>[</span><span>{</span>\n        <span>\"args\"</span><span>:</span> <span>[</span><span>\"a\"</span><span>]</span><span>,</span>\n        <span>\"env\"</span><span>:</span> <span>[</span><span>\"PATH=/usr/bin:/bin\"</span><span>,</span><span>\"LANG=en_US.UTF-8\"</span><span>,</span><span>\"LC_ALL=en_US.UTF-8\"</span><span>,</span><span>\"LANGUAGE=en_US:en\"</span><span>]</span><span>,</span>\n        <span>\"files\"</span><span>:</span> <span>[</span><span>{</span>\n            <span>\"src\"</span><span>:</span> <span>\"/judge/test_case/problem_1010/1.in\"</span>\n        <span>}</span><span>,</span> <span>{</span>\n            <span>\"name\"</span><span>:</span> <span>\"stdout\"</span><span>,</span>\n            <span>\"max\"</span><span>:</span> <span>10240</span>\n        <span>}</span><span>,</span> <span>{</span>\n            <span>\"name\"</span><span>:</span> <span>\"stderr\"</span><span>,</span>\n            <span>\"max\"</span><span>:</span> <span>10240</span>\n        <span>}</span><span>]</span><span>,</span>\n        <span>\"cpuLimit\"</span><span>:</span> <span>10000000000</span><span>,</span>\n        <span>\"realCpuLimit\"</span><span>:</span><span>30000000000</span><span>,</span>\n        <span>\"stackLimit\"</span><span>:</span><span>134217728</span><span>,</span>\n        <span>\"memoryLimit\"</span><span>:</span> <span>104811111</span><span>,</span>\n        <span>\"procLimit\"</span><span>:</span> <span>50</span><span>,</span>\n        <span>\"copyIn\"</span><span>:</span> <span>{</span>\n            <span>\"a\"</span><span>:</span><span>{</span><span>\"fileId\"</span><span>:</span><span>\"WDQL5TNLRRVB2KAP\"</span><span>}</span>\n        <span>}</span><span>,</span>\n        <span>\"copyOut\"</span><span>:</span> <span>[</span><span>\"stdout\"</span><span>,</span> <span>\"stderr\"</span><span>]</span>\n    <span>}</span><span>]</span>\n<span>}</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br></div></div><p>2.4 返回的数据为json格式</p>\n<div><pre><code><span>[</span><span>{</span>\n  <span>\"status\"</span><span>:</span> <span>\"Accepted\"</span><span>,</span>\n  <span>\"exitStatus\"</span><span>:</span> <span>0</span><span>,</span>\n  <span>\"time\"</span><span>:</span> <span>3171607</span><span>,</span>\n  <span>\"memory\"</span><span>:</span> <span>475136</span><span>,</span>\n  <span>\"runTime\"</span><span>:</span> <span>110396333</span><span>,</span>\n  <span>\"files\"</span><span>:</span> <span>{</span>\n    <span>\"stderr\"</span><span>:</span> <span>\"\"</span><span>,</span>\n    <span>\"stdout\"</span><span>:</span> <span>\"23\\n\"</span>\n  <span>}</span>\n<span>}</span><span>]</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></div></div><h4 id=\"交互判题\"> 交互判题</h4>\n<p>3.1 请求的url为</p>\n<blockquote>\n<p><code>http://localhost:5050/run</code></p>\n</blockquote>\n<p>3.2 请求方式</p>\n<blockquote>\n<p>POST</p>\n</blockquote>\n<p>3.3 请求参数</p>\n<blockquote>\n<p>数据格式为json，内容如下</p>\n</blockquote>\n<div><pre><code>   <span>{</span>\n<span>\"pipeMapping\"</span><span>:</span> <span>[</span>\n    <span>{</span>\n        <span>\"in\"</span><span>:</span> <span>{</span>\n            <span>\"max\"</span><span>:</span> <span>16777216</span><span>,</span>\n            <span>\"index\"</span><span>:</span> <span>0</span><span>,</span>\n            <span>\"fd\"</span><span>:</span> <span>1</span>\n        <span>}</span><span>,</span>\n        <span>\"out\"</span><span>:</span> <span>{</span>\n            <span>\"index\"</span><span>:</span> <span>1</span><span>,</span>\n            <span>\"fd\"</span><span>:</span> <span>0</span>\n        <span>}</span>\n    <span>}</span>\n<span>]</span><span>,</span>\n<span>\"cmd\"</span><span>:</span> <span>[</span>\n    <span>{</span>\n        <span>\"stackLimit\"</span><span>:</span> <span>134217728</span><span>,</span>\n        <span>\"cpuLimit\"</span><span>:</span> <span>3000000000</span><span>,</span>\n        <span>\"realCpuLimit\"</span><span>:</span> <span>9000000000</span><span>,</span>\n        <span>\"clockLimit\"</span><span>:</span> <span>64</span><span>,</span>\n        <span>\"env\"</span><span>:</span> <span>[</span>\n            <span>\"LANG=en_US.UTF-8\"</span><span>,</span>\n            <span>\"LANGUAGE=en_US:en\"</span><span>,</span>\n            <span>\"LC_ALL=en_US.UTF-8\"</span><span>,</span>\n            <span>\"PYTHONIOENCODING=utf-8\"</span>\n        <span>]</span><span>,</span>\n        <span>\"copyOut\"</span><span>:</span> <span>[</span>\n            <span>\"stderr\"</span>\n        <span>]</span><span>,</span>\n        <span>\"args\"</span><span>:</span> <span>[</span>\n            <span>\"/usr/bin/python3\"</span><span>,</span>\n            <span>\"main\"</span>\n        <span>]</span><span>,</span>\n        <span>\"files\"</span><span>:</span> <span>[</span>\n            <span>{</span>\n                <span>\"src\"</span><span>:</span> <span>\"/judge/test_case/problem_1002/5.in\"</span>\n            <span>}</span><span>,</span>\n            <span>null</span><span>,</span>\n            <span>{</span>\n                <span>\"max\"</span><span>:</span> <span>16777216</span><span>,</span>\n                <span>\"name\"</span><span>:</span> <span>\"stderr\"</span>\n            <span>}</span>\n        <span>]</span><span>,</span>\n        <span>\"memoryLimit\"</span><span>:</span> <span>536870912</span><span>,</span>\n        <span>\"copyIn\"</span><span>:</span> <span>{</span>\n            <span>\"main\"</span><span>:</span> <span>{</span>\n                <span>\"fileId\"</span><span>:</span> <span>\"CGTRDEMKW5VAYN6O\"</span>\n            <span>}</span>\n        <span>}</span>\n    <span>}</span><span>,</span>\n    <span>{</span>\n        <span>\"stackLimit\"</span><span>:</span> <span>134217728</span><span>,</span>\n        <span>\"cpuLimit\"</span><span>:</span> <span>8000000000</span><span>,</span>\n        <span>\"clockLimit\"</span><span>:</span> <span>24000000000</span><span>,</span>\n        <span>\"env\"</span><span>:</span> <span>[</span>\n            <span>\"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"</span><span>,</span>\n            <span>\"LANG=en_US.UTF-8\"</span><span>,</span>\n            <span>\"LANGUAGE=en_US:en\"</span><span>,</span>\n            <span>\"LC_ALL=en_US.UTF-8\"</span>\n        <span>]</span><span>,</span>\n        <span>\"copyOut\"</span><span>:</span> <span>[</span>\n            <span>\"stdout\"</span><span>,</span>\n            <span>\"stderr\"</span>\n        <span>]</span><span>,</span>\n        <span>\"args\"</span><span>:</span> <span>[</span>\n            <span>\"/w/spj\"</span><span>,</span>\n            <span>\"/w/tmp\"</span>\n        <span>]</span><span>,</span>\n        <span>\"files\"</span><span>:</span> <span>[</span>\n            <span>null</span><span>,</span>\n            <span>{</span>\n                <span>\"max\"</span><span>:</span> <span>16777216</span><span>,</span>\n                <span>\"name\"</span><span>:</span> <span>\"stdout\"</span>\n            <span>}</span><span>,</span>\n            <span>{</span>\n                <span>\"max\"</span><span>:</span> <span>16777216</span><span>,</span>\n                <span>\"name\"</span><span>:</span> <span>\"stderr\"</span>\n            <span>}</span>\n        <span>]</span><span>,</span>\n        <span>\"memoryLimit\"</span><span>:</span> <span>536870912</span><span>,</span>\n        <span>\"copyIn\"</span><span>:</span> <span>{</span>\n            <span>\"spj\"</span><span>:</span> <span>{</span>\n                <span>\"src\"</span><span>:</span> <span>\"/judge/spj/1002/spj\"</span>\n            <span>}</span><span>,</span>\n            <span>\"tmp\"</span><span>:</span> <span>{</span>\n                <span>\"src\"</span><span>:</span> <span>\"/judge/test_case/problem_1002/5.out\"</span>\n            <span>}</span>\n        <span>}</span><span>,</span>\n        <span>\"procLimit\"</span><span>:</span> <span>64</span>\n    <span>}</span>\n<span>]</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br><span>50</span><br><span>51</span><br><span>52</span><br><span>53</span><br><span>54</span><br><span>55</span><br><span>56</span><br><span>57</span><br><span>58</span><br><span>59</span><br><span>60</span><br><span>61</span><br><span>62</span><br><span>63</span><br><span>64</span><br><span>65</span><br><span>66</span><br><span>67</span><br><span>68</span><br><span>69</span><br><span>70</span><br><span>71</span><br><span>72</span><br><span>73</span><br><span>74</span><br><span>75</span><br><span>76</span><br><span>77</span><br><span>78</span><br><span>79</span><br><span>80</span><br><span>81</span><br><span>82</span><br><span>83</span><br><span>84</span><br><span>85</span><br><span>86</span><br><span>87</span><br><span>88</span><br><span>89</span><br><span>90</span><br><span>91</span><br></div></div><p>3.4 返回的数据为json格式</p>\n<div><pre><code><span>[</span>\n    <span>{</span>\n        <span>\"status\"</span><span>:</span> <span>\"Accepted\"</span><span>,</span>\n        <span>\"exitStatus\"</span><span>:</span> <span>0</span><span>,</span>\n        <span>\"time\"</span><span>:</span> <span>1545123</span><span>,</span>\n        <span>\"memory\"</span><span>:</span> <span>253952</span><span>,</span>\n        <span>\"runTime\"</span><span>:</span> <span>4148800</span><span>,</span>\n        <span>\"files\"</span><span>:</span> <span>{</span>\n            <span>\"stderr\"</span><span>:</span> <span>\"\"</span>\n        <span>}</span><span>,</span>\n        <span>\"fileIds\"</span><span>:</span> <span>{</span><span>}</span>\n    <span>}</span><span>,</span>\n    <span>{</span>\n        <span>\"status\"</span><span>:</span> <span>\"Accepted\"</span><span>,</span>\n        <span>\"exitStatus\"</span><span>:</span> <span>0</span><span>,</span>\n        <span>\"time\"</span><span>:</span> <span>1501463</span><span>,</span>\n        <span>\"memory\"</span><span>:</span> <span>253952</span><span>,</span>\n        <span>\"runTime\"</span><span>:</span> <span>5897700</span><span>,</span>\n        <span>\"files\"</span><span>:</span> <span>{</span>\n            <span>\"stderr\"</span><span>:</span> <span>\"\"</span><span>,</span>\n            <span>\"stdout\"</span><span>:</span> <span>\"\"</span>\n        <span>}</span><span>,</span>\n        <span>\"fileIds\"</span><span>:</span> <span>{</span><span>}</span>\n    <span>}</span>\n<span>]</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br></div></div>",
      "date_published": "2022-10-03T13:59:35.000Z",
      "date_modified": "2022-10-03T13:59:35.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "调度与评测",
      "url": "https://hcode.top/xojbackend-doc/develop/judge_dispatcher/",
      "id": "https://hcode.top/xojbackend-doc/develop/judge_dispatcher/",
      "content_html": "<h1 id=\"调度与评测\"> 调度与评测</h1>\n<p><img src=\"/judge_dispatch.png\" alt=\"评测调度\" loading=\"lazy\"></p>\n<p><strong>评测的调用流程有如下步骤：</strong></p>\n<ol>\n<li>用户登录后进入指定题目的详情页，编辑完代码后提交；</li>\n<li>后端业务服务接收到提交信息后，校验提交数据后写入到MySQL数据库；</li>\n<li>写入数据库成功后，将该评测任务放入到Redis的等待评测队列中，然后返回告知用户已经成功提交；</li>\n<li>接着取出Redis中的等待评测队列头部的任务，查询Nacos获取健康可用的评测服务实例列表，通过悲观锁控制并发资源的调度，发送评测请求到有空闲评测资源的评测服务实例；</li>\n<li>评测服务接受到调用评测请求后，将通过Http请求先后调用安全沙盒（Go-Judge）进行用户代码的编译与运行，根据每个评测点数据的运行结果，得出最终评测结果写回到数据库。</li>\n<li>在这个过程中，用户在题目详情页提交成功代码后，前端页面将开启每2秒查询一次结果的定时器，直至该提交的评测的最终状态不再是评测中结束。</li>\n</ol>\n<div><p>Tips</p>\n<p>HOJ有四种评测模式：普通评测、特殊评测、交互评测、远程评测，具体的介绍请看文档： <a href=\"/use/judge-mode/\">判题模式</a></p>\n</div>\n<h3 id=\"一、普通评测\"> 一、普通评测</h3>\n<p><img src=\"/default_judge.png\" alt=\"普通评测\" loading=\"lazy\"></p>\n<p><strong>普通评测</strong>: 先调用安全沙盒服务编译用户提交的代码，如果编译失败则直接结束，返回结果为编译失败，接着调用安全沙盒服务运行用户程序，传入题目标准输入文件的文件路径、题目运行时间限制、题目运行空间限制等参数，等待每个数据点的评测结束，比较每个数据点的时间和空间是否超过题目规定的时空限制，然后对比用户程序输出和题目标准输出得出最终的评测结果，写回数据库。</p>\n<h3 id=\"二、特殊评测\"> 二、特殊评测</h3>\n<p><img src=\"/spj_judge.png\" alt=\"特殊评测\" loading=\"lazy\"></p>\n<p><strong>特殊评测</strong>: 先调用安全沙盒服务编译用户提交的代码，如果编译失败则直接结束，返回结果为编译失败，然后检查是否存在已经编译完成的特殊程序，否则需要先调用服务编译该特殊程序代码，如果编译失败，则返回结果为系统错误。接着运行用户程序读取每个标准输入文件，获得结果，判断时空是否超限，超限就返回时间超限或空间超限的结果，不然就运行特殊程序读取题目标准输入和标准输出、用户程序的输出文件，对比后得出评测结果，写回数据库。</p>\n<h3 id=\"三、交互评测\"> 三、交互评测</h3>\n<p><img src=\"/interactive_judge.png\" alt=\"交互评测\" loading=\"lazy\"></p>\n<p><strong>交互评测</strong>: 先调用安全沙盒服务编译用户提交的代码，如果编译失败则直接结束，返回结果为编译失败，然后检查是否存在已经编译完成的交互程序，否则需要先调用服务编译该交互程序代码，如果编译失败，则返回结果为系统错误。接着运行用户程序和交互程序，两者程序进行标准输出和标准输入流的交互，最后得出结果，写回数据库。</p>\n<h3 id=\"四、远程评测\"> 四、远程评测</h3>\n<p><img src=\"/remote_judge.png\" alt=\"远程评测\" loading=\"lazy\"></p>\n<p><strong>远程评测</strong>: 目前本系统支持HDU、POJ、Codeforces、GYM、AtCoder、SPOJ等平台的题目评测，主要实现的原理是爬虫模拟技术，首先先使用远程平台的账户登录，获取登录账户的cookie，配置到提交代码的接口参数里面，同时填入用户提交的代码、对应的题号、编译语言等信息，请求提交结果后可能失败，这时候需要设置重试机制，但多次重试依旧提交失败，则直接将结果写回数据库，如果获取到该提交对应的ID，则将该ID交给任务线程池进行每3秒一次的查询结果轮询，如果超过3分钟没有得出结果，则判断为提交失败写回数据库，否则就根据结果映射转换成自己平台的结果写回数据库。</p>\n",
      "image": "https://hcode.top/xojbackend-doc/judge_dispatch.png",
      "date_published": "2022-10-03T13:59:35.000Z",
      "date_modified": "2022-10-03T13:59:35.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "取消评测",
      "url": "https://hcode.top/xojbackend-doc/use/cancel-judge/",
      "id": "https://hcode.top/xojbackend-doc/use/cancel-judge/",
      "content_html": "<h1 id=\"取消评测\"> 取消评测</h1>\n<div><p>Info</p>\n<p>​\t<strong>适用</strong>：只有<strong>超级管理员</strong>拥有该权限。</p>\n<p>​\t<strong>功能</strong>：可以取消所有提交，包括普通提交和比赛提交。</p>\n<p>​\t<strong>注意</strong>：普通提交被取消评测为<strong>Cancelled</strong>状态，则该提交不纳入排行榜计分，比赛提交被取消，则同样比赛排行榜不计该提交的得分。</p>\n</div>\n<h3 id=\"_1-操作方式\"> 1. 操作方式</h3>\n<p>点击评测列表中的每个提交的状态，即可选择 <strong>修改评测</strong> 或 <strong>取消评测</strong></p>\n<p><img src=\"https://img-blog.csdnimg.cn/e279d10f27034767aba7a6fe81c605af.png\" alt=\"取消评测\" loading=\"lazy\"></p>\n<h3 id=\"_2-取消评测\"> 2. 取消评测</h3>\n<ol>\n<li>\n<p>点击确认<strong>取消评测</strong>后，该提交会被标记为取消(<strong>Cancelled</strong>)的状态</p>\n<p><img src=\"https://img-blog.csdnimg.cn/c1b462bbc01b433e9fc8cd4a641077e8.png\" alt=\"取消评测\" loading=\"lazy\"></p>\n</li>\n<li>\n<p>同时会有&quot;人工评测&quot;的标记，标致着被修改了，在&quot;评测源&quot;一栏会写明由某用户名进行人工评测。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/1e9fa6d4f446425c9213adb2027c77b0.png\" alt=\"取消评测\" loading=\"lazy\"></p>\n</li>\n</ol>\n<h3 id=\"_3-修改评测结果\"> 3. 修改评测结果</h3>\n<p>点击提交的状态，选择 <strong>修改评测</strong> 即可修改该提交的结果状态。</p>\n<ul>\n<li><strong>ACM题目</strong>的提交可以修改最终状态值，同时也会有&quot;人工评测&quot;的标记。</li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/c50314e739ff4c38b6fbd41b9db674dc.png\" alt=\"ACM题目修改评测\" loading=\"lazy\"></p>\n<ul>\n<li><strong>OI题目</strong>的提交可以修改最终状态值和得分，同时也会有&quot;人工评测&quot;的标记。</li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/fb85cffa62e04b2cac3f40af3b5ac0d7.png\" alt=\"OI题目修改评测\" loading=\"lazy\"></p>\n",
      "image": "https://img-blog.csdnimg.cn/e279d10f27034767aba7a6fe81c605af.png",
      "date_published": "2022-10-03T13:59:35.000Z",
      "date_modified": "2022-10-03T13:59:35.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "用户权限管理",
      "url": "https://hcode.top/xojbackend-doc/use/admin-user/",
      "id": "https://hcode.top/xojbackend-doc/use/admin-user/",
      "content_html": "<h1 id=\"用户权限管理\"> 用户权限管理</h1>\n<blockquote>\n<p>注意：用户管理只有超级管理员和管理员账号可以操作！</p>\n</blockquote>\n<h2 id=\"管理员角色说明\"> 管理员角色说明</h2>\n<table>\n<thead>\n<tr>\n<th>权限</th>\n<th style=\"text-align:center\">超级管理员</th>\n<th style=\"text-align:center\">管理员</th>\n<th style=\"text-align:center\">默认用户</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>系统公告管理</td>\n<td style=\"text-align:center\">✔</td>\n<td style=\"text-align:center\">✔</td>\n<td style=\"text-align:center\">❌</td>\n</tr>\n<tr>\n<td>系统通知推送管理</td>\n<td style=\"text-align:center\">✔</td>\n<td style=\"text-align:center\">✔</td>\n<td style=\"text-align:center\">❌</td>\n</tr>\n<tr>\n<td>系统配置</td>\n<td style=\"text-align:center\">✔</td>\n<td style=\"text-align:center\">✔</td>\n<td style=\"text-align:center\">❌</td>\n</tr>\n<tr>\n<td>用户管理</td>\n<td style=\"text-align:center\">✔</td>\n<td style=\"text-align:center\">✔</td>\n<td style=\"text-align:center\">❌</td>\n</tr>\n<tr>\n<td>题目查看、修改、增加和删除</td>\n<td style=\"text-align:center\">✔</td>\n<td style=\"text-align:center\">✔</td>\n<td style=\"text-align:center\">❌</td>\n</tr>\n<tr>\n<td>讨论管理</td>\n<td style=\"text-align:center\">✔</td>\n<td style=\"text-align:center\">✔</td>\n<td style=\"text-align:center\">❌</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"用户角色说明\"> 用户角色说明</h2>\n<p>❌ ❗ ✔</p>\n<div><p>Info</p>\n<p>用户被禁用之后不能登录系统进行与用户相关的操作</p>\n</div>\n<h2 id=\"用户权限管理-2\"> 用户权限管理</h2>\n<blockquote>\n<p>系统暂时只提供三种权限</p>\n</blockquote>\n<p><img src=\"https://img-blog.csdnimg.cn/bcf5657644fe4b57be882c5b050e6828.png#pic_center\" alt=\"用户权限\" loading=\"lazy\"></p>\n",
      "image": "https://img-blog.csdnimg.cn/bcf5657644fe4b57be882c5b050e6828.png#pic_center",
      "date_published": "2022-10-03T13:59:35.000Z",
      "date_modified": "2022-10-05T13:30:42.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "比赛介绍",
      "url": "https://hcode.top/xojbackend-doc/use/contest/",
      "id": "https://hcode.top/xojbackend-doc/use/contest/",
      "content_html": "<h1 id=\"比赛介绍\"> 比赛介绍</h1>\n<div><p>Tips</p>\n<p>总概功能介绍</p>\n<ul>\n<li>支持ACM、OI、IOI赛制</li>\n<li>支持公开赛、保护赛、私有赛</li>\n<li>支持线下打印功能</li>\n<li>支持比赛账号限制功能</li>\n<li>支持封榜、支持打星队伍、支持关注队伍</li>\n<li>支持比赛外部榜单显示</li>\n<li>支持榜单显示用户显示自定义</li>\n</ul>\n</div>\n<h2 id=\"两种赛制\"> 两种赛制</h2>\n<h3 id=\"一、acm-比赛模式\"> 一、ACM 比赛模式</h3>\n<p>在该模式下,我们严格按照ACM-ICPC的比赛规则来进行，Contest设置项中的<code>Seal Time Rank</code>即为是否封榜，封榜后将不再刷新排名。可选择比赛结束前半小时，比赛前一小时，比赛全程封榜。</p>\n<p><strong>如果开启封榜，则封榜期间的角色不同如下：</strong></p>\n<div><p>Info</p>\n<ol>\n<li>封榜期间，<strong>超级管理员与比赛创建者</strong>不受影响，正常可查看题目统计数据，提交数据等，排行榜需自行开启强制刷新，同时提交结果可以及时看到评测结果，但不会纳入排行榜！</li>\n<li>封榜期间，<strong>普通用户与非比赛创建者</strong>（包括其它管理员角色），可以及时看到自己的提交结果，但不可看到别人<strong>封榜后</strong>的提交，不能看到题目的统计情况，排行榜保持<strong>封榜前</strong>的排名数据。</li>\n</ol>\n</div>\n<p><strong>注意：比赛一结束，默认所有数据变成正常显示，但后台可以设置比赛结束继续封榜！</strong></p>\n<h3 id=\"二、oi-比赛模式\"> 二、OI 比赛模式</h3>\n<p>在OI模式下，选手的提交将根据得分点来计分，多次提交<strong>以最后一次提交</strong>（<strong>或选择以最高得分的提交</strong>）为准，排名规则为多个题目的总分数。同样可以进行封榜操作，封榜时段，选手不能查看到实时的排行榜数据！</p>\n<p><strong>如果开启封榜，则封榜期间的角色不同如下：</strong></p>\n<div><p>Info</p>\n<ol>\n<li>封榜期间，<strong>超级管理员与比赛创建者</strong>不受影响，正常可查看题目统计数据，提交数据等，排行榜需自行开启强制刷新，同时提交结果可以及时看到评测结果，但不会纳入排行榜！</li>\n<li>封榜期间：<strong>普通用户与非比赛创建者</strong>（包括其它管理员角色），看不到自己和其它所有人<strong>封榜后</strong>的提交结果，不能看到题目的统计情况，排行榜保持<strong>封榜前</strong>的排名数据。</li>\n</ol>\n</div>\n<p><strong>比赛一结束，默认所有数据变成正常显示，但后台可以设置比赛结束继续封榜！</strong></p>\n<div><p>Note</p>\n<p>注意：管理员可以选择强制刷新，查看实时的排行榜数据！通过<code>Force Update</code>来强制刷新榜，且刷新后的榜仅对管理者可见。</p>\n</div>\n<h2 id=\"比赛权限\"> 比赛权限</h2>\n<div><p>Tips</p>\n<ul>\n<li><strong>公开赛</strong>：所有用户都可以查看比赛详情、比赛题目、比赛提交，比赛排行榜、比赛讨论等，且都可以在比赛阶段随时提交。</li>\n<li><strong>保护赛</strong>：所有用户都可以查看比赛详情、比赛题目、比赛提交，比赛排行榜、比赛讨论等，但在比赛阶段提交需要提供该比赛的密码！</li>\n<li><strong>私有赛</strong>：仅支持有比赛密码的用户进入比赛，查看查看比赛详情、比赛题目、比赛提交，比赛排行榜、比赛讨论等，包括提交。</li>\n</ul>\n</div>\n<h2 id=\"比赛题目\"> 比赛题目</h2>\n<p><strong>后台比赛题目列表管理页面如下</strong></p>\n<p><img src=\"https://img-blog.csdnimg.cn/2a8354a553d547d786e37d41050d3b95.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBASGltaXRfWkg=,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\" loading=\"lazy\"></p>\n<h2 id=\"比赛管理\"> 比赛管理</h2>\n<p><strong>后台比赛管理页面如下</strong></p>\n<p><img src=\"https://img-blog.csdnimg.cn/da52c1fe08e34be6be79fbe5c2b758d2.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBASGltaXRfWkg=,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"比赛管理\" loading=\"lazy\"></p>\n",
      "image": "https://img-blog.csdnimg.cn/2a8354a553d547d786e37d41050d3b95.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBASGltaXRfWkg=,size_20,color_FFFFFF,t_70,g_se,x_16",
      "date_published": "2022-10-03T13:59:35.000Z",
      "date_modified": "2022-10-03T13:59:35.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "取消前端免费CDN",
      "url": "https://hcode.top/xojbackend-doc/use/close-free-cdn/",
      "id": "https://hcode.top/xojbackend-doc/use/close-free-cdn/",
      "content_html": "<h1 id=\"取消前端免费cdn\"> 取消前端免费CDN</h1>\n<p>由于有的机房的网络不支持一些域名的访问，有防火墙挡住，所以可能前端页面的js和css的CDN访问不了，导致页面打不开。</p>\n<div><p>Info</p>\n<p>hoj挂载了一些前端静态资源库的免费CDN，全部都是域名<code>unpkg.com</code>和<code>bytecdntp.com</code>下的免费CDN</p>\n</div>\n<p>可以在对应的电脑浏览器上打开以下链接，如果能正常访问则没有问题。</p>\n<div><pre><code>https://lf6-cdn-tos.bytecdntp.com/cdn/expire-1-M/vue/2.6.11/vue.min.js\n或\nhttps://unpkg.com/vxe-table@2.9.26/lib/style.min.css\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br></div></div><div><p>Note</p>\n<p>hoj-frontend(前端vue项目)如果不挂载任何CDN，最终打包生成的文件夹大小约8MB</p>\n</div>\n<h2 id=\"一、全部打包且部署\"> 一、全部打包且部署</h2>\n<div><p>Info</p>\n<p>如果本身hoj部署在<strong>学校内网机器</strong>上或者<strong>云服务器是无带宽上限、按流量计费的实例</strong>，那么可以不用考虑带宽问题，可以直接取消CDN挂载，直接全部自己打包成对应的静态文件，然后挂载到docker的<code>hoj-frontend</code>镜像里面</p>\n</div>\n<p><strong>操作如下:</strong></p>\n<ol>\n<li>\n<p>下载前端源代码：<a href=\"https://gitee.com/himitzh0730/hoj/tree/master/hoj-vue\" target=\"_blank\" rel=\"noopener noreferrer\">https://gitee.com/himitzh0730/hoj/tree/master/hoj-vue</a></p>\n</li>\n<li>\n<p>进入<code>hoj-vue</code>文件夹，编辑<code>vue.config.js</code>文件，按下面的修改</p>\n<div><pre><code><span>// 该变量改成false</span>\n<span>const</span> isProduction <span>=</span> <span>false</span><span>;</span>\n\n<span>// 本地环境是否需要使用cdn，该变量改成false</span>\n<span>const</span> devNeedCdn <span>=</span> <span>false</span><span>;</span>\n\n<span>// 找到下面对应的cdn的js链接和css链接，全部注释掉</span>\n  <span>css</span><span>:</span> <span>[</span>\n      <span>// 'https://cdnjs.cloudflare.com/ajax/libs/element-ui/2.14.0/theme-chalk/index.min.css',</span>\n      <span>// \"https://cdn.jsdelivr.net/npm/github-markdown-css@4.0.0/github-markdown.min.css\",</span>\n      <span>// \"https://cdn.jsdelivr.net/npm/vxe-table@2.9.26/lib/style.min.css\",</span>\n  <span>]</span><span>,</span>\n  <span>js</span><span>:</span> <span>[</span>\n      <span>// \"https://cdnjs.cloudflare.com/ajax/libs/vue/2.6.1/vue.min.js\",</span>\n      <span>// \"https://cdnjs.cloudflare.com/ajax/libs/vue-router/3.2.0/vue-router.min.js\",</span>\n      <span>// \"https://cdnjs.cloudflare.com/ajax/libs/axios/0.21.0/axios.min.js\",</span>\n      <span>// \"https://cdnjs.cloudflare.com/ajax/libs/element-ui/2.15.3/index.min.js\",</span>\n      <span>// \"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/10.3.2/highlight.min.js\",</span>\n      <span>// \"https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js\",</span>\n      <span>// \"https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/locale/zh-cn.min.js\",</span>\n      <span>// \"https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/locale/en-gb.min.js\",</span>\n      <span>// \"https://cdnjs.cloudflare.com/ajax/libs/echarts/4.9.0-rc.1/echarts.min.js\",</span>\n      <span>// \"https://cdnjs.cloudflare.com/ajax/libs/vue-echarts/5.0.0-beta.0/vue-echarts.min.js\",</span>\n      <span>// \"https://cdn.jsdelivr.net/npm/vuex@3.5.1/dist/vuex.min.js\",</span>\n      <span>// \"https://cdn.jsdelivr.net/npm/xe-utils@3.4.3/dist/xe-utils.umd.min.js\",</span>\n      <span>// \"https://cdn.jsdelivr.net/npm/vxe-table@2.9.26/lib/index.umd.min.js\",</span>\n      <span>// \"https://unpkg.com/mavon-editor@2.9.1/dist/mavon-editor.js\"</span>\n  <span>]</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br></div></div></li>\n<li>\n<p>进入<code>hoj-vue/src</code>文件夹，编辑<code>main.js</code>文件，将内容替换成如下：</p>\n<div><pre><code><span>import</span> Vue <span>from</span> <span>'vue'</span>\n<span>import</span> App <span>from</span> <span>'./App.vue'</span>\n<span>import</span> store <span>from</span> <span>'./store'</span>\n<span>import</span> Element <span>from</span> <span>'element-ui'</span>\n<span>import</span> i18n <span>from</span> <span>'@/i18n'</span>\n\n<span>import</span> <span>\"element-ui/lib/theme-chalk/index.css\"</span>\n<span>import</span> <span>'font-awesome/css/font-awesome.min.css'</span>\n<span>import</span> Message <span>from</span> <span>'vue-m-message'</span>\n<span>import</span> <span>'vue-m-message/dist/index.css'</span>\n<span>import</span> axios <span>from</span> <span>'axios'</span>\n\n<span>import</span> Md_Katex <span>from</span> <span>'@iktakahiro/markdown-it-katex'</span>\n\n<span>import</span> <span>'xe-utils'</span> \n<span>import</span> VXETable <span>from</span> <span>'vxe-table'</span>\n<span>import</span> <span>'vxe-table/lib/style.css'</span>\n\n<span>import</span> Katex <span>from</span> <span>'@/common/katex'</span>\n\n<span>import</span> VueClipboard <span>from</span> <span>'vue-clipboard2'</span>\n\n<span>import</span> highlight <span>from</span> <span>'@/common/highlight'</span>\n\n<span>import</span> filters <span>from</span> <span>'@/common/filters.js'</span>\n<span>import</span> VueCropper <span>from</span> <span>'vue-cropper'</span>\n\n<span>import</span> ECharts <span>from</span> <span>'vue-echarts/components/ECharts.vue'</span>\n<span>import</span> <span>'echarts/lib/chart/bar'</span>\n<span>import</span> <span>'echarts/lib/chart/line'</span>\n<span>import</span> <span>'echarts/lib/chart/pie'</span>\n<span>import</span> <span>'echarts/lib/component/title'</span>\n<span>import</span> <span>'echarts/lib/component/grid'</span>\n<span>import</span> <span>'echarts/lib/component/dataZoom'</span>\n<span>import</span> <span>'echarts/lib/component/legend'</span>\n<span>import</span> <span>'echarts/lib/component/tooltip'</span>\n<span>import</span> <span>'echarts/lib/component/toolbox'</span>\n<span>import</span> <span>'echarts/lib/component/markPoint'</span>\nVue<span>.</span><span>component</span><span>(</span><span>'ECharts'</span><span>,</span> ECharts<span>)</span>\n\n<span>import</span> VueECharts <span>from</span> <span>'vue-echarts'</span><span>;</span>\nVue<span>.</span><span>component</span><span>(</span><span>'ECharts'</span><span>,</span> VueECharts<span>)</span>\n<span>import</span> VueParticles <span>from</span> <span>'vue-particles'</span>\n<span>import</span> SlideVerify <span>from</span> <span>'vue-monoplasty-slide-verify'</span>\n\n<span>//  markdown编辑器</span>\n<span>import</span> mavonEditor <span>from</span> <span>'mavon-editor'</span>  <span>//引入markdown编辑器</span>\n<span>import</span> <span>'mavon-editor/dist/css/index.css'</span><span>;</span>\nVue<span>.</span><span>use</span><span>(</span>mavonEditor<span>)</span>\n\n<span>import</span> <span>{</span>Drawer<span>,</span>List<span>,</span>Menu<span>,</span>Icon<span>,</span>AppBar<span>,</span>Button<span>,</span>Divider<span>}</span> <span>from</span> <span>'muse-ui'</span><span>;</span>\n<span>import</span> <span>'muse-ui/dist/muse-ui.css'</span><span>;</span>\n\n<span>import</span> VueDOMPurifyHTML <span>from</span> <span>'vue-dompurify-html'</span>\nVue<span>.</span><span>use</span><span>(</span>VueDOMPurifyHTML<span>)</span>\n\n<span>import</span> router <span>from</span> <span>'./router'</span>\nVue<span>.</span><span>use</span><span>(</span>Drawer<span>)</span>\nVue<span>.</span><span>use</span><span>(</span>List<span>)</span>\nVue<span>.</span><span>use</span><span>(</span>Menu<span>)</span>\nVue<span>.</span><span>use</span><span>(</span>Icon<span>)</span>\nVue<span>.</span><span>use</span><span>(</span>AppBar<span>)</span>\nVue<span>.</span><span>use</span><span>(</span>Button<span>)</span>\nVue<span>.</span><span>use</span><span>(</span>Divider<span>)</span>\n\nObject<span>.</span><span>keys</span><span>(</span>filters<span>)</span><span>.</span><span>forEach</span><span>(</span><span>key</span> <span>=></span> <span>{</span>   <span>// 注册全局过滤器</span>\n  Vue<span>.</span><span>filter</span><span>(</span>key<span>,</span> filters<span>[</span>key<span>]</span><span>)</span>\n<span>}</span><span>)</span>\nVue<span>.</span><span>use</span><span>(</span>VueParticles<span>)</span> <span>// 粒子特效背景</span>\nVue<span>.</span><span>use</span><span>(</span>Katex<span>)</span>  <span>// 数学公式渲染</span>\n\nVXETable<span>.</span><span>setup</span><span>(</span><span>{</span>\n  <span>// 对组件内置的提示语进行国际化翻译</span>\n  <span>i18n</span><span>:</span> <span>(</span><span>key<span>,</span> value</span><span>)</span> <span>=></span> i18n<span>.</span><span>t</span><span>(</span>key<span>,</span> value<span>)</span>\n<span>}</span><span>)</span>\nVue<span>.</span><span>use</span><span>(</span>VXETable<span>)</span> <span>// 表格组件</span>\nVue<span>.</span><span>use</span><span>(</span>VueClipboard<span>)</span> <span>// 剪贴板</span>\nVue<span>.</span><span>use</span><span>(</span>highlight<span>)</span> <span>// 代码高亮</span>\nVue<span>.</span><span>use</span><span>(</span>Element<span>,</span><span>{</span>\n  <span>i18n</span><span>:</span> <span>(</span><span>key<span>,</span> value</span><span>)</span> <span>=></span> i18n<span>.</span><span>t</span><span>(</span>key<span>,</span> value<span>)</span>\n<span>}</span><span>)</span>\n\nVue<span>.</span><span>use</span><span>(</span>VueCropper<span>)</span> <span>// 图像剪切</span>\nVue<span>.</span><span>use</span><span>(</span>Message<span>,</span> <span>{</span> <span>name</span><span>:</span> <span>'msg'</span> <span>}</span><span>)</span> <span>// `Vue.prototype.$msg` 全局消息提示</span>\n\nVue<span>.</span><span>use</span><span>(</span>SlideVerify<span>)</span> <span>// 滑动验证码组件</span>\n\n<span>Vue</span><span>.</span>prototype<span>.</span>$axios <span>=</span> axios\n\n<span>Vue</span><span>.</span>prototype<span>.</span>$markDown <span>=</span> mavonEditor<span>.</span>mavonEditor<span>.</span><span>getMarkdownIt</span><span>(</span><span>)</span><span>.</span><span>use</span><span>(</span>Md_Katex<span>)</span>  <span>// 挂载到vue</span>\n\nVue<span>.</span>config<span>.</span>productionTip <span>=</span> <span>false</span>\n<span>new</span> <span>Vue</span><span>(</span><span>{</span>\n  router<span>,</span>\n  store<span>,</span>\n  i18n<span>,</span>\n  <span>render</span><span>:</span> <span>h</span> <span>=></span> <span>h</span><span>(</span>App<span>)</span>\n<span>}</span><span>)</span><span>.</span><span>$mount</span><span>(</span><span>'#app'</span><span>)</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br><span>50</span><br><span>51</span><br><span>52</span><br><span>53</span><br><span>54</span><br><span>55</span><br><span>56</span><br><span>57</span><br><span>58</span><br><span>59</span><br><span>60</span><br><span>61</span><br><span>62</span><br><span>63</span><br><span>64</span><br><span>65</span><br><span>66</span><br><span>67</span><br><span>68</span><br><span>69</span><br><span>70</span><br><span>71</span><br><span>72</span><br><span>73</span><br><span>74</span><br><span>75</span><br><span>76</span><br><span>77</span><br><span>78</span><br><span>79</span><br><span>80</span><br><span>81</span><br><span>82</span><br><span>83</span><br><span>84</span><br><span>85</span><br><span>86</span><br><span>87</span><br><span>88</span><br><span>89</span><br><span>90</span><br><span>91</span><br><span>92</span><br><span>93</span><br><span>94</span><br><span>95</span><br><span>96</span><br><span>97</span><br><span>98</span><br></div></div></li>\n<li>\n<p>然后使用在<code>hoj-vue</code>目录下，使用<code>npm run build</code>，npm请自行百度下载安装，之后会生成一个dist文件夹，结构如下：</p>\n<div><pre><code>dist\n├── index.html\n├── favicon.ico\n└── assets\n    ├── css\n    │   ├── ....\n    ├── fonts\n    │   ├── ....\n    ├── img\n    │   ├── ....\n    ├── js\n  │   ├── ....\n\n....\n....\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br></div></div><p>将 <code>dist</code> 文件夹复制到服务器上某个目录下，比如 <code>/hoj/www/html/dist</code>，然后修改 <code>docker-compose.yml</code>，在 <code>hoj-frontend</code> 模块中的 <code>volumes</code> 中增加一行 <code>- /hoj/www/html/dist:/usr/share/nginx/html</code> （冒号前面的请修改为实际的路径），然后 <code>docker-compose up -d</code> 即可。</p>\n</li>\n</ol>\n<h2 id=\"二、全部打包但有个人cdn服务器\"> 二、全部打包但有个人CDN服务器</h2>\n<div><p>Info</p>\n<p>如果云服务器是只有固定小流量出口带宽的，例如1M,2M的，害怕访问速度太慢，但是有钱买CDN服务器，可以先按照上面的方式，生成对应的本地静态文件夹，然后把<code>dist/assets</code>文件夹放在CDN服务器上，然后修改<code>dist/index.html</code></p>\n</div>\n<p><strong>(建议：有弄过CDN的可以这样搞)</strong></p>\n<p>添加css等文件的导入</p>\n<div><pre><code><span><span><span>&lt;</span>link</span> <span>href</span><span><span>=</span><span>\"</span>cdn服务器的地址/assets/css/文件名称.css<span>\"</span></span> <span>rel</span><span><span>=</span><span>\"</span>prefetch<span>\"</span></span><span>></span></span>\n</code></pre>\n<div><span>1</span><br></div></div><p>添加js等文件的导入</p>\n<div><pre><code><span><span><span>&lt;</span>script</span> <span>src</span><span><span>=</span><span>\"</span>cdn服务器的地址/assets/js/文件名称.js<span>\"</span></span><span>></span></span>\n</code></pre>\n<div><span>1</span><br></div></div><div><pre><code>..............................\n</code></pre>\n</div><p>将 <code>dist</code> 文件夹复制到服务器上某个目录下，比如 <code>/hoj/www/html/dist</code>，然后修改 <code>docker-compose.yml</code>，在 <code>hoj-frontend</code> 模块中的 <code>volumes</code> 中增加一行 <code>- /hoj/www/html/dist:/usr/share/nginx/html</code> （冒号前面的请修改为实际的路径），然后 <code>docker-compose up -d</code> 即可。</p>\n",
      "date_published": "2022-10-03T13:59:35.000Z",
      "date_modified": "2022-10-03T13:59:35.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "评论管理",
      "url": "https://hcode.top/xojbackend-doc/use/discussion-admin/",
      "id": "https://hcode.top/xojbackend-doc/use/discussion-admin/",
      "content_html": "<h1 id=\"评论管理\"> 评论管理</h1>\n<p><img src=\"https://img-blog.csdnimg.cn/3aab499a33c9436a902b7a1e78fbc099.png#pic_center\" alt=\"评论管理\" loading=\"lazy\"></p>\n<div><p>Tips</p>\n<ul>\n<li>后台管理员可以查看所有的讨论帖，并且可以选择是否正常显示，删除，查看等</li>\n</ul>\n</div>\n",
      "image": "https://img-blog.csdnimg.cn/3aab499a33c9436a902b7a1e78fbc099.png#pic_center",
      "date_published": "2022-10-03T13:59:35.000Z",
      "date_modified": "2022-10-05T13:30:42.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "单体部署④——Nacos部署",
      "url": "https://hcode.top/xojbackend-doc/monomer/nacos/",
      "id": "https://hcode.top/xojbackend-doc/monomer/nacos/",
      "content_html": "<h1 id=\"单体部署4-nacos部署\"> 单体部署④——Nacos部署</h1>\n<h2 id=\"docker部署\"> docker部署</h2>\n<div><pre><code><span>docker</span> run -d <span>\\</span>\n-e <span>JVM_XMS</span><span>=</span>384m <span>\\</span>\n-e <span>JVM_XMX</span><span>=</span>384m <span>\\</span>\n-e <span>JVM_XMN</span><span>=</span>192m <span>\\</span>\n-e <span>MODE</span><span>=</span>standalone <span>\\</span>\n-e <span>SPRING_DATASOURCE_PLATFORM</span><span>=</span>mysql <span>\\</span>\n-e <span>MYSQL_SERVICE_HOST</span><span>=</span>mysql_host <span>\\</span>\n-e <span>MYSQL_SERVICE_PORT</span><span>=</span>mysql_port <span>\\</span>\n-e <span>MYSQL_SERVICE_USER</span><span>=</span>root <span>\\</span>\n-e <span>MYSQL_SERVICE_PASSWORD</span><span>=</span><span>\"mysql_root_password\"</span> <span>\\</span>\n-e <span>MYSQL_SERVICE_DB_NAME</span><span>=</span>nacos <span>\\</span>\n--env <span>NACOS_AUTH_ENABLE</span><span>=</span>true <span>\\</span>\n-p <span>8848</span>:8848 <span>\\</span>\n--name nacos <span>\\</span>\n--restart<span>=</span>always <span>\\</span>\nnacos/nacos-server:1.4.2\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br></div></div><h2 id=\"常规部署\"> 常规部署</h2>\n<p>请自行百度下载修改配置</p>\n",
      "date_published": "2022-10-03T13:59:35.000Z",
      "date_modified": "2022-10-03T13:59:35.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "题目管理",
      "url": "https://hcode.top/xojbackend-doc/use/import-problem/",
      "id": "https://hcode.top/xojbackend-doc/use/import-problem/",
      "content_html": "<h1 id=\"题目管理\"> 题目管理</h1>\n<h2 id=\"一、xoj题目\"> 一、XOJ题目</h2>\n<p><img src=\"https://img-blog.csdnimg.cn/a283a399fd8b479ca4b0d98581bc826f.png#pic_center\" alt=\"题目管理\" loading=\"lazy\"></p>\n<h4 id=\"_2-导入题目\"> 2. 导入题目</h4>\n<p><img src=\"https://img-blog.csdnimg.cn/2a0bf799b1c64d42873181314f3ba85f.png#pic_center\" alt=\"导入题目\" loading=\"lazy\"></p>\n<p>选择需要导入的题目数据zip压缩包，注意<strong>不要多一层文件夹进行压缩</strong>，<strong>请保证题目json文件的名字与其对应的存放评测数据的文件夹名字一致</strong>，具体文件格式如下：</p>\n<div><pre><code>+-- problem_1000.json\n+-- problem_1000\n|   +-- 1.in\n|   +-- 1.out\n|   +-- ....\n+-- problem_1001.json\n+-- problem_1001\n|   +-- 1.in\n|   +-- 1.out\n|   +-- ....\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br></div></div><h4 id=\"_3-手动添加题目\"> 3. 手动添加题目</h4>\n<p><img src=\"https://img-blog.csdnimg.cn/85d36f94a150409bbf8ee2b5890678db.png#pic_center\" alt=\"添加题目\" loading=\"lazy\"></p>\n<h4 id=\"_4-题目的json文件格式\"> 4. 题目的json文件格式</h4>\n<p>请严格按照以下格式，才可以正常导入。</p>\n<div><pre><code><span>{</span>\n\t\t\t\t<span>\"problemId\"</span><span>:</span> <span>\"xoj_102\"</span><span>,</span>\n\t\t\t\t<span>\"title\"</span><span>:</span> <span>\"两数之差\"</span><span>,</span>\n\t\t\t\t<span>\"author\"</span><span>:</span> <span>\"yuluo\"</span><span>,</span>\n\t\t\t\t<span>\"description\"</span><span>:</span> <span>\"给定一个整数数组 nums 和一个整数目标值 [target]，请你在该数组中找出 和为目标值 [target]  的那 两个 整数，并返回它们的数组下标。你可以假设每种输入只会对应一个答案。但是，数组中同一个元素在答案里不能重复出现。你可以按任意顺序返回答案。\"</span><span>,</span>\n\t\t\t\t<span>\"examples\"</span><span>:</span> <span>\"[{\\\"title\\\":\\\"示例1:\\\",\\\"input\\\":\\\"nums = [2,7,11,15], target = 9\\\",\\\"output\\\":\\\"[0,1]\\\",\\\"explain\\\":\\\"因为 nums[0] + nums[1] == 9 ，返回 [0, 1]。\\\"},{\\\"title\\\":\\\"示例2:\\\",\\\"input\\\":\\\"nums = [3,2,4], target = 6\\\",\\\"output\\\":\\\"[0,1]\\\"},{\\\"title\\\":\\\"示例3:\\\",\\\"input\\\":\\\"nums = [3,3], target = 6\\\",\\\"output\\\":\\\"[0,1]\\\"}]\"</span><span>,</span>\n\t\t\t\t<span>\"source\"</span><span>:</span> <span>\"leetcode\"</span><span>,</span>\n\t\t\t\t<span>\"difficulty\"</span><span>:</span> <span>2</span>\n                <span>}</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br></div></div>",
      "image": "https://img-blog.csdnimg.cn/a283a399fd8b479ca4b0d98581bc826f.png#pic_center",
      "date_published": "2022-10-03T13:59:35.000Z",
      "date_modified": "2022-10-05T13:30:42.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "单体部署③——Redis部署",
      "url": "https://hcode.top/xojbackend-doc/monomer/redis/",
      "id": "https://hcode.top/xojbackend-doc/monomer/redis/",
      "content_html": "<h1 id=\"单体部署3-redis部署\"> 单体部署③——Redis部署</h1>\n<h2 id=\"常规部署\"> 常规部署</h2>\n<h3 id=\"windows部署\"> windows部署</h3>\n<div><p>Info</p>\n<p>下载安装redis，修改用户名和密码连接</p>\n<p>具体方法自行百度or谷歌</p>\n</div>\n<h3 id=\"linux部署\"> Linux部署</h3>\n<div><p>Info</p>\n<p>下载安装redis，修改用户名和密码连接</p>\n<p>具体方法自行百度or谷歌</p>\n</div>\n<h2 id=\"docker部署\"> docker部署</h2>\n<div><pre><code>\n</code></pre>\n<div><span>1</span><br></div></div><p>请自行百度。。</p>\n",
      "date_published": "2022-10-03T13:59:35.000Z",
      "date_modified": "2022-10-05T11:29:49.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "导入用户",
      "url": "https://hcode.top/xojbackend-doc/use/import-user/",
      "id": "https://hcode.top/xojbackend-doc/use/import-user/",
      "content_html": "<h2 id=\"导入用户\"> 导入用户</h2>\n<p><img src=\"https://img-blog.csdnimg.cn/7ba4eb17845b48adbe2ccc18438311c5.png#pic_center\" alt=\"添加用户\" loading=\"lazy\"></p>\n<p><strong>要求如下:</strong></p>\n<div><p>Tips</p>\n<p>管理员导入用户时，只添加部分重要信息，使得用户可以登录系统即可。不做其他内容的添加！</p>\n</div>\n",
      "image": "https://img-blog.csdnimg.cn/7ba4eb17845b48adbe2ccc18438311c5.png#pic_center",
      "date_published": "2022-10-03T13:59:35.000Z",
      "date_modified": "2022-10-05T13:30:42.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "用例模式",
      "url": "https://hcode.top/xojbackend-doc/use/judge-case-mode/",
      "id": "https://hcode.top/xojbackend-doc/use/judge-case-mode/",
      "content_html": "<h1 id=\"用例模式\"> 用例模式</h1>\n<div><p>Info</p>\n<p>​\tHOJ的测试用例评测模式有以下几种：</p>\n<p>​\t<strong>ACM题目</strong>：默认（全部评测）、遇错止评（顺序评测）</p>\n<p>​\t<strong>OI题目</strong>：全部评测（得分加和）、子任务（最低得分）、子任务（平均得分）</p>\n</div>\n<h3 id=\"一、acm题目\"> 一、ACM题目</h3>\n<p><img src=\"https://img-blog.csdnimg.cn/f4f4a8bbe15e4ef1aa766524eaa6fbeb.png\" alt=\"ACM题目\" loading=\"lazy\"></p>\n<h4 id=\"_1-默认-全部评测\"> 1. 默认（全部评测）</h4>\n<div><p>Tips</p>\n<p>​\t用户提交的代码将运行所有的测试用例，然后汇总结果。如果全部测试点都符合预期，则评测状态结果为<strong>Accepted</strong>，否则遍历所有测试点结果，将<strong>第一个</strong>非Accepted的测试点的状态作为最终结果。</p>\n</div>\n<h4 id=\"_2-遇错止评-顺序评测\"> 2. 遇错止评（顺序评测）</h4>\n<div><p>Tips</p>\n<p>​\t用户提交的代码将顺序运行所有测试用例，如果遇到某个测试点的结果（<strong>非Accepted</strong>）不符合预期，则评测结束，将该测试点的评测结果作为最终结果；否则一直遍历全部测试用例评测直至结束。</p>\n</div>\n<h3 id=\"二、oi题目\"> 二、OI题目</h3>\n<p><img src=\"https://img-blog.csdnimg.cn/ecdd9ce03251440d9204bc728ef4d66b.png\" alt=\"OI题目\" loading=\"lazy\"></p>\n<h4 id=\"_1-全部评测-得分加和\"> 1. 全部评测（得分加和）</h4>\n<div><p>Tips</p>\n<p>​\t用户提交的代码将运行所有的测试用例，然后汇总所有评测点的得分和结果。如果全部测试点都符合预期，则评测状态结果为<strong>Accepted</strong>，得分为该题目的满分；否则遍历所有测试点结果，<strong>加和所有测试点的得分</strong>，作为该评测的最终得分。</p>\n</div>\n<h4 id=\"_2-子任务-最低得分\"> 2. 子任务（最低得分）</h4>\n<div><p>Tips</p>\n<p>​\t将全部测试用例按照配置的组数分成多个子任务评测组，每个子任务<strong>求该组测试点的最低得分</strong>，作为该子任务的得分，然后<strong>汇总加和所有子任务组的得分</strong>，作为该评测的最终得分。</p>\n</div>\n<p><img src=\"https://img-blog.csdnimg.cn/6b0404229b894d01aa98ee43bbb4d034.png\" alt=\"子任务\" loading=\"lazy\"></p>\n<h4 id=\"_3-子任务-平均得分\"> 3. 子任务（平均得分）</h4>\n<div><p>Tips</p>\n<p>​\t将全部测试用例按照配置的组数分成多个子任务评测组，每个子任务<strong>加和该组所有测试点的得分求平均分</strong>，作为该子任务的得分，然后<strong>汇总加和所有子任务组的得分</strong>，作为该评测的最终得分。</p>\n</div>\n",
      "image": "https://img-blog.csdnimg.cn/f4f4a8bbe15e4ef1aa766524eaa6fbeb.png",
      "date_published": "2022-10-03T13:59:35.000Z",
      "date_modified": "2022-10-03T13:59:35.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "判题机",
      "url": "https://hcode.top/xojbackend-doc/use/judge-mode/",
      "id": "https://hcode.top/xojbackend-doc/use/judge-mode/",
      "content_html": "<h1 id=\"判题机\"> 判题机</h1>\n<h3 id=\"一、判题机管理\"> 一、判题机管理</h3>\n<p><img src=\"https://img-blog.csdnimg.cn/7d0e31a13e644c4084aaf311adfaeb1f.png#pic_center\" alt=\"判题机\" loading=\"lazy\"></p>\n",
      "image": "https://img-blog.csdnimg.cn/7d0e31a13e644c4084aaf311adfaeb1f.png#pic_center",
      "date_published": "2022-10-03T13:59:35.000Z",
      "date_modified": "2022-10-03T13:59:35.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "公告发布",
      "url": "https://hcode.top/xojbackend-doc/use/notice-announcement/",
      "id": "https://hcode.top/xojbackend-doc/use/notice-announcement/",
      "content_html": "<h1 id=\"公告发布\"> 公告发布</h1>\n<div><p>Tips</p>\n<p>公告只有超级管理员和管理员可以操作</p>\n</div>\n<p><img src=\"https://img-blog.csdnimg.cn/a50375babf0642c78938e1665f4f9c50.png#pic_center\" alt=\"公告发布\" loading=\"lazy\"></p>\n",
      "image": "https://img-blog.csdnimg.cn/a50375babf0642c78938e1665f4f9c50.png#pic_center",
      "date_published": "2022-10-03T13:59:35.000Z",
      "date_modified": "2022-10-05T13:30:42.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "测试用例",
      "url": "https://hcode.top/xojbackend-doc/use/testcase/",
      "id": "https://hcode.top/xojbackend-doc/use/testcase/",
      "content_html": "<h1 id=\"测试用例\"> 测试用例</h1>\n<p><img src=\"https://img-blog.csdnimg.cn/ad4851c069674b30af08f187363906c4.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBASGltaXRfWkg=,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"在这里插入图片描述\" loading=\"lazy\"></p>\n<p><strong>进入后台添加题目，上传题目测试用例数据可以选择手动输入、Zip文件上传两种方式</strong></p>\n<h2 id=\"一、手动输入\"> 一、手动输入</h2>\n<p>每次点击<code>Add Sampple</code>就可以手动填入该用例的输入与输出，该方式比较适合题目数据简单的，同时手动输入的题目数据将记录进数据库，下次对该题目进行修改可以直接获取，然后进行测试数据的修改，同时也会在服务器对应的testcase文件夹生成对应的文件。</p>\n<h2 id=\"二、文件上传\"> 二、文件上传</h2>\n<p>对于普通题目，测试用例文件包括<code>in</code>、<code>out</code>、<code>ans</code>、<code>txt</code>四种拓展名</p>\n<p>例如有两组测试用例，则对于普通题目测试用例的文件名分别为<code>*.in, *.out（*.ans）</code>，或者<code>*input*.txt, *output*.txt</code> ，其他形式的文件后台均不识别。</p>\n<p>压缩时，请将文件都放在压缩包的根目录，而不是包含在某一个文件夹中，比如正确的格式是：</p>\n<div><pre><code>├── <span>1</span>.in          \n├── <span>1</span>.out\n├── <span>2</span>.in\n├── <span>2</span>.out\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><div><pre><code>├── <span>1</span>.in\n├── <span>1</span>.ans\n├── <span>2</span>.in\n├── <span>2</span>.ans\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><p>或者</p>\n<div><pre><code>├── input1.txt          \n├── output1.txt \n├── input2.txt \n├── output2.txt \n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><p>然后压缩测试用例到一个zip中</p>\n<div><p>Warning</p>\n<p><strong>注意：不要在这些文件外面套多一层文件夹，请直接压缩！！！</strong></p>\n</div>\n<div><p>Info</p>\n<p>建议：尽量合并测试用例到一个文件中，减少测试用例组数，这会一定程度上提高判题性能。</p>\n</div>\n",
      "image": "https://img-blog.csdnimg.cn/ad4851c069674b30af08f187363906c4.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBASGltaXRfWkg=,size_20,color_FFFFFF,t_70,g_se,x_16",
      "date_published": "2022-10-03T13:59:35.000Z",
      "date_modified": "2022-10-03T13:59:35.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "训练介绍",
      "url": "https://hcode.top/xojbackend-doc/use/training/",
      "id": "https://hcode.top/xojbackend-doc/use/training/",
      "content_html": "<h1 id=\"训练介绍\"> 训练介绍</h1>\n<div><p>Tips</p>\n<p>训练分为<strong>公开训练</strong>与<strong>私有训练</strong>，同时可自定义训练分类</p>\n<p>两种训练其实都是题单功能，区别在于私有训练拥有记录榜单</p>\n</div>\n<p><img src=\"https://img-blog.csdnimg.cn/00cd359b634e4483a33f26b10c32e4f6.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBASGltaXRfWkg=,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"训练\" loading=\"lazy\"></p>\n<div><p>Note</p>\n<p>在训练题单里面的题目提交情况与公开题库的对应题目的数据一致，所以只能显示公开权限的题目，其功能主要是汇总对应的题型。</p>\n</div>\n<h3 id=\"_1-公开训练\"> 1. 公开训练</h3>\n<ul>\n<li>管理员可在后台添加公开权限的题目，同时能对题目进行排序。</li>\n<li>题目的所有用户提交情况以及用户自身对该题目的提交情况与题目列表的题目数据同步。</li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/04264e545b034296b5a9f130b85dc985.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBASGltaXRfWkg=,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"训练题目列表\" loading=\"lazy\"></p>\n<h3 id=\"_2-私有训练\"> 2. 私有训练</h3>\n<ul>\n<li>管理员可在后台添加公开权限的题目，同时能对题目进行排序。</li>\n<li>题目的所有用户提交情况以及用户自身对该题目的提交情况与题目列表的题目数据同步。</li>\n</ul>\n<p>与<strong>公开训练</strong>的区别：</p>\n<ul>\n<li>非训练创建者和超级管理员访问私有训练需要对应的密码。</li>\n<li><strong>超级管理员与训练创建者的题目提交情况不会计入记录榜单</strong></li>\n<li>系统会同步普通用户对应训练题目的提交情况，生成对应的记录榜单。</li>\n<li>用户在进入私有训练后，只有在训练里面的题目提交，记录榜单才会继续更新记录。</li>\n</ul>\n<p><strong>系统同步用户对应题目数据的情况如下：</strong></p>\n<div><p>Info</p>\n<ul>\n<li>用户第一次输入密码成功后，系统会同步其对应题目的提交情况到榜单。</li>\n<li>后台管理员增加新的题目，系统会同步训练已成功访问的所有用户对应新题目的提交情况。</li>\n<li>后台管理员移除题目，系统会删除对应题目的榜单记录。</li>\n</ul>\n</div>\n<p><img src=\"https://img-blog.csdnimg.cn/66820e0888064a64b7f091ea60cb64b5.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBASGltaXRfWkg=,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"私有训练榜单\" loading=\"lazy\"></p>\n",
      "image": "https://img-blog.csdnimg.cn/00cd359b634e4483a33f26b10c32e4f6.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBASGltaXRfWkg=,size_20,color_FFFFFF,t_70,g_se,x_16",
      "date_published": "2022-10-03T13:59:35.000Z",
      "date_modified": "2022-10-03T13:59:35.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "自定义前端",
      "url": "https://hcode.top/xojbackend-doc/use/update-fe/",
      "id": "https://hcode.top/xojbackend-doc/use/update-fe/",
      "content_html": "<h1 id=\"自定义前端\"> 自定义前端</h1>\n<h2 id=\"一、完全自定义前端\"> 一、完全自定义前端</h2>\n<p>直接下载<a href=\"https://gitee.com/himitzh0730/hoj/tree/master/hoj-vue\" target=\"_blank\" rel=\"noopener noreferrer\">https://gitee.com/himitzh0730/hoj/tree/master/hoj-vue</a></p>\n<p>修改后，使用<code>npm run build</code>，生成一个dist文件夹，结构如下：</p>\n<div><pre><code>dist\n├── index.html\n├── favicon.ico\n└── assets\n    ├── css\n    │   ├── ....\n    ├── fonts\n    │   ├── ....\n    ├── img\n    │   ├── ....\n    ├── js\n    │   ├── ....\n\n....\n....\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br></div></div><p>将 <code>dist</code> 文件夹复制到服务器上某个目录下，比如 <code>/hoj/www/html/dist</code>，然后修改 <code>docker-compose.yml</code>，在 <code>hoj-frontend</code> 模块中的 <code>volumes</code> 中增加一行 <code>- /hoj/www/html/dist:/usr/share/nginx/html</code> （冒号前面的请修改为实际的路径），然后 <code>docker-compose up -d</code> 即可。</p>\n<h2 id=\"二、仅修改图标\"> 二、仅修改图标</h2>\n<div><p>Tips</p>\n<p>如果仅仅只是修改前台logo、管理后台logo和favicon.ico，那么操作如下：</p>\n</div>\n<p>修改 <code>docker-compose.yml</code>，在 <code>hoj-frontend</code> 模块中的 <code>volumes</code> 中添加如下：</p>\n<div><pre><code><span>-</span> ./logo.png<span>:</span>/usr/share/nginx/html/assets/img/logo.a0924d7d.png\n<span>-</span> ./backstage.png<span>:</span>/usr/share/nginx/html/assets/img/backstage.8bce8c6e.png\n<span>-</span> ./favicon.ico<span>:</span>/usr/share/nginx/html/favicon.ico\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br></div></div><p><code>logo.png</code>为前台导航栏左边的logo，<code>backstage.png</code>为后台侧边导航栏上方的logo，<code>favicon.ico</code>为小图标</p>\n<p><strong>图片文件需放在与docker-compose.yml同个目录下，或者提供绝对路径也可。</strong></p>\n",
      "date_published": "2022-10-03T13:59:35.000Z",
      "date_modified": "2022-10-03T13:59:35.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "单体部署⑧——评测数据同步（分布式才需要）",
      "url": "https://hcode.top/xojbackend-doc/monomer/rsync/",
      "id": "https://hcode.top/xojbackend-doc/monomer/rsync/",
      "content_html": "<h1 id=\"单体部署8-评测数据同步-分布式才需要\"> 单体部署⑧——评测数据同步（分布式才需要）</h1>\n<div><p>Tips</p>\n<p>本镜像主要是用在于后端服务与判題服务不在同一机器，为了让题目评测数据从主服务器同步于判題服务所在机器而使用的，也就是分布式部署都需要本服务来同步评测数据，包括多台判题机。</p>\n</div>\n<h2 id=\"一、常规部署\"> 一、常规部署</h2>\n<ol>\n<li>\n<p>在主后台服务开启rsync实现服务增量同步，本HOJ使用子服务器主动拉取最新评测数据的功能（可选择主服务推的功能，但对主服务器的功耗较大）</p>\n</li>\n<li>\n<p>首先在主服务器（运行后端服务）的服务器中配置，指令如下</p>\n<div><pre><code><span>vim</span> /etc/rsyncd/rsyncd.conf <span># 新建配置文件</span>\n</code></pre>\n<div><span>1</span><br></div></div><div><pre><code><span># 将以下内容写入的rsyncd.conf文件里面 然后保存退出</span>\nport <span>=</span> <span>873</span>\nuid <span>=</span> root\ngid <span>=</span> root\nuse <span>chroot</span> <span>=</span> <span>yes</span>\n<span>read</span> only <span>=</span> <span>yes</span>\nlog <span>file</span> <span>=</span> /hoj/log/rsyncd.log\n<span>[</span>testcase<span>]</span>\npath <span>=</span> /hoj/testcase/\nlist <span>=</span> <span>yes</span>\nauth <span>users</span> <span>=</span> hojrsync\nsecrets <span>file</span> <span>=</span> /etc/rsyncd/rsyncd.passwd\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br></div></div><p>再新建密码配置文件</p>\n<div><pre><code><span>vim</span> /etc/rsyncd/rsyncd.passwd\n</code></pre>\n<div><span>1</span><br></div></div><div><pre><code><span># 将以下内容写入rsyncd.passwd文件里面，冒号后面的密码可用自定义，然后保存退出。</span>\nhojrsync:123456\n</code></pre>\n<div><span>1</span><br><span>2</span><br></div></div><p>修改密码配置文件的权限为600</p>\n<div><pre><code><span>chmod</span> <span>600</span> /etc/rsyncd/rsyncd.passwd\n</code></pre>\n<div><span>1</span><br></div></div><p>然后使用命令，使用后台守护进程运行rsync</p>\n<div><pre><code><span>rsync</span> --daemon --config<span>=</span>/etc/rsyncd/rsyncd.conf\n</code></pre>\n<div><span>1</span><br></div></div><p>设置开启自启动</p>\n<div><pre><code><span>echo</span> <span>\"/usr/bin/rsync --daemon --config=/etc/rsyncd/rsyncd.conf\"</span> <span>>></span> /etc/rc.local\n</code></pre>\n<div><span>1</span><br></div></div></li>\n<li>\n<p>之后在运行JudgeServer判题服务的服务器上使用rsync每60秒同步一次指定文件夹的评测数据（同步周期可自己改）</p>\n<p>新建密码配置文件，同时写入与主服务端的rsync一样的密码</p>\n<div><pre><code><span>vim</span> /etc/rsyncd/rsyncd.passwd\n</code></pre>\n<div><span>1</span><br></div></div><div><pre><code><span>123456</span> <span># 保存退出</span>\n</code></pre>\n<div><span>1</span><br></div></div><p>修改密码配置文件的权限为600</p>\n<div><pre><code><span>chmod</span> <span>600</span> /etc/rsyncd/rsyncd.passwd\n</code></pre>\n<div><span>1</span><br></div></div><p>然后编写sh文件</p>\n<div><pre><code><span>vim</span> /etc/rsyncd/rsyncd_slave.sh\n</code></pre>\n<div><span>1</span><br></div></div><p>注意${ip}写自己主服务器的ip</p>\n<div><pre><code><span>while</span> <span>true</span>\n<span>do</span>\n       \t<span>rsync</span> -avz --delete --progress --password-file<span>=</span>/etc/rsyncd/rsyncd.passwd hojrsync@<span>${ip}</span>::testcase /hoj/testcase <span>>></span> /hoj/log/rsync_slave.log\n       \t<span>sleep</span> <span>60</span>\n<span>done</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><p>使用 nohup后台运行即可</p>\n<div><pre><code><span>nohup</span> /etc/rsyncd/rsyncd_slave.sh <span>&amp;</span>\n</code></pre>\n<div><span>1</span><br></div></div></li>\n</ol>\n<h2 id=\"二、docker部署\"> 二、docker部署</h2>\n<h3 id=\"前言\"> 前言</h3>\n<p>直接下载部署项目，进入到当前文件夹执行打包命令</p>\n<div><pre><code><span>git</span> clone https://gitee.com/himitzh0730/hoj-deploy.git <span>&amp;&amp;</span> <span>cd</span> hoj-deploy/src/rsync\n</code></pre>\n<div><span>1</span><br></div></div><p>当前文件夹为打包<code>hoj-rsync</code>镜像的相关文件，将这些文件复制到同一个文件夹内，之后执行以下命令进行打包成镜像.</p>\n<div><pre><code><span>docker</span> build -t hoj-rsync <span>.</span>\n</code></pre>\n<div><span>1</span><br></div></div><p><strong>该服务用于测试用例数据在不同服务器之间的同步</strong></p>\n<p>docker run启动</p>\n<ul>\n<li>\n<p>主服务器（Backend所在服务器）</p>\n<div><pre><code><span>docker</span> run -d --name hoj-rsync <span>\\</span>\n-v ./hoj/testcase:/hoj/testcase:ro <span>\\</span>\n-e <span>RSYNC_MODE</span><span>=</span>master <span>\\</span>\n-e <span>RSYNC_USER</span><span>=</span>hojrsync <span>\\</span>\n-e <span>RSYNC_PASSWORD</span><span>=</span>hoj123456 <span>\\</span>\n-p <span>873</span>:873 <span>\\</span>\n--restart<span>=</span>always <span>\\</span>\nhoj-rsync\n<span># registry.cn-shenzhen.aliyuncs.com/hcode/hoj_rsync:1.0</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br></div></div></li>\n<li>\n<p>从服务器（Judgeserver所在的服务器）</p>\n<div><pre><code><span>docker</span> run -d --name hoj-rsync <span>\\</span>\n-v ./hoj/testcase:/hoj/testcase <span>\\</span>\n-e <span>RSYNC_MODE</span><span>=</span>slave <span>\\</span>\n-e <span>RSYNC_USER</span><span>=</span>hojrsync <span>\\</span>\n-e <span>RSYNC_PASSWORD</span><span>=</span>hoj123456 <span>\\</span>\n-e <span>RSYNC_MASTER_ADDR</span><span>=</span>master_server_ip <span>\\</span>\n-p <span>873</span>:873 <span>\\</span>\n--restart<span>=</span>always <span>\\</span>\nhoj-rsync\n<span># registry.cn-shenzhen.aliyuncs.com/hcode/hoj_rsync:1.0</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br></div></div></li>\n</ul>\n<p>docker-compose启动</p>\n<ul>\n<li>\n<p>主服务器（Backend所在服务器）</p>\n<div><pre><code><span>version</span><span>:</span> <span>\"3\"</span>\n<span>services</span><span>:</span>\n  <span>hoj-rsync-master</span><span>:</span>\n<span>#    image: registry.cn-shenzhen.aliyuncs.com/hcode/hoj_rsync:1.0</span>\n    <span>image</span><span>:</span> hoj<span>-</span>rsync\n    <span>container_name</span><span>:</span> hoj<span>-</span>rsync<span>-</span>master\n    <span>volumes</span><span>:</span>\n      <span>-</span> ./hoj/testcase<span>:</span>/hoj/testcase<span>:</span>ro\n    <span>environment</span><span>:</span>\n      <span>-</span> RSYNC_MODE=master <span># 当前为slave主服务</span>\n      <span>-</span> RSYNC_USER=hojrsync <span># 请勿修改</span>\n      <span>-</span> RSYNC_PASSWORD=hoj123456 <span># 请修改数据同步密码</span>\n    <span>ports</span><span>:</span>\n      <span>-</span> <span>\"0.0.0.0:873:873\"</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br></div></div></li>\n<li>\n<p>从服务器（Judgeserver所在的服务器）</p>\n<div><pre><code><span>version</span><span>:</span> <span>\"3\"</span>\n<span>services</span><span>:</span>\n  <span>hoj-rsync-slave</span><span>:</span>\n<span>#    image: registry.cn-shenzhen.aliyuncs.com/hcode/hoj_rsync:1.0</span>\n    <span>image</span><span>:</span> hoj<span>-</span>rsync\n    <span>container_name</span><span>:</span> hoj<span>-</span>rsync<span>-</span>slave\n    <span>restart</span><span>:</span> always\n    <span>volumes</span><span>:</span>\n      <span>-</span> ./judge/test_case<span>:</span>/hoj/testcase\n      <span>-</span> ./judge/log<span>:</span>/hoj/log\n    <span>environment</span><span>:</span>\n      <span>-</span> RSYNC_MODE=slave <span># 当前为slave从服务</span>\n      <span>-</span> RSYNC_USER=hojrsync <span># 请勿修改</span>\n      <span>-</span> RSYNC_PASSWORD=hoj123456 <span># 与主服务器的rsync的密码一致</span>\n      <span>-</span> RSYNC_MASTER_ADDR=master_server_ip <span># 主服务器ip</span>\n    <span>ports</span><span>:</span>\n      <span>-</span> <span>\"0.0.0.0:873:873\"</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br></div></div></li>\n</ul>\n<h3 id=\"文件介绍\"> 文件介绍</h3>\n<h4 id=\"_1-rsync-conf\"> 1. rsync.conf</h4>\n<p>主服务器的rsync配置文件</p>\n<div><pre><code>port <span>=</span> <span>873</span>\nuid <span>=</span> root\ngid <span>=</span> root\nuse <span>chroot</span> <span>=</span> <span>yes</span>\n<span>read</span> only <span>=</span> <span>yes</span>\nlog <span>file</span> <span>=</span> /hoj/log/rsyncd.log\n<span>[</span>testcase<span>]</span>\npath <span>=</span> /hoj/testcase/\nlist <span>=</span> <span>yes</span>\nauth <span>users</span> <span>=</span> hojrsync\nsecrets <span>file</span> <span>=</span> /hoj/rsyncd/rsyncd.passwd\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></div></div><h4 id=\"_2-run-sh\"> 2. run.sh</h4>\n<p>根据<code>$RSYNC_MODE</code>环境变量启动不同模式的rsync服务</p>\n<div><pre><code><span>#!/usr/bin/bash</span>\n<span>if</span> <span>[</span> <span>\"<span>$RSYNC_MODE</span>\"</span> <span>==</span> <span>\"master\"</span> <span>]</span><span>;</span> <span>then</span>\n\t<span>echo</span> <span>\"<span>$RSYNC_USER</span>:<span>$RSYNC_PASSWORD</span>\"</span> <span>></span> /hoj/rsyncd/rsyncd_master.passwd\n\t<span>chmod</span> <span>600</span> /hoj/rsyncd/rsyncd_master.passwd\n\t<span>rsync</span> --daemon --config<span>=</span>/hoj/rsyncd/rsyncd.conf\n<span>else</span>\n\t<span>echo</span> <span>\"<span>$RSYNC_PASSWORD</span>\"</span> <span>></span> /hoj/rsyncd/rsyncd_slave.passwd\n\t<span>chmod</span> <span>600</span> /hoj/rsyncd/rsyncd_slave.passwd\n\t<span>while</span> <span>true</span>\n\t<span>do</span>\n\t\t<span>rsync</span> -avz --delete --progress --password-file<span>=</span>/hoj/rsyncd/rsyncd_slave.passwd <span>$RSYNC_USER</span>@<span>$RSYNC_MASTER_ADDR</span>::testcase /hoj/testcase <span>>></span> /hoj/log/rsync_slave.log\n\t\t<span>sleep</span> <span>100</span>\n\t<span>done</span>\n<span>fi</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br></div></div><h4 id=\"_3-dockerfile\"> 3. Dockerfile</h4>\n<div><pre><code><span><span>FROM</span> ubuntu:18.04</span>\n\n<span><span>RUN</span> apt-get update &amp;&amp; apt-get -y install rsync</span>\n\n<span><span>RUN</span> mkdir -p /hoj/rsyncd</span>\n\n<span><span>COPY</span> run.sh /hoj/rsyncd/run.sh</span>\n\n<span><span>COPY</span> rsyncd.conf /hoj/rsyncd/rsyncd.conf</span>\n\n<span><span>CMD</span> /bin/bash /hoj/rsyncd/run.sh</span>\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></div></div>",
      "date_published": "2022-10-03T13:59:35.000Z",
      "date_modified": "2022-10-03T13:59:35.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "自定义题目难度",
      "url": "https://hcode.top/xojbackend-doc/use/custom-difficulty/",
      "id": "https://hcode.top/xojbackend-doc/use/custom-difficulty/",
      "content_html": "<h1 id=\"自定义题目难度\"> 自定义题目难度</h1>\n<div><p>Tips</p>\n<p>由于题目的难度是由前端代码决定<strong>显示文本与背景颜色</strong>的，所以想要修改或增删难度需要自定义前端，那么首先得知道如何<strong>自定义前端</strong>，<a href=\"/use/update-fe/\">请点击查看</a></p>\n</div>\n<p>接着，找到<code>/hoj-vue/src/common/constants.js</code>的文件，修改里面的难度常量代码<code>PROBLEM_LEVEL</code>如下，修改完后，请自行build前端项目生成dist的静态文件夹，上传到服务器后，修改挂载，重启hoj-frontend容器即可，重启完后，浏览器可能有缓存，多刷新即可！！！</p>\n<div><pre><code><span>export</span> <span>const</span> <span>PROBLEM_LEVEL</span><span>=</span><span>{</span>\n  <span>'0'</span><span>:</span><span>{</span>\n    <span>name</span><span>:</span><span>{</span>\n      <span>'zh-CN'</span><span>:</span><span>'简单'</span><span>,</span> <span>// 中文文本显示</span>\n      <span>'en-US'</span><span>:</span><span>'Easy'</span><span>,</span> <span>// 英文文本显示</span>\n    <span>}</span><span>,</span>\n    <span>color</span><span>:</span><span>'#19be6b'</span>  <span>// 背景颜色</span>\n  <span>}</span><span>,</span>\n  <span>'1'</span><span>:</span><span>{</span>\n    <span>name</span><span>:</span><span>{</span>\n      <span>'zh-CN'</span><span>:</span><span>'中等'</span><span>,</span>\n      <span>'en-US'</span><span>:</span><span>'Mid'</span><span>,</span>\n    <span>}</span><span>,</span>\n    <span>color</span><span>:</span><span>'#2d8cf0'</span>\n  <span>}</span><span>,</span>\n  <span>'2'</span><span>:</span><span>{</span>\n    <span>name</span><span>:</span><span>{</span>\n      <span>'zh-CN'</span><span>:</span><span>'困难'</span><span>,</span>\n      <span>'en-US'</span><span>:</span><span>'Hard'</span><span>,</span>\n    <span>}</span><span>,</span>\n    <span>color</span><span>:</span><span>'#ed3f14'</span>\n  <span>}</span>\n<span>}</span>\n\n</code></pre>\n<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br></div></div><div><p>Note</p>\n<p>注意：每个OI题目的得分计算公式为：(总得分×0.1+难度×2)×(通过测试点数÷总测试点数)，所以上面代码中的数字会影响OI题目得分，请尽量合理使用正整数！！！</p>\n</div>\n",
      "date_published": "2022-10-03T13:59:35.000Z",
      "date_modified": "2022-10-03T13:59:35.000Z",
      "authors": [],
      "tags": []
    },
    {
      "title": "团队介绍",
      "url": "https://hcode.top/xojbackend-doc/use/group/",
      "id": "https://hcode.top/xojbackend-doc/use/group/",
      "content_html": "<h1 id=\"团队介绍\"> 团队介绍</h1>\n<p>团队可以看做是一个独立的小HOJ，里面包含了现有HOJ的题目、训练、比赛、评测、讨论、公告、排名等功能，其中各个团队的数据与HOJ主站的数据已做了<strong>完全隔离</strong>，各个团队可以自定义属于自己的题目、比赛、训练等，其中目前<strong>支持团队中的题目申请公开到主题库</strong>！</p>\n<div><p>Info</p>\n<p>团队分为公开团队、保护团队、私有团队</p>\n<ul>\n<li><strong>公开团队</strong>：加入无需申请</li>\n<li><strong>保护团队</strong>：加入需要申请</li>\n<li><strong>私有团队</strong>： 需要邀请码才能申请加入</li>\n</ul>\n</div>\n<h3 id=\"一、创建团队\"> 一、创建团队</h3>\n<div><p>Note</p>\n<p>以下限制只对非普通管理员、题目管理员、超级管理员的普通用户：</p>\n<ul>\n<li>\n<p>每个用户<u>创建</u>团队的前提为通过<strong>20</strong>道题目</p>\n</li>\n<li>\n<p>每个用户<u>每天</u>可以创建的团队数量为<strong>2</strong>个</p>\n</li>\n<li>\n<p>每个用户<u>总共</u>可以创建的团队数量为<strong>5</strong>个</p>\n</li>\n</ul>\n</div>\n<ol>\n<li>用户在登录之后，便可以创建团队</li>\n</ol>\n<p><img src=\"https://img-blog.csdnimg.cn/85647edc236f41ca8b9ab5b8088a7ec1.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBASGltaXRfWkg=,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"创建题目\" loading=\"lazy\"></p>\n<ol start=\"2\">\n<li>输入团队的名称、简称、简介、描述，选择权限和是否显示即可创建属于自己的团队！</li>\n</ol>\n<p><img src=\"https://img-blog.csdnimg.cn/8f2c0007609d41258683dd99bb79a5b4.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBASGltaXRfWkg=,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"创建团队\" loading=\"lazy\"></p>\n<h3 id=\"二、加入团队\"> 二、加入团队</h3>\n<p>用户登录后，点击指定的团队进入团队主页，点击右侧的申请加入即可加入团队。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/9f01f31f11f849f998530ee967befee8.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBASGltaXRfWkg=,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"加入团队\" loading=\"lazy\"></p>\n<ul>\n<li>对于公开团队是直接加入，无需团队管理员审批！</li>\n<li>对于保护团队需要输入加入理由，等待团队管理员审批！</li>\n<li>对于私有团队需要输入正确的邀请码和加入理由，等待团队管理员审批！</li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/6272d213a07746f8a10a791105a45385.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBASGltaXRfWkg=,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"加入团队\" loading=\"lazy\"></p>\n<h3 id=\"三、管理团队\"> 三、管理团队</h3>\n<div><p>Warning</p>\n<p>团队角色分为：</p>\n<ol>\n<li><strong>申请中</strong></li>\n<li><strong>申请被拒绝</strong></li>\n<li><strong>普通成员</strong></li>\n<li><strong>管理员</strong></li>\n<li><strong>超级管理员（创建团队的Owner也是超管）</strong></li>\n</ol>\n<p>注意：主站的超级管理员与创建团队的Owner拥有同等最高权限，拥有解散团队的权限</p>\n</div>\n<ul>\n<li>在团队比赛中：比赛创建者、团队超管、主站超管不纳入排行榜计算</li>\n<li>在私有训练中：比赛创建者、团队超管、主站超管不纳入记录榜单计算</li>\n<li>在团队信息中：团队Owner、主站超管才可以更新团队信息</li>\n<li>团队管理员、团队超级管理员、主站超管可以管理题目、管理训练、管理比赛、管理公告</li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/6af22926b39149bd8a1314d60b3deb00.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBASGltaXRfWkg=,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"团队\" loading=\"lazy\"></p>\n<h3 id=\"四、申请公开题目\"> 四、申请公开题目</h3>\n<p>团队管理员、团队超级管理员、主站超管可以点击团队内的题目管理，选择需要公开到主站题库的团队题目，点击申请即可。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/750af961bd6f4e53be21037944d092ff.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBASGltaXRfWkg=,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"申请公开题目\" loading=\"lazy\"></p>\n<p>申请后，会发消息告知主站的超级管理员和题目管理员对题目进行审批，管理员则可以在后台进行审批，审批通过的团队题目则会加入到主题库中。</p>\n<p><strong>注意：团队题目的统计数据、用户的提交数据在团队内和主站中的数据是隔离的！</strong></p>\n<p><img src=\"https://img-blog.csdnimg.cn/f7207bbef5f64aa5b313de27615a48c7.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBASGltaXRfWkg=,size_20,color_FFFFFF,t_70,g_se,x_16\" alt=\"审批团队题目\" loading=\"lazy\"></p>\n",
      "image": "https://img-blog.csdnimg.cn/85647edc236f41ca8b9ab5b8088a7ec1.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBASGltaXRfWkg=,size_20,color_FFFFFF,t_70,g_se,x_16",
      "date_published": "2022-10-03T13:59:35.000Z",
      "date_modified": "2022-10-03T13:59:35.000Z",
      "authors": [],
      "tags": []
    }
  ]
}